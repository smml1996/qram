; selfie.cs.uni-salzburg.at

; BTOR2 examples/symbolic/division-by-zero-3-35.btor2 generated by ./beator
; with --linear-address-space
; with --heap-allowance 0
; with --stack-allowance 0
; with --MMURAM

; RISC-V code obtained from examples/symbolic/division-by-zero-3-35.c and invoked as: examples/symbolic/division-by-zero-3-35.c
; with --constant-propagation

1 sort bitvec 1 ; Boolean
2 sort bitvec 64 ; 64-bit machine word

4 sort bitvec 29 ; 29-bit linear address

6 sort bitvec 5 ; 5-bit physical address

; 136B total memory, 8B data, 8B heap (8B,0B), 120B stack (120B,0B)

10 zero 1
11 one 1

20 zero 2
21 one 2
22 constd 2 2
23 constd 2 3
24 constd 2 4
25 constd 2 5
26 constd 2 6
27 constd 2 7
28 constd 2 8

; start of data segment in 64-bit virtual memory
30 constd 2 69632 ; 0x11000
; end of data segment in 64-bit virtual memory
31 constd 2 69640 ; 0x11008

; start of heap segment in 64-bit virtual memory (initial program break)
32 constd 2 73728 ; 0x12000
; current end of heap segment in 64-bit virtual memory (current program break)
33 constd 2 73736 ; 0x12008

; allowed end of heap segment in 64-bit virtual memory (with 0B allowance)
34 constd 2 73736 ; 0x12008
; allowed start of stack segment in 64-bit virtual memory (with 0B allowance)
35 constd 2 4294967176 ; 0xFFFFFF88

; start of data segment in 29-bit linear memory
40 constd 4 8704 ; 0x2200
; end of data segment in 29-bit linear memory
41 constd 4 8705 ; 0x2201

; start of heap segment in 29-bit linear memory (initial program break)
42 constd 4 9216 ; 0x2400
; current end of heap segment in 29-bit linear memory (current program break)
43 constd 4 9217 ; 0x2401

; allowed end of heap segment in 29-bit linear memory (with 0B allowance)
44 constd 4 9217 ; 0x2401
; allowed start of stack segment in 29-bit linear memory (with 0B allowance)
45 constd 4 536870897 ; 0x1FFFFFF1

; highest address in 32-bit virtual address space (4GB)

50 constd 2 4294967288 ; 0xFFFFFFF8

; kernel-mode flag

60 state 1 kernel-mode
61 init 1 60 10 kernel-mode ; initial value is false
62 not 1 60

; unsigned-extended inputs for byte-wise reading

71 sort bitvec 8 ; 1 byte
72 sort bitvec 16 ; 2 bytes
73 sort bitvec 24 ; 3 bytes
74 sort bitvec 32 ; 4 bytes
75 sort bitvec 40 ; 5 bytes
76 sort bitvec 48 ; 6 bytes
77 sort bitvec 56 ; 7 bytes

81 input 71 1-byte-input
82 input 72 2-byte-input
83 input 73 3-byte-input
84 input 74 4-byte-input
85 input 75 5-byte-input
86 input 76 6-byte-input
87 input 77 7-byte-input

91 uext 2 81 56 ; uext-1-byte-input
92 uext 2 82 48 ; uext-2-byte-input
93 uext 2 83 40 ; uext-3-byte-input
94 uext 2 84 32 ; uext-4-byte-input
95 uext 2 85 24 ; uext-5-byte-input
96 uext 2 86 16 ; uext-6-byte-input
97 uext 2 87 8 ; uext-7-byte-input
98 input 2 8-byte-input

; 32 64-bit general-purpose registers

; non-zero initial register values

101 constd 2 65952 ; 0x101A0 for ra
102 constd 2 4294967176 ; 0xFFFFFF88 for sp
103 constd 2 69640 ; 0x11008 for gp
105 constd 2 1 ; 0x1 for t0
108 constd 2 4294967192 ; 0xFFFFFF98 for s0
111 constd 2 73728 ; 0x12000 for a1
112 constd 2 1 ; 0x1 for a2
116 constd 2 105553168089088 ; 0x60000316C000 for a6
117 constd 2 63 ; 0x3F for a7

; registers

200 zero 2 zero ; register $0 is always 0
201 state 2 ra ; register $1
202 state 2 sp ; register $2
203 state 2 gp ; register $3
204 state 2 tp ; register $4
205 state 2 t0 ; register $5
206 state 2 t1 ; register $6
207 state 2 t2 ; register $7
208 state 2 s0 ; register $8
209 state 2 s1 ; register $9
210 state 2 a0 ; register $10
211 state 2 a1 ; register $11
212 state 2 a2 ; register $12
213 state 2 a3 ; register $13
214 state 2 a4 ; register $14
215 state 2 a5 ; register $15
216 state 2 a6 ; register $16
217 state 2 a7 ; register $17
218 state 2 s2 ; register $18
219 state 2 s3 ; register $19
220 state 2 s4 ; register $20
221 state 2 s5 ; register $21
222 state 2 s6 ; register $22
223 state 2 s7 ; register $23
224 state 2 s8 ; register $24
225 state 2 s9 ; register $25
226 state 2 s10 ; register $26
227 state 2 s11 ; register $27
228 state 2 t3 ; register $28
229 state 2 t4 ; register $29
230 state 2 t5 ; register $30
231 state 2 t6 ; register $31

; initializing registers

301 init 2 201 101 ra ; initial value is 65952
302 init 2 202 102 sp ; initial value is 4294967176
303 init 2 203 103 gp ; initial value is 69640
304 init 2 204 20 tp ; initial value is 0
305 init 2 205 105 t0 ; initial value is 1
306 init 2 206 20 t1 ; initial value is 0
307 init 2 207 20 t2 ; initial value is 0
308 init 2 208 108 s0 ; initial value is 4294967192
309 init 2 209 20 s1 ; initial value is 0
310 init 2 210 20 a0 ; initial value is 0
311 init 2 211 111 a1 ; initial value is 73728
312 init 2 212 112 a2 ; initial value is 1
313 init 2 213 20 a3 ; initial value is 0
314 init 2 214 20 a4 ; initial value is 0
315 init 2 215 20 a5 ; initial value is 0
316 init 2 216 116 a6 ; initial value is 105553168089088
317 init 2 217 117 a7 ; initial value is 63
318 init 2 218 20 s2 ; initial value is 0
319 init 2 219 20 s3 ; initial value is 0
320 init 2 220 20 s4 ; initial value is 0
321 init 2 221 20 s5 ; initial value is 0
322 init 2 222 20 s6 ; initial value is 0
323 init 2 223 20 s7 ; initial value is 0
324 init 2 224 20 s8 ; initial value is 0
325 init 2 225 20 s9 ; initial value is 0
326 init 2 226 20 s10 ; initial value is 0
327 init 2 227 20 s11 ; initial value is 0
328 init 2 228 20 t3 ; initial value is 0
329 init 2 229 20 t4 ; initial value is 0
330 init 2 230 20 t5 ; initial value is 0
331 init 2 231 20 t6 ; initial value is 0

; 64-bit program counter encoded in Boolean flags

; 16553600 unreachable state at 10000
; 16554000 unreachable state at 10004
; 16554400 unreachable state at 10008
; 16554800 unreachable state at 1000C
; 16555200 unreachable state at 10010
; 16555600 unreachable state at 10014
; 16556000 unreachable state at 10018
; 16556400 unreachable state at 1001C
; 16556800 unreachable state at 10020
; 16557200 unreachable state at 10024
; 16557600 unreachable state at 10028
; 16558000 unreachable state at 1002C
; 16558400 unreachable state at 10030
; 16558800 unreachable state at 10034
; 16559200 unreachable state at 10038
; 16559600 unreachable state at 1003C
; 16560000 unreachable state at 10040
; 16560400 unreachable state at 10044
; 16560800 unreachable state at 10048
; 16561200 unreachable state at 1004C
16561600 state 1 pc=0x10050
16561601 init 1 16561600 10
16562000 state 1 pc=0x10054
16562001 init 1 16562000 10
16562400 state 1 pc=0x10058
16562401 init 1 16562400 10
16562800 state 1 pc=0x1005C
16562801 init 1 16562800 10
16563200 state 1 pc=0x10060
16563201 init 1 16563200 10
16563600 state 1 pc=0x10064
16563601 init 1 16563600 10
; 16564000 unreachable state at 10068
; 16564400 unreachable state at 1006C
; 16564800 unreachable state at 10070
; 16565200 unreachable state at 10074
; 16565600 unreachable state at 10078
; 16566000 unreachable state at 1007C
; 16566400 unreachable state at 10080
16566800 state 1 pc=0x10084
16566801 init 1 16566800 11 ; initial program counter
16567200 state 1 pc=0x10088
16567201 init 1 16567200 10
; 16567600 unreachable state at 1008C
; 16568000 unreachable state at 10090
; 16568400 unreachable state at 10094
; 16568800 unreachable state at 10098
; 16569200 unreachable state at 1009C
; 16569600 unreachable state at 100A0
; 16570000 unreachable state at 100A4
; 16570400 unreachable state at 100A8
; 16570800 unreachable state at 100AC
; 16571200 unreachable state at 100B0
; 16571600 unreachable state at 100B4
; 16572000 unreachable state at 100B8
; 16572400 unreachable state at 100BC
; 16572800 unreachable state at 100C0
; 16573200 unreachable state at 100C4
; 16573600 unreachable state at 100C8
; 16574000 unreachable state at 100CC
; 16574400 unreachable state at 100D0
; 16574800 unreachable state at 100D4
; 16575200 unreachable state at 100D8
; 16575600 unreachable state at 100DC
; 16576000 unreachable state at 100E0
; 16576400 unreachable state at 100E4
; 16576800 unreachable state at 100E8
; 16577200 unreachable state at 100EC
; 16577600 unreachable state at 100F0
; 16578000 unreachable state at 100F4
; 16578400 unreachable state at 100F8
; 16578800 unreachable state at 100FC
; 16579200 unreachable state at 10100
; 16579600 unreachable state at 10104
; 16580000 unreachable state at 10108
; 16580400 unreachable state at 1010C
; 16580800 unreachable state at 10110
; 16581200 unreachable state at 10114
; 16581600 unreachable state at 10118
; 16582000 unreachable state at 1011C
; 16582400 unreachable state at 10120
; 16582800 unreachable state at 10124
; 16583200 unreachable state at 10128
; 16583600 unreachable state at 1012C
; 16584000 unreachable state at 10130
; 16584400 unreachable state at 10134
; 16584800 unreachable state at 10138
; 16585200 unreachable state at 1013C
; 16585600 unreachable state at 10140
; 16586000 unreachable state at 10144
; 16586400 unreachable state at 10148
; 16586800 unreachable state at 1014C
; 16587200 unreachable state at 10150
; 16587600 unreachable state at 10154
; 16588000 unreachable state at 10158
; 16588400 unreachable state at 1015C
; 16588800 unreachable state at 10160
; 16589200 unreachable state at 10164
; 16589600 unreachable state at 10168
; 16590000 unreachable state at 1016C
; 16590400 unreachable state at 10170
; 16590800 unreachable state at 10174
; 16591200 unreachable state at 10178
; 16591600 unreachable state at 1017C
; 16592000 unreachable state at 10180
; 16592400 unreachable state at 10184
; 16592800 unreachable state at 10188
; 16593200 unreachable state at 1018C
; 16593600 unreachable state at 10190
; 16594000 unreachable state at 10194
; 16594400 unreachable state at 10198
; 16594800 unreachable state at 1019C
16595200 state 1 pc=0x101A0
16595201 init 1 16595200 10
16595600 state 1 pc=0x101A4
16595601 init 1 16595600 10
16596000 state 1 pc=0x101A8
16596001 init 1 16596000 10
16596400 state 1 pc=0x101AC
16596401 init 1 16596400 10
16596800 state 1 pc=0x101B0
16596801 init 1 16596800 10
16597200 state 1 pc=0x101B4
16597201 init 1 16597200 10
16597600 state 1 pc=0x101B8
16597601 init 1 16597600 10
16598000 state 1 pc=0x101BC
16598001 init 1 16598000 10
16598400 state 1 pc=0x101C0
16598401 init 1 16598400 10
16598800 state 1 pc=0x101C4
16598801 init 1 16598800 10
16599200 state 1 pc=0x101C8
16599201 init 1 16599200 10
16599600 state 1 pc=0x101CC
16599601 init 1 16599600 10
16600000 state 1 pc=0x101D0
16600001 init 1 16600000 10
16600400 state 1 pc=0x101D4
16600401 init 1 16600400 10
16600800 state 1 pc=0x101D8
16600801 init 1 16600800 10
16601200 state 1 pc=0x101DC
16601201 init 1 16601200 10
16601600 state 1 pc=0x101E0
16601601 init 1 16601600 10
16602000 state 1 pc=0x101E4
16602001 init 1 16602000 10
16602400 state 1 pc=0x101E8
16602401 init 1 16602400 10
16602800 state 1 pc=0x101EC
16602801 init 1 16602800 10
16603200 state 1 pc=0x101F0
16603201 init 1 16603200 10
16603600 state 1 pc=0x101F4
16603601 init 1 16603600 10
16604000 state 1 pc=0x101F8
16604001 init 1 16604000 10
16604400 state 1 pc=0x101FC
16604401 init 1 16604400 10
16604800 state 1 pc=0x10200
16604801 init 1 16604800 10
16605200 state 1 pc=0x10204
16605201 init 1 16605200 10
16605600 state 1 pc=0x10208
16605601 init 1 16605600 10
16606000 state 1 pc=0x1020C
16606001 init 1 16606000 10
16606400 state 1 pc=0x10210
16606401 init 1 16606400 10
16606800 state 1 pc=0x10214
16606801 init 1 16606800 10
16607200 state 1 pc=0x10218
16607201 init 1 16607200 10
16607600 state 1 pc=0x1021C
16607601 init 1 16607600 10
16608000 state 1 pc=0x10220
16608001 init 1 16608000 10
16608400 state 1 pc=0x10224
16608401 init 1 16608400 10
16608800 state 1 pc=0x10228
16608801 init 1 16608800 10
16609200 state 1 pc=0x1022C
16609201 init 1 16609200 10
; 16609600 unreachable state at 10230
16610000 state 1 pc=0x10234
16610001 init 1 16610000 10
16610400 state 1 pc=0x10238
16610401 init 1 16610400 10
16610800 state 1 pc=0x1023C
16610801 init 1 16610800 10
16611200 state 1 pc=0x10240
16611201 init 1 16611200 10
16611600 state 1 pc=0x10244
16611601 init 1 16611600 10
16612000 state 1 pc=0x10248
16612001 init 1 16612000 10
16612400 state 1 pc=0x1024C
16612401 init 1 16612400 10
16612800 state 1 pc=0x10250
16612801 init 1 16612800 10
16613200 state 1 pc=0x10254
16613201 init 1 16613200 10

; 5-bit physical memory

; data segment

20000000 constd 4 8704 ; 0x2200 laddr, 0x11000 vaddr
20000001 constd 2 73736 ; 0x12008 word
20000002 state 2 RAM-word-0
20000003 init 2 20000002 20000001

; heap segment

20000100 constd 4 9216 ; 0x2400 laddr, 0x12000 vaddr
20000102 state 2 RAM-word-1
20000103 init 2 20000102 20

; stack segment

20000200 constd 4 536870897 ; 0x1FFFFFF1 laddr, 0xFFFFFF88 vaddr
20000201 constd 2 73728 ; 0x12000 word
20000202 state 2 RAM-word-2
20000203 init 2 20000202 20000201
20000300 constd 4 536870898 ; 0x1FFFFFF2 laddr, 0xFFFFFF90 vaddr
20000302 state 2 RAM-word-3
20000303 init 2 20000302 20
20000400 constd 4 536870899 ; 0x1FFFFFF3 laddr, 0xFFFFFF98 vaddr
20000402 state 2 RAM-word-4
20000403 init 2 20000402 20
20000500 constd 4 536870900 ; 0x1FFFFFF4 laddr, 0xFFFFFFA0 vaddr
20000501 constd 2 65616 ; 0x10050 word
20000502 state 2 RAM-word-5
20000503 init 2 20000502 20000501
20000600 constd 4 536870901 ; 0x1FFFFFF5 laddr, 0xFFFFFFA8 vaddr
20000601 constd 2 1 ; 0x1 word
20000602 state 2 RAM-word-6
20000603 init 2 20000602 20000601
20000700 constd 4 536870902 ; 0x1FFFFFF6 laddr, 0xFFFFFFB0 vaddr
20000701 constd 2 4294967224 ; 0xFFFFFFB8 word
20000702 state 2 RAM-word-7
20000703 init 2 20000702 20000701
20000800 constd 4 536870903 ; 0x1FFFFFF7 laddr, 0xFFFFFFB8 vaddr
20000801 constd 2 4294967248 ; 0xFFFFFFD0 word
20000802 state 2 RAM-word-8
20000803 init 2 20000802 20000801
20000900 constd 4 536870904 ; 0x1FFFFFF8 laddr, 0xFFFFFFC0 vaddr
20000902 state 2 RAM-word-9
20000903 init 2 20000902 20
20001000 constd 4 536870905 ; 0x1FFFFFF9 laddr, 0xFFFFFFC8 vaddr
20001002 state 2 RAM-word-10
20001003 init 2 20001002 20
20001100 constd 4 536870906 ; 0x1FFFFFFA laddr, 0xFFFFFFD0 vaddr
20001101 constd 2 8315171517136730213 ; 0x73656C706D617865 word
20001102 state 2 RAM-word-11
20001103 init 2 20001102 20001101
20001200 constd 4 536870907 ; 0x1FFFFFFB laddr, 0xFFFFFFD8 vaddr
20001201 constd 2 7596569140001338159 ; 0x696C6F626D79732F word
20001202 state 2 RAM-word-12
20001203 init 2 20001202 20001201
20001300 constd 4 536870908 ; 0x1FFFFFFC laddr, 0xFFFFFFE0 vaddr
20001301 constd 2 7598532953599389539 ; 0x6973697669642F63 word
20001302 state 2 RAM-word-13
20001303 init 2 20001302 20001301
20001400 constd 4 536870909 ; 0x1FFFFFFD laddr, 0xFFFFFFE8 vaddr
20001401 constd 2 7312206944350858863 ; 0x657A2D79622D6E6F word
20001402 state 2 RAM-word-14
20001403 init 2 20001402 20001401
20001500 constd 4 536870910 ; 0x1FFFFFFE laddr, 0xFFFFFFF0 vaddr
20001501 constd 2 3329623768735510386 ; 0x2E35332D332D6F72 word
20001502 state 2 RAM-word-15
20001503 init 2 20001502 20001501
20001600 constd 4 536870911 ; 0x1FFFFFFF laddr, 0xFFFFFFF8 vaddr
20001601 constd 2 3255258311820116067 ; 0x2D2D0030002D0063 word
20001602 state 2 RAM-word-16
20001603 init 2 20001602 20001601

; data flow

36561200 constd 2 65616 ; 0x10050
36561600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36561601 add 2 202 36561600
36561602 ite 2 16561600 36561601 202 ; 0x10050(~1): addi sp,sp,-8
36562000 slice 4 202 31 3
36562001 ite 2 16562000 202 30 ; for checking address validity
36562002 eq 1 36562000 20000000
36562003 ite 2 36562002 210 20000002
36562004 ite 2 16562000 36562003 20000002
36562005 eq 1 36562000 20000100
36562006 ite 2 36562005 210 20000102
36562007 ite 2 16562000 36562006 20000102
36562008 eq 1 36562000 20000200
36562009 ite 2 36562008 210 20000202
36562010 ite 2 16562000 36562009 20000202
36562011 eq 1 36562000 20000300
36562012 ite 2 36562011 210 20000302
36562013 ite 2 16562000 36562012 20000302
36562014 eq 1 36562000 20000400
36562015 ite 2 36562014 210 20000402
36562016 ite 2 16562000 36562015 20000402
36562017 eq 1 36562000 20000500
36562018 ite 2 36562017 210 20000502
36562019 ite 2 16562000 36562018 20000502
36562020 eq 1 36562000 20000600
36562021 ite 2 36562020 210 20000602
36562022 ite 2 16562000 36562021 20000602
36562023 eq 1 36562000 20000700
36562024 ite 2 36562023 210 20000702
36562025 ite 2 16562000 36562024 20000702
36562026 eq 1 36562000 20000800
36562027 ite 2 36562026 210 20000802
36562028 ite 2 16562000 36562027 20000802
36562029 eq 1 36562000 20000900
36562030 ite 2 36562029 210 20000902
36562031 ite 2 16562000 36562030 20000902
36562032 eq 1 36562000 20001000
36562033 ite 2 36562032 210 20001002
36562034 ite 2 16562000 36562033 20001002
36562035 eq 1 36562000 20001100
36562036 ite 2 36562035 210 20001102
36562037 ite 2 16562000 36562036 20001102
36562038 eq 1 36562000 20001200
36562039 ite 2 36562038 210 20001202
36562040 ite 2 16562000 36562039 20001202
36562041 eq 1 36562000 20001300
36562042 ite 2 36562041 210 20001302
36562043 ite 2 16562000 36562042 20001302
36562044 eq 1 36562000 20001400
36562045 ite 2 36562044 210 20001402
36562046 ite 2 16562000 36562045 20001402
36562047 eq 1 36562000 20001500
36562048 ite 2 36562047 210 20001502
36562049 ite 2 16562000 36562048 20001502
36562050 eq 1 36562000 20001600
36562051 ite 2 36562050 210 20001602
36562052 ite 2 16562000 36562051 20001602 ; 0x10054(~1): sd a0,0(sp)
36562400 slice 4 202 31 3
36562401 ite 2 16562400 202 36562001 ; for checking address validity
36562402 eq 1 36562400 20000000
36562403 ite 2 36562402 20000002 20
36562404 eq 1 36562400 20000100
36562405 ite 2 36562404 20000102 36562403
36562406 eq 1 36562400 20000200
36562407 ite 2 36562406 20000202 36562405
36562408 eq 1 36562400 20000300
36562409 ite 2 36562408 20000302 36562407
36562410 eq 1 36562400 20000400
36562411 ite 2 36562410 20000402 36562409
36562412 eq 1 36562400 20000500
36562413 ite 2 36562412 20000502 36562411
36562414 eq 1 36562400 20000600
36562415 ite 2 36562414 20000602 36562413
36562416 eq 1 36562400 20000700
36562417 ite 2 36562416 20000702 36562415
36562418 eq 1 36562400 20000800
36562419 ite 2 36562418 20000802 36562417
36562420 eq 1 36562400 20000900
36562421 ite 2 36562420 20000902 36562419
36562422 eq 1 36562400 20001000
36562423 ite 2 36562422 20001002 36562421
36562424 eq 1 36562400 20001100
36562425 ite 2 36562424 20001102 36562423
36562426 eq 1 36562400 20001200
36562427 ite 2 36562426 20001202 36562425
36562428 eq 1 36562400 20001300
36562429 ite 2 36562428 20001302 36562427
36562430 eq 1 36562400 20001400
36562431 ite 2 36562430 20001402 36562429
36562432 eq 1 36562400 20001500
36562433 ite 2 36562432 20001502 36562431
36562434 eq 1 36562400 20001600
36562435 ite 2 36562434 20001602 36562433
36562436 ite 2 16562400 36562435 210 ; 0x10058(~1): ld a0,0(sp)
36562800 constd 2 8 ; 0x8
36562801 add 2 202 36562800
36562802 ite 2 16562800 36562801 36561602 ; 0x1005C(~1): addi sp,sp,8
36563200 constd 2 93 ; 0x5D
36563201 ite 2 16563200 36563200 217 ; 0x10060(~1): addi a7,zero,93
36563600 ite 1 16563600 11 10 ; 0x10064(~1): ecall
36566800 ite 1 16566800 11 36563600 ; 0x10084(~1): ecall
36589200 constd 2 65896 ; 0x10168
36594800 constd 2 65952 ; 0x101A0
36595200 ite 2 16595200 200 36562436 ; 0x101A0(~9): addi a0,zero,0
36595600 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36595601 add 2 208 36595600
36595602 slice 4 36595601 31 3
36595603 ite 2 16595600 36595601 36562401 ; for checking address validity
36595604 eq 1 36595602 20000000
36595605 ite 2 36595604 20000002 20
36595606 eq 1 36595602 20000100
36595607 ite 2 36595606 20000102 36595605
36595608 eq 1 36595602 20000200
36595609 ite 2 36595608 20000202 36595607
36595610 eq 1 36595602 20000300
36595611 ite 2 36595610 20000302 36595609
36595612 eq 1 36595602 20000400
36595613 ite 2 36595612 20000402 36595611
36595614 eq 1 36595602 20000500
36595615 ite 2 36595614 20000502 36595613
36595616 eq 1 36595602 20000600
36595617 ite 2 36595616 20000602 36595615
36595618 eq 1 36595602 20000700
36595619 ite 2 36595618 20000702 36595617
36595620 eq 1 36595602 20000800
36595621 ite 2 36595620 20000802 36595619
36595622 eq 1 36595602 20000900
36595623 ite 2 36595622 20000902 36595621
36595624 eq 1 36595602 20001000
36595625 ite 2 36595624 20001002 36595623
36595626 eq 1 36595602 20001100
36595627 ite 2 36595626 20001102 36595625
36595628 eq 1 36595602 20001200
36595629 ite 2 36595628 20001202 36595627
36595630 eq 1 36595602 20001300
36595631 ite 2 36595630 20001302 36595629
36595632 eq 1 36595602 20001400
36595633 ite 2 36595632 20001402 36595631
36595634 eq 1 36595602 20001500
36595635 ite 2 36595634 20001502 36595633
36595636 eq 1 36595602 20001600
36595637 ite 2 36595636 20001602 36595635
36595638 ite 2 16595600 36595637 205 ; 0x101A4(~11): ld t0,-16(s0)
36596000 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36596001 add 2 208 36596000
36596002 slice 4 36596001 31 3
36596003 ite 2 16596000 36596001 36595603 ; for checking address validity
36596004 eq 1 36596002 20000000
36596005 ite 2 36596004 20000002 20
36596006 eq 1 36596002 20000100
36596007 ite 2 36596006 20000102 36596005
36596008 eq 1 36596002 20000200
36596009 ite 2 36596008 20000202 36596007
36596010 eq 1 36596002 20000300
36596011 ite 2 36596010 20000302 36596009
36596012 eq 1 36596002 20000400
36596013 ite 2 36596012 20000402 36596011
36596014 eq 1 36596002 20000500
36596015 ite 2 36596014 20000502 36596013
36596016 eq 1 36596002 20000600
36596017 ite 2 36596016 20000602 36596015
36596018 eq 1 36596002 20000700
36596019 ite 2 36596018 20000702 36596017
36596020 eq 1 36596002 20000800
36596021 ite 2 36596020 20000802 36596019
36596022 eq 1 36596002 20000900
36596023 ite 2 36596022 20000902 36596021
36596024 eq 1 36596002 20001000
36596025 ite 2 36596024 20001002 36596023
36596026 eq 1 36596002 20001100
36596027 ite 2 36596026 20001102 36596025
36596028 eq 1 36596002 20001200
36596029 ite 2 36596028 20001202 36596027
36596030 eq 1 36596002 20001300
36596031 ite 2 36596030 20001302 36596029
36596032 eq 1 36596002 20001400
36596033 ite 2 36596032 20001402 36596031
36596034 eq 1 36596002 20001500
36596035 ite 2 36596034 20001502 36596033
36596036 eq 1 36596002 20001600
36596037 ite 2 36596036 20001602 36596035
36596038 ite 2 16596000 36596037 206 ; 0x101A8(~11): ld t1,-16(s0)
36596400 slice 4 206 31 3
36596401 ite 2 16596400 206 36596003 ; for checking address validity
36596402 eq 1 36596400 20000000
36596403 ite 2 36596402 20000002 20
36596404 eq 1 36596400 20000100
36596405 ite 2 36596404 20000102 36596403
36596406 eq 1 36596400 20000200
36596407 ite 2 36596406 20000202 36596405
36596408 eq 1 36596400 20000300
36596409 ite 2 36596408 20000302 36596407
36596410 eq 1 36596400 20000400
36596411 ite 2 36596410 20000402 36596409
36596412 eq 1 36596400 20000500
36596413 ite 2 36596412 20000502 36596411
36596414 eq 1 36596400 20000600
36596415 ite 2 36596414 20000602 36596413
36596416 eq 1 36596400 20000700
36596417 ite 2 36596416 20000702 36596415
36596418 eq 1 36596400 20000800
36596419 ite 2 36596418 20000802 36596417
36596420 eq 1 36596400 20000900
36596421 ite 2 36596420 20000902 36596419
36596422 eq 1 36596400 20001000
36596423 ite 2 36596422 20001002 36596421
36596424 eq 1 36596400 20001100
36596425 ite 2 36596424 20001102 36596423
36596426 eq 1 36596400 20001200
36596427 ite 2 36596426 20001202 36596425
36596428 eq 1 36596400 20001300
36596429 ite 2 36596428 20001302 36596427
36596430 eq 1 36596400 20001400
36596431 ite 2 36596430 20001402 36596429
36596432 eq 1 36596400 20001500
36596433 ite 2 36596432 20001502 36596431
36596434 eq 1 36596400 20001600
36596435 ite 2 36596434 20001602 36596433
36596436 ite 2 16596400 36596435 36596038 ; 0x101AC(~11): ld t1,0(t1)
36596800 constd 2 48 ; 0x30
36596801 ite 2 16596800 36596800 207 ; 0x101B0(~11): addi t2,zero,48
36597200 sub 2 206 207
36597201 ite 2 16597200 36597200 36596436 ; 0x101B4(~11): sub t1,t1,t2
36597600 slice 4 205 31 3
36597601 ite 2 16597600 205 36596401 ; for checking address validity
36597602 eq 1 36597600 20000000
36597603 ite 2 36597602 206 36562004
36597604 ite 2 16597600 36597603 36562004
36597605 eq 1 36597600 20000100
36597606 ite 2 36597605 206 36562007
36597607 ite 2 16597600 36597606 36562007
36597608 eq 1 36597600 20000200
36597609 ite 2 36597608 206 36562010
36597610 ite 2 16597600 36597609 36562010
36597611 eq 1 36597600 20000300
36597612 ite 2 36597611 206 36562013
36597613 ite 2 16597600 36597612 36562013
36597614 eq 1 36597600 20000400
36597615 ite 2 36597614 206 36562016
36597616 ite 2 16597600 36597615 36562016
36597617 eq 1 36597600 20000500
36597618 ite 2 36597617 206 36562019
36597619 ite 2 16597600 36597618 36562019
36597620 eq 1 36597600 20000600
36597621 ite 2 36597620 206 36562022
36597622 ite 2 16597600 36597621 36562022
36597623 eq 1 36597600 20000700
36597624 ite 2 36597623 206 36562025
36597625 ite 2 16597600 36597624 36562025
36597626 eq 1 36597600 20000800
36597627 ite 2 36597626 206 36562028
36597628 ite 2 16597600 36597627 36562028
36597629 eq 1 36597600 20000900
36597630 ite 2 36597629 206 36562031
36597631 ite 2 16597600 36597630 36562031
36597632 eq 1 36597600 20001000
36597633 ite 2 36597632 206 36562034
36597634 ite 2 16597600 36597633 36562034
36597635 eq 1 36597600 20001100
36597636 ite 2 36597635 206 36562037
36597637 ite 2 16597600 36597636 36562037
36597638 eq 1 36597600 20001200
36597639 ite 2 36597638 206 36562040
36597640 ite 2 16597600 36597639 36562040
36597641 eq 1 36597600 20001300
36597642 ite 2 36597641 206 36562043
36597643 ite 2 16597600 36597642 36562043
36597644 eq 1 36597600 20001400
36597645 ite 2 36597644 206 36562046
36597646 ite 2 16597600 36597645 36562046
36597647 eq 1 36597600 20001500
36597648 ite 2 36597647 206 36562049
36597649 ite 2 16597600 36597648 36562049
36597650 eq 1 36597600 20001600
36597651 ite 2 36597650 206 36562052
36597652 ite 2 16597600 36597651 36562052 ; 0x101B8(~11): sd t1,0(t0)
36598000 constd 2 41 ; 0x29
36598001 ite 2 16598000 36598000 36595638 ; 0x101BC(~14): addi t0,zero,41
36598400 constd 2 1 ; 0x1
36598401 ite 2 16598400 36598400 36597201 ; 0x101C0(~14): addi t1,zero,1
36598800 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36598801 add 2 208 36598800
36598802 slice 4 36598801 31 3
36598803 ite 2 16598800 36598801 36597601 ; for checking address validity
36598804 eq 1 36598802 20000000
36598805 ite 2 36598804 20000002 20
36598806 eq 1 36598802 20000100
36598807 ite 2 36598806 20000102 36598805
36598808 eq 1 36598802 20000200
36598809 ite 2 36598808 20000202 36598807
36598810 eq 1 36598802 20000300
36598811 ite 2 36598810 20000302 36598809
36598812 eq 1 36598802 20000400
36598813 ite 2 36598812 20000402 36598811
36598814 eq 1 36598802 20000500
36598815 ite 2 36598814 20000502 36598813
36598816 eq 1 36598802 20000600
36598817 ite 2 36598816 20000602 36598815
36598818 eq 1 36598802 20000700
36598819 ite 2 36598818 20000702 36598817
36598820 eq 1 36598802 20000800
36598821 ite 2 36598820 20000802 36598819
36598822 eq 1 36598802 20000900
36598823 ite 2 36598822 20000902 36598821
36598824 eq 1 36598802 20001000
36598825 ite 2 36598824 20001002 36598823
36598826 eq 1 36598802 20001100
36598827 ite 2 36598826 20001102 36598825
36598828 eq 1 36598802 20001200
36598829 ite 2 36598828 20001202 36598827
36598830 eq 1 36598802 20001300
36598831 ite 2 36598830 20001302 36598829
36598832 eq 1 36598802 20001400
36598833 ite 2 36598832 20001402 36598831
36598834 eq 1 36598802 20001500
36598835 ite 2 36598834 20001502 36598833
36598836 eq 1 36598802 20001600
36598837 ite 2 36598836 20001602 36598835
36598838 ite 2 16598800 36598837 36596801 ; 0x101C4(~14): ld t2,-16(s0)
36599200 slice 4 207 31 3
36599201 ite 2 16599200 207 36598803 ; for checking address validity
36599202 eq 1 36599200 20000000
36599203 ite 2 36599202 20000002 20
36599204 eq 1 36599200 20000100
36599205 ite 2 36599204 20000102 36599203
36599206 eq 1 36599200 20000200
36599207 ite 2 36599206 20000202 36599205
36599208 eq 1 36599200 20000300
36599209 ite 2 36599208 20000302 36599207
36599210 eq 1 36599200 20000400
36599211 ite 2 36599210 20000402 36599209
36599212 eq 1 36599200 20000500
36599213 ite 2 36599212 20000502 36599211
36599214 eq 1 36599200 20000600
36599215 ite 2 36599214 20000602 36599213
36599216 eq 1 36599200 20000700
36599217 ite 2 36599216 20000702 36599215
36599218 eq 1 36599200 20000800
36599219 ite 2 36599218 20000802 36599217
36599220 eq 1 36599200 20000900
36599221 ite 2 36599220 20000902 36599219
36599222 eq 1 36599200 20001000
36599223 ite 2 36599222 20001002 36599221
36599224 eq 1 36599200 20001100
36599225 ite 2 36599224 20001102 36599223
36599226 eq 1 36599200 20001200
36599227 ite 2 36599226 20001202 36599225
36599228 eq 1 36599200 20001300
36599229 ite 2 36599228 20001302 36599227
36599230 eq 1 36599200 20001400
36599231 ite 2 36599230 20001402 36599229
36599232 eq 1 36599200 20001500
36599233 ite 2 36599232 20001502 36599231
36599234 eq 1 36599200 20001600
36599235 ite 2 36599234 20001602 36599233
36599236 ite 2 16599200 36599235 36598838 ; 0x101C8(~14): ld t2,0(t2)
36599600 ite 2 16599600 207 21 ; record t2 for checking division by zero
36599601 udiv 2 206 207
36599602 ite 2 16599600 36599601 36598401 ; 0x101CC(~14): divu t1,t1,t2
36600000 add 2 205 206
36600001 ite 2 16600000 36600000 36598001 ; 0x101D0(~14): add t0,t0,t1
36600400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36600401 add 2 208 36600400
36600402 slice 4 36600401 31 3
36600403 ite 2 16600400 36600401 36599201 ; for checking address validity
36600404 eq 1 36600402 20000000
36600405 ite 2 36600404 205 36597604
36600406 ite 2 16600400 36600405 36597604
36600407 eq 1 36600402 20000100
36600408 ite 2 36600407 205 36597607
36600409 ite 2 16600400 36600408 36597607
36600410 eq 1 36600402 20000200
36600411 ite 2 36600410 205 36597610
36600412 ite 2 16600400 36600411 36597610
36600413 eq 1 36600402 20000300
36600414 ite 2 36600413 205 36597613
36600415 ite 2 16600400 36600414 36597613
36600416 eq 1 36600402 20000400
36600417 ite 2 36600416 205 36597616
36600418 ite 2 16600400 36600417 36597616
36600419 eq 1 36600402 20000500
36600420 ite 2 36600419 205 36597619
36600421 ite 2 16600400 36600420 36597619
36600422 eq 1 36600402 20000600
36600423 ite 2 36600422 205 36597622
36600424 ite 2 16600400 36600423 36597622
36600425 eq 1 36600402 20000700
36600426 ite 2 36600425 205 36597625
36600427 ite 2 16600400 36600426 36597625
36600428 eq 1 36600402 20000800
36600429 ite 2 36600428 205 36597628
36600430 ite 2 16600400 36600429 36597628
36600431 eq 1 36600402 20000900
36600432 ite 2 36600431 205 36597631
36600433 ite 2 16600400 36600432 36597631
36600434 eq 1 36600402 20001000
36600435 ite 2 36600434 205 36597634
36600436 ite 2 16600400 36600435 36597634
36600437 eq 1 36600402 20001100
36600438 ite 2 36600437 205 36597637
36600439 ite 2 16600400 36600438 36597637
36600440 eq 1 36600402 20001200
36600441 ite 2 36600440 205 36597640
36600442 ite 2 16600400 36600441 36597640
36600443 eq 1 36600402 20001300
36600444 ite 2 36600443 205 36597643
36600445 ite 2 16600400 36600444 36597643
36600446 eq 1 36600402 20001400
36600447 ite 2 36600446 205 36597646
36600448 ite 2 16600400 36600447 36597646
36600449 eq 1 36600402 20001500
36600450 ite 2 36600449 205 36597649
36600451 ite 2 16600400 36600450 36597649
36600452 eq 1 36600402 20001600
36600453 ite 2 36600452 205 36597652
36600454 ite 2 16600400 36600453 36597652 ; 0x101D4(~14): sd t0,-8(s0)
36600800 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36600801 add 2 208 36600800
36600802 slice 4 36600801 31 3
36600803 ite 2 16600800 36600801 36600403 ; for checking address validity
36600804 eq 1 36600802 20000000
36600805 ite 2 36600804 20000002 20
36600806 eq 1 36600802 20000100
36600807 ite 2 36600806 20000102 36600805
36600808 eq 1 36600802 20000200
36600809 ite 2 36600808 20000202 36600807
36600810 eq 1 36600802 20000300
36600811 ite 2 36600810 20000302 36600809
36600812 eq 1 36600802 20000400
36600813 ite 2 36600812 20000402 36600811
36600814 eq 1 36600802 20000500
36600815 ite 2 36600814 20000502 36600813
36600816 eq 1 36600802 20000600
36600817 ite 2 36600816 20000602 36600815
36600818 eq 1 36600802 20000700
36600819 ite 2 36600818 20000702 36600817
36600820 eq 1 36600802 20000800
36600821 ite 2 36600820 20000802 36600819
36600822 eq 1 36600802 20000900
36600823 ite 2 36600822 20000902 36600821
36600824 eq 1 36600802 20001000
36600825 ite 2 36600824 20001002 36600823
36600826 eq 1 36600802 20001100
36600827 ite 2 36600826 20001102 36600825
36600828 eq 1 36600802 20001200
36600829 ite 2 36600828 20001202 36600827
36600830 eq 1 36600802 20001300
36600831 ite 2 36600830 20001302 36600829
36600832 eq 1 36600802 20001400
36600833 ite 2 36600832 20001402 36600831
36600834 eq 1 36600802 20001500
36600835 ite 2 36600834 20001502 36600833
36600836 eq 1 36600802 20001600
36600837 ite 2 36600836 20001602 36600835
36600838 ite 2 16600800 36600837 36600001 ; 0x101D8(~17): ld t0,-16(s0)
36601200 slice 4 205 31 3
36601201 ite 2 16601200 205 36600803 ; for checking address validity
36601202 eq 1 36601200 20000000
36601203 ite 2 36601202 20000002 20
36601204 eq 1 36601200 20000100
36601205 ite 2 36601204 20000102 36601203
36601206 eq 1 36601200 20000200
36601207 ite 2 36601206 20000202 36601205
36601208 eq 1 36601200 20000300
36601209 ite 2 36601208 20000302 36601207
36601210 eq 1 36601200 20000400
36601211 ite 2 36601210 20000402 36601209
36601212 eq 1 36601200 20000500
36601213 ite 2 36601212 20000502 36601211
36601214 eq 1 36601200 20000600
36601215 ite 2 36601214 20000602 36601213
36601216 eq 1 36601200 20000700
36601217 ite 2 36601216 20000702 36601215
36601218 eq 1 36601200 20000800
36601219 ite 2 36601218 20000802 36601217
36601220 eq 1 36601200 20000900
36601221 ite 2 36601220 20000902 36601219
36601222 eq 1 36601200 20001000
36601223 ite 2 36601222 20001002 36601221
36601224 eq 1 36601200 20001100
36601225 ite 2 36601224 20001102 36601223
36601226 eq 1 36601200 20001200
36601227 ite 2 36601226 20001202 36601225
36601228 eq 1 36601200 20001300
36601229 ite 2 36601228 20001302 36601227
36601230 eq 1 36601200 20001400
36601231 ite 2 36601230 20001402 36601229
36601232 eq 1 36601200 20001500
36601233 ite 2 36601232 20001502 36601231
36601234 eq 1 36601200 20001600
36601235 ite 2 36601234 20001602 36601233
36601236 ite 2 16601200 36601235 36600838 ; 0x101DC(~17): ld t0,0(t0)
36601600 constd 2 2 ; 0x2
36601601 ite 2 16601600 36601600 36599602 ; 0x101E0(~17): addi t1,zero,2
36602000 sub 2 206 205
36602001 ite 2 16602000 36602000 36601236 ; 0x101E4(~17): sub t0,t1,t0
36602400 constd 2 1 ; 0x1
36602401 ite 2 16602400 36602400 36601601 ; 0x101E8(~17): addi t1,zero,1
36602800 ult 1 205 206
36602801 uext 2 36602800 63
36602802 ite 2 16602800 36602801 36602001 ; 0x101EC(~17): sltu t0,t0,t1
36603200 eq 1 205 200 ; 0x101F0(~17): beq t0,zero,7
36603201 not 1 36603200
36603600 constd 2 41 ; 0x29
36603601 ite 2 16603600 36603600 36602802 ; 0x101F4(~18): addi t0,zero,41
36604000 constd 2 1 ; 0x1
36604001 ite 2 16604000 36604000 36602401 ; 0x101F8(~18): addi t1,zero,1
36604400 ite 2 16604400 200 36599236 ; 0x101FC(~18): addi t2,zero,0
36604800 ite 2 16604800 207 36599600 ; record t2 for checking division by zero
36604801 udiv 2 206 207
36604802 ite 2 16604800 36604801 36604001 ; 0x10200(~18): divu t1,t1,t2
36605200 add 2 205 206
36605201 ite 2 16605200 36605200 36603601 ; 0x10204(~18): add t0,t0,t1
36605600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36605601 add 2 208 36605600
36605602 slice 4 36605601 31 3
36605603 ite 2 16605600 36605601 36601201 ; for checking address validity
36605604 eq 1 36605602 20000000
36605605 ite 2 36605604 205 36600406
36605606 ite 2 16605600 36605605 36600406
36605607 eq 1 36605602 20000100
36605608 ite 2 36605607 205 36600409
36605609 ite 2 16605600 36605608 36600409
36605610 eq 1 36605602 20000200
36605611 ite 2 36605610 205 36600412
36605612 ite 2 16605600 36605611 36600412
36605613 eq 1 36605602 20000300
36605614 ite 2 36605613 205 36600415
36605615 ite 2 16605600 36605614 36600415
36605616 eq 1 36605602 20000400
36605617 ite 2 36605616 205 36600418
36605618 ite 2 16605600 36605617 36600418
36605619 eq 1 36605602 20000500
36605620 ite 2 36605619 205 36600421
36605621 ite 2 16605600 36605620 36600421
36605622 eq 1 36605602 20000600
36605623 ite 2 36605622 205 36600424
36605624 ite 2 16605600 36605623 36600424
36605625 eq 1 36605602 20000700
36605626 ite 2 36605625 205 36600427
36605627 ite 2 16605600 36605626 36600427
36605628 eq 1 36605602 20000800
36605629 ite 2 36605628 205 36600430
36605630 ite 2 16605600 36605629 36600430
36605631 eq 1 36605602 20000900
36605632 ite 2 36605631 205 36600433
36605633 ite 2 16605600 36605632 36600433
36605634 eq 1 36605602 20001000
36605635 ite 2 36605634 205 36600436
36605636 ite 2 16605600 36605635 36600436
36605637 eq 1 36605602 20001100
36605638 ite 2 36605637 205 36600439
36605639 ite 2 16605600 36605638 36600439
36605640 eq 1 36605602 20001200
36605641 ite 2 36605640 205 36600442
36605642 ite 2 16605600 36605641 36600442
36605643 eq 1 36605602 20001300
36605644 ite 2 36605643 205 36600445
36605645 ite 2 16605600 36605644 36600445
36605646 eq 1 36605602 20001400
36605647 ite 2 36605646 205 36600448
36605648 ite 2 16605600 36605647 36600448
36605649 eq 1 36605602 20001500
36605650 ite 2 36605649 205 36600451
36605651 ite 2 16605600 36605650 36600451
36605652 eq 1 36605602 20001600
36605653 ite 2 36605652 205 36600454
36605654 ite 2 16605600 36605653 36600454 ; 0x10208(~18): sd t0,-8(s0)
36606000 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36606001 add 2 208 36606000
36606002 slice 4 36606001 31 3
36606003 ite 2 16606000 36606001 36605603 ; for checking address validity
36606004 eq 1 36606002 20000000
36606005 ite 2 36606004 20000002 20
36606006 eq 1 36606002 20000100
36606007 ite 2 36606006 20000102 36606005
36606008 eq 1 36606002 20000200
36606009 ite 2 36606008 20000202 36606007
36606010 eq 1 36606002 20000300
36606011 ite 2 36606010 20000302 36606009
36606012 eq 1 36606002 20000400
36606013 ite 2 36606012 20000402 36606011
36606014 eq 1 36606002 20000500
36606015 ite 2 36606014 20000502 36606013
36606016 eq 1 36606002 20000600
36606017 ite 2 36606016 20000602 36606015
36606018 eq 1 36606002 20000700
36606019 ite 2 36606018 20000702 36606017
36606020 eq 1 36606002 20000800
36606021 ite 2 36606020 20000802 36606019
36606022 eq 1 36606002 20000900
36606023 ite 2 36606022 20000902 36606021
36606024 eq 1 36606002 20001000
36606025 ite 2 36606024 20001002 36606023
36606026 eq 1 36606002 20001100
36606027 ite 2 36606026 20001102 36606025
36606028 eq 1 36606002 20001200
36606029 ite 2 36606028 20001202 36606027
36606030 eq 1 36606002 20001300
36606031 ite 2 36606030 20001302 36606029
36606032 eq 1 36606002 20001400
36606033 ite 2 36606032 20001402 36606031
36606034 eq 1 36606002 20001500
36606035 ite 2 36606034 20001502 36606033
36606036 eq 1 36606002 20001600
36606037 ite 2 36606036 20001602 36606035
36606038 ite 2 16606000 36606037 36605201 ; 0x1020C(~20): ld t0,-8(s0)
36606400 constd 2 42 ; 0x2A
36606401 ite 2 16606400 36606400 36604802 ; 0x10210(~20): addi t1,zero,42
36606800 sub 2 206 205
36606801 ite 2 16606800 36606800 36606038 ; 0x10214(~20): sub t0,t1,t0
36607200 constd 2 1 ; 0x1
36607201 ite 2 16607200 36607200 36606401 ; 0x10218(~20): addi t1,zero,1
36607600 ult 1 205 206
36607601 uext 2 36607600 63
36607602 ite 2 16607600 36607601 36606801 ; 0x1021C(~20): sltu t0,t0,t1
36608000 eq 1 205 200 ; 0x10220(~20): beq t0,zero,5
36608001 not 1 36608000
36608400 constd 2 1 ; 0x1
36608401 ite 2 16608400 36608400 36607602 ; 0x10224(~22): addi t0,zero,1
36608800 ite 2 16608800 205 36595200 ; 0x10228(~22): addi a0,t0,0
36610000 ite 2 16610000 200 36608401 ; 0x10234(~24): addi t0,zero,0
36610400 ite 2 16610400 205 36608800 ; 0x10238(~24): addi a0,t0,0
36611200 ite 2 16611200 208 36562802 ; 0x10240(~25): addi sp,s0,0
36611600 slice 4 202 31 3
36611601 ite 2 16611600 202 36606003 ; for checking address validity
36611602 eq 1 36611600 20000000
36611603 ite 2 36611602 20000002 20
36611604 eq 1 36611600 20000100
36611605 ite 2 36611604 20000102 36611603
36611606 eq 1 36611600 20000200
36611607 ite 2 36611606 20000202 36611605
36611608 eq 1 36611600 20000300
36611609 ite 2 36611608 20000302 36611607
36611610 eq 1 36611600 20000400
36611611 ite 2 36611610 20000402 36611609
36611612 eq 1 36611600 20000500
36611613 ite 2 36611612 20000502 36611611
36611614 eq 1 36611600 20000600
36611615 ite 2 36611614 20000602 36611613
36611616 eq 1 36611600 20000700
36611617 ite 2 36611616 20000702 36611615
36611618 eq 1 36611600 20000800
36611619 ite 2 36611618 20000802 36611617
36611620 eq 1 36611600 20000900
36611621 ite 2 36611620 20000902 36611619
36611622 eq 1 36611600 20001000
36611623 ite 2 36611622 20001002 36611621
36611624 eq 1 36611600 20001100
36611625 ite 2 36611624 20001102 36611623
36611626 eq 1 36611600 20001200
36611627 ite 2 36611626 20001202 36611625
36611628 eq 1 36611600 20001300
36611629 ite 2 36611628 20001302 36611627
36611630 eq 1 36611600 20001400
36611631 ite 2 36611630 20001402 36611629
36611632 eq 1 36611600 20001500
36611633 ite 2 36611632 20001502 36611631
36611634 eq 1 36611600 20001600
36611635 ite 2 36611634 20001602 36611633
36611636 ite 2 16611600 36611635 208 ; 0x10244(~25): ld s0,0(sp)
36612000 constd 2 8 ; 0x8
36612001 add 2 202 36612000
36612002 ite 2 16612000 36612001 36611200 ; 0x10248(~25): addi sp,sp,8
36612400 slice 4 202 31 3
36612401 ite 2 16612400 202 36611601 ; for checking address validity
36612402 eq 1 36612400 20000000
36612403 ite 2 36612402 20000002 20
36612404 eq 1 36612400 20000100
36612405 ite 2 36612404 20000102 36612403
36612406 eq 1 36612400 20000200
36612407 ite 2 36612406 20000202 36612405
36612408 eq 1 36612400 20000300
36612409 ite 2 36612408 20000302 36612407
36612410 eq 1 36612400 20000400
36612411 ite 2 36612410 20000402 36612409
36612412 eq 1 36612400 20000500
36612413 ite 2 36612412 20000502 36612411
36612414 eq 1 36612400 20000600
36612415 ite 2 36612414 20000602 36612413
36612416 eq 1 36612400 20000700
36612417 ite 2 36612416 20000702 36612415
36612418 eq 1 36612400 20000800
36612419 ite 2 36612418 20000802 36612417
36612420 eq 1 36612400 20000900
36612421 ite 2 36612420 20000902 36612419
36612422 eq 1 36612400 20001000
36612423 ite 2 36612422 20001002 36612421
36612424 eq 1 36612400 20001100
36612425 ite 2 36612424 20001102 36612423
36612426 eq 1 36612400 20001200
36612427 ite 2 36612426 20001202 36612425
36612428 eq 1 36612400 20001300
36612429 ite 2 36612428 20001302 36612427
36612430 eq 1 36612400 20001400
36612431 ite 2 36612430 20001402 36612429
36612432 eq 1 36612400 20001500
36612433 ite 2 36612432 20001502 36612431
36612434 eq 1 36612400 20001600
36612435 ite 2 36612434 20001602 36612433
36612436 ite 2 16612400 36612435 201 ; 0x1024C(~25): ld ra,0(sp)
36612800 constd 2 8 ; 0x8
36612801 add 2 202 36612800
36612802 ite 2 16612800 36612801 36612002 ; 0x10250(~25): addi sp,sp,8

; syscalls

40000000 constd 2 93 ; SYSCALL_EXIT
40000001 constd 2 63 ; SYSCALL_READ
40000002 constd 2 64 ; SYSCALL_WRITE
40000003 constd 2 56 ; SYSCALL_OPENAT
40000004 constd 2 214 ; SYSCALL_BRK

40000010 eq 1 217 40000000 ; $a7 == SYSCALL_EXIT
40000011 eq 1 217 40000001 ; $a7 == SYSCALL_READ
40000012 eq 1 217 40000002 ; $a7 == SYSCALL_WRITE
40000013 eq 1 217 40000003 ; $a7 == SYSCALL_OPENAT
40000014 eq 1 217 40000004 ; $a7 == SYSCALL_BRK

41000000 and 1 36566800 40000010 ; exit ecall is active
41000001 ite 1 60 40000010 41000000 ; stay in kernel mode indefinitely if exit ecall is active

42000000 and 1 36566800 40000011 ; read ecall is active
42000001 ite 2 42000000 211 36612401 ; $a1 is start address of buffer for checking address validity
42000002 ite 1 42000000 11 41000001 ; go into kernel mode if read ecall is active
42000003 ite 2 42000000 20 36610400 ; set $a0 = 0 bytes if read ecall is active
42000004 sub 2 212 210 ; $a2 - $a0
42000005 ugte 1 42000004 28 ; $a2 - $a0 >= 8 bytes
42000006 ite 2 42000005 28 42000004 ; read 8 bytes if $a2 - $a0 >= 8 bytes, or else $a2 - $a0 bytes
42000007 eq 1 42000006 22 ; increment == 2
42000008 ite 2 42000007 92 91 ; unsigned-extended 2-byte input if increment == 2, or else unsigned-extended 1-byte input
42000009 eq 1 42000006 23 ; increment == 3
42000010 ite 2 42000009 93 42000008 ; unsigned-extended 3-byte input if increment == 3
42000011 eq 1 42000006 24 ; increment == 4
42000012 ite 2 42000011 94 42000010 ; unsigned-extended 4-byte input if increment == 4
42000013 eq 1 42000006 25 ; increment == 5
42000014 ite 2 42000013 95 42000012 ; unsigned-extended 5-byte input if increment == 5
42000015 eq 1 42000006 26 ; increment == 6
42000016 ite 2 42000015 96 42000014 ; unsigned-extended 6-byte input if increment == 6
42000017 eq 1 42000006 27 ; increment == 7
42000018 ite 2 42000017 97 42000016 ; unsigned-extended 7-byte input if increment == 7
42000019 eq 1 42000006 28 ; increment == 8
42000020 ite 2 42000019 98 42000018 ; 8-byte input if increment == 8
42000021 add 2 211 210 ; $a1 + $a0
42000022 slice 4 42000021 31 3
42000023 ult 1 210 212 ; $a0 < $a2
42000024 and 1 40000011 42000023 ; $a7 == SYSCALL_READ and $a0 < $a2
42000025 and 1 60 42000024 ; read ecall is in kernel mode and not done yet
42000026 ugt 1 42000006 20 ; increment > 0
42000027 and 1 42000025 42000026 ; read ecall is in kernel mode and not done yet and increment > 0
42000028 eq 1 42000022 20000000
42000029 ite 2 42000028 42000020 36605606
42000030 ite 2 42000027 42000029 36605606 ; read input into RAM[$a1 + $a0]
42000031 eq 1 42000022 20000100
42000032 ite 2 42000031 42000020 36605609
42000033 ite 2 42000027 42000032 36605609 ; read input into RAM[$a1 + $a0]
42000034 eq 1 42000022 20000200
42000035 ite 2 42000034 42000020 36605612
42000036 ite 2 42000027 42000035 36605612 ; read input into RAM[$a1 + $a0]
42000037 eq 1 42000022 20000300
42000038 ite 2 42000037 42000020 36605615
42000039 ite 2 42000027 42000038 36605615 ; read input into RAM[$a1 + $a0]
42000040 eq 1 42000022 20000400
42000041 ite 2 42000040 42000020 36605618
42000042 ite 2 42000027 42000041 36605618 ; read input into RAM[$a1 + $a0]
42000043 eq 1 42000022 20000500
42000044 ite 2 42000043 42000020 36605621
42000045 ite 2 42000027 42000044 36605621 ; read input into RAM[$a1 + $a0]
42000046 eq 1 42000022 20000600
42000047 ite 2 42000046 42000020 36605624
42000048 ite 2 42000027 42000047 36605624 ; read input into RAM[$a1 + $a0]
42000049 eq 1 42000022 20000700
42000050 ite 2 42000049 42000020 36605627
42000051 ite 2 42000027 42000050 36605627 ; read input into RAM[$a1 + $a0]
42000052 eq 1 42000022 20000800
42000053 ite 2 42000052 42000020 36605630
42000054 ite 2 42000027 42000053 36605630 ; read input into RAM[$a1 + $a0]
42000055 eq 1 42000022 20000900
42000056 ite 2 42000055 42000020 36605633
42000057 ite 2 42000027 42000056 36605633 ; read input into RAM[$a1 + $a0]
42000058 eq 1 42000022 20001000
42000059 ite 2 42000058 42000020 36605636
42000060 ite 2 42000027 42000059 36605636 ; read input into RAM[$a1 + $a0]
42000061 eq 1 42000022 20001100
42000062 ite 2 42000061 42000020 36605639
42000063 ite 2 42000027 42000062 36605639 ; read input into RAM[$a1 + $a0]
42000064 eq 1 42000022 20001200
42000065 ite 2 42000064 42000020 36605642
42000066 ite 2 42000027 42000065 36605642 ; read input into RAM[$a1 + $a0]
42000067 eq 1 42000022 20001300
42000068 ite 2 42000067 42000020 36605645
42000069 ite 2 42000027 42000068 36605645 ; read input into RAM[$a1 + $a0]
42000070 eq 1 42000022 20001400
42000071 ite 2 42000070 42000020 36605648
42000072 ite 2 42000027 42000071 36605648 ; read input into RAM[$a1 + $a0]
42000073 eq 1 42000022 20001500
42000074 ite 2 42000073 42000020 36605651
42000075 ite 2 42000027 42000074 36605651 ; read input into RAM[$a1 + $a0]
42000076 eq 1 42000022 20001600
42000077 ite 2 42000076 42000020 36605654
42000078 ite 2 42000027 42000077 36605654 ; read input into RAM[$a1 + $a0]
42000079 add 2 210 42000006 ; $a0 + increment
42000080 ite 2 42000025 42000079 42000003 ; set $a0 = $a0 + increment if read ecall is in kernel mode and not done yet
42000081 ite 1 42000025 11 42000002 ; stay in kernel mode if read ecall is in kernel mode and not done yet

43000000 and 1 36566800 40000012 ; write ecall is active
43000001 ite 2 43000000 211 42000001 ; $a1 is start address of buffer for checking address validity
43000002 ite 2 43000000 212 42000080 ; set $a0 = $a2 if write ecall is active

44000000 and 1 36566800 40000013 ; openat ecall is active
44000001 ite 2 44000000 211 43000001 ; $a1 is start address of buffer for checking address validity
44000002 state 2 fd-bump-pointer
44000003 init 2 44000002 21 ; initial fd-bump-pointer is 1 (file descriptor bump pointer)
44000004 inc 2 44000002
44000005 ite 2 44000000 44000004 44000002 ; fd-bump-pointer + 1 if openat ecall is active
44000006 next 2 44000002 44000005 ; increment fd-bump-pointer if openat ecall is active
44000007 ite 2 44000000 44000004 43000002 ; set $a0 = fd-bump-pointer + 1 if openat ecall is active

45000000 and 1 36566800 40000014 ; brk ecall is active
45000001 state 2 brk-bump-pointer
45000002 init 2 45000001 33 ; current program break
45000003 ulte 1 45000001 210 ; brk <= $a0
45000004 ult 1 210 202 ; $a0 < $sp
45000005 and 1 45000003 45000004 ; brk <= $a0 < $sp
45000006 and 2 210 27 ; reset all but 3 LSBs of $a0
45000007 eq 1 45000006 20 ; 3 LSBs of $a0 == 0 ($a0 is word-aligned)
45000008 and 1 45000005 45000007 ; brk <= $a0 < $sp and $a0 is word-aligned ($a0 is valid)
45000009 and 1 45000000 45000008 ; brk ecall is active and $a0 is valid
45000010 ite 2 45000009 210 45000001 ; brk = $a0 if brk ecall is active and $a0 is valid
45000011 next 2 45000001 45000010 ; set brk = $a0 if brk ecall is active and $a0 is valid
45000012 not 1 45000008 ; $a0 is invalid
45000013 and 1 45000000 45000012 ; brk ecall is active and $a0 is invalid
45000014 ite 2 45000013 45000001 44000007 ; set $a0 = brk if brk ecall is active and $a0 is invalid

46000000 next 1 60 42000081 ; updating kernel-mode flag

; control flow

56561600 not 2 21 ; jalr 66132[0x10254](~25)
56561601 and 2 201 56561600
56561602 eq 1 56561601 36561200
56561603 and 1 16613200 56561602
56561604 next 1 16561600 56561603 ; ->65616[0x10050](~1)
; 65616[0x10050](~1)
56562000 next 1 16562000 16561600 ; ->65620[0x10054](~1)
; 65620[0x10054](~1)
56562400 next 1 16562400 16562000 ; ->65624[0x10058](~1)
; 65624[0x10058](~1)
56562800 next 1 16562800 16562400 ; ->65628[0x1005C](~1)
; 65628[0x1005C](~1)
56563200 next 1 16563200 16562800 ; ->65632[0x10060](~1)
; 65632[0x10060](~1)
56563600 next 1 16563600 16563200 ; ->65636[0x10064](~1)
56564000 state 1 kernel-mode-pc-flag-65636[0x10064](~1)
56564001 init 1 56564000 10 ; ecall is initially inactive
56564002 ite 1 56564000 60 16563600 ; activate ecall and keep active while in kernel mode
56564003 next 1 56564000 56564002 ; keep ecall active while in kernel mode
56564004 and 1 56564000 62 ; ecall is active but not in kernel mode anymore
56566800 next 1 16566800 10 ; ->65668[0x10084](~1)
56567200 state 1 kernel-mode-pc-flag-65668[0x10084](~1)
56567201 init 1 56567200 10 ; ecall is initially inactive
56567202 ite 1 56567200 60 16566800 ; activate ecall and keep active while in kernel mode
56567203 next 1 56567200 56567202 ; keep ecall active while in kernel mode
56567204 and 1 56567200 62 ; ecall is active but not in kernel mode anymore
56567205 next 1 16567200 56567204 ; ->65672[0x10088](~1)
56595200 not 2 21 ; jalr 65672[0x10088](~1)
56595201 and 2 201 56595200
56595202 eq 1 56595201 36594800
56595203 and 1 16567200 56595202
56595204 next 1 16595200 56595203 ; ->65952[0x101A0](~9)
; 65952[0x101A0](~9)
56595600 next 1 16595600 16595200 ; ->65956[0x101A4](~11)
; 65956[0x101A4](~11)
56596000 next 1 16596000 16595600 ; ->65960[0x101A8](~11)
; 65960[0x101A8](~11)
56596400 next 1 16596400 16596000 ; ->65964[0x101AC](~11)
; 65964[0x101AC](~11)
56596800 next 1 16596800 16596400 ; ->65968[0x101B0](~11)
; 65968[0x101B0](~11)
56597200 next 1 16597200 16596800 ; ->65972[0x101B4](~11)
; 65972[0x101B4](~11)
56597600 next 1 16597600 16597200 ; ->65976[0x101B8](~11)
; 65976[0x101B8](~11)
56598000 next 1 16598000 16597600 ; ->65980[0x101BC](~14)
; 65980[0x101BC](~14)
56598400 next 1 16598400 16598000 ; ->65984[0x101C0](~14)
; 65984[0x101C0](~14)
56598800 next 1 16598800 16598400 ; ->65988[0x101C4](~14)
; 65988[0x101C4](~14)
56599200 next 1 16599200 16598800 ; ->65992[0x101C8](~14)
; 65992[0x101C8](~14)
56599600 next 1 16599600 16599200 ; ->65996[0x101CC](~14)
; 65996[0x101CC](~14)
56600000 next 1 16600000 16599600 ; ->66000[0x101D0](~14)
; 66000[0x101D0](~14)
56600400 next 1 16600400 16600000 ; ->66004[0x101D4](~14)
; 66004[0x101D4](~14)
56600800 next 1 16600800 16600400 ; ->66008[0x101D8](~17)
; 66008[0x101D8](~17)
56601200 next 1 16601200 16600800 ; ->66012[0x101DC](~17)
; 66012[0x101DC](~17)
56601600 next 1 16601600 16601200 ; ->66016[0x101E0](~17)
; 66016[0x101E0](~17)
56602000 next 1 16602000 16601600 ; ->66020[0x101E4](~17)
; 66020[0x101E4](~17)
56602400 next 1 16602400 16602000 ; ->66024[0x101E8](~17)
; 66024[0x101E8](~17)
56602800 next 1 16602800 16602400 ; ->66028[0x101EC](~17)
; 66028[0x101EC](~17)
56603200 next 1 16603200 16602800 ; ->66032[0x101F0](~17)
56603600 and 1 16603200 36603201 ; beq 66032[0x101F0](~17)
56603601 next 1 16603600 56603600 ; ->66036[0x101F4](~18)
; 66036[0x101F4](~18)
56604000 next 1 16604000 16603600 ; ->66040[0x101F8](~18)
; 66040[0x101F8](~18)
56604400 next 1 16604400 16604000 ; ->66044[0x101FC](~18)
; 66044[0x101FC](~18)
56604800 next 1 16604800 16604400 ; ->66048[0x10200](~18)
; 66048[0x10200](~18)
56605200 next 1 16605200 16604800 ; ->66052[0x10204](~18)
; 66052[0x10204](~18)
56605600 next 1 16605600 16605200 ; ->66056[0x10208](~18)
; 66056[0x10208](~18)
56606000 and 1 16603200 36603200 ; beq 66032[0x101F0](~17)
56606001 ite 1 56606000 11 16605600
56606002 next 1 16606000 56606001 ; ->66060[0x1020C](~20)
; 66060[0x1020C](~20)
56606400 next 1 16606400 16606000 ; ->66064[0x10210](~20)
; 66064[0x10210](~20)
56606800 next 1 16606800 16606400 ; ->66068[0x10214](~20)
; 66068[0x10214](~20)
56607200 next 1 16607200 16606800 ; ->66072[0x10218](~20)
; 66072[0x10218](~20)
56607600 next 1 16607600 16607200 ; ->66076[0x1021C](~20)
; 66076[0x1021C](~20)
56608000 next 1 16608000 16607600 ; ->66080[0x10220](~20)
56608400 and 1 16608000 36608001 ; beq 66080[0x10220](~20)
56608401 next 1 16608400 56608400 ; ->66084[0x10224](~22)
; 66084[0x10224](~22)
56608800 next 1 16608800 16608400 ; ->66088[0x10228](~22)
; 66088[0x10228](~22)
56609200 next 1 16609200 16608800 ; ->66092[0x1022C](~22)
56610000 and 1 16608000 36608000 ; beq 66080[0x10220](~20)
56610001 next 1 16610000 56610000 ; ->66100[0x10234](~24)
; 66100[0x10234](~24)
56610400 next 1 16610400 16610000 ; ->66104[0x10238](~24)
; 66104[0x10238](~24)
56610800 next 1 16610800 16610400 ; ->66108[0x1023C](~24)
; jal 66108[0x1023C](~24)
; jal 66092[0x1022C](~22)
56611200 ite 1 16609200 11 16610800
56611201 next 1 16611200 56611200 ; ->66112[0x10240](~25)
; 66112[0x10240](~25)
56611600 next 1 16611600 16611200 ; ->66116[0x10244](~25)
; 66116[0x10244](~25)
56612000 next 1 16612000 16611600 ; ->66120[0x10248](~25)
; 66120[0x10248](~25)
56612400 next 1 16612400 16612000 ; ->66124[0x1024C](~25)
; 66124[0x1024C](~25)
56612800 next 1 16612800 16612400 ; ->66128[0x10250](~25)
; 66128[0x10250](~25)
56613200 next 1 16613200 16612800 ; ->66132[0x10254](~25)

; updating registers

60000001 next 2 201 36612436 ra ; register $1
60000002 next 2 202 36612802 sp ; register $2
60000003 next 2 203 203 gp ; register $3
60000004 next 2 204 204 tp ; register $4
60000005 next 2 205 36610000 t0 ; register $5
60000006 next 2 206 36607201 t1 ; register $6
60000007 next 2 207 36604400 t2 ; register $7
60000008 next 2 208 36611636 s0 ; register $8
60000009 next 2 209 209 s1 ; register $9
60000010 next 2 210 45000014 a0 ; register $10
60000011 next 2 211 211 a1 ; register $11
60000012 next 2 212 212 a2 ; register $12
60000013 next 2 213 213 a3 ; register $13
60000014 next 2 214 214 a4 ; register $14
60000015 next 2 215 215 a5 ; register $15
60000016 next 2 216 216 a6 ; register $16
60000017 next 2 217 36563201 a7 ; register $17
60000018 next 2 218 218 s2 ; register $18
60000019 next 2 219 219 s3 ; register $19
60000020 next 2 220 220 s4 ; register $20
60000021 next 2 221 221 s5 ; register $21
60000022 next 2 222 222 s6 ; register $22
60000023 next 2 223 223 s7 ; register $23
60000024 next 2 224 224 s8 ; register $24
60000025 next 2 225 225 s9 ; register $25
60000026 next 2 226 226 s10 ; register $26
60000027 next 2 227 227 s11 ; register $27
60000028 next 2 228 228 t3 ; register $28
60000029 next 2 229 229 t4 ; register $29
60000030 next 2 230 230 t5 ; register $30
60000031 next 2 231 231 t6 ; register $31

; updating 5-bit physical memory

70000000 next 2 20000002 42000030 RAM-word-0
70000001 next 2 20000102 42000033 RAM-word-1
70000002 next 2 20000202 42000036 RAM-word-2
70000003 next 2 20000302 42000039 RAM-word-3
70000004 next 2 20000402 42000042 RAM-word-4
70000005 next 2 20000502 42000045 RAM-word-5
70000006 next 2 20000602 42000048 RAM-word-6
70000007 next 2 20000702 42000051 RAM-word-7
70000008 next 2 20000802 42000054 RAM-word-8
70000009 next 2 20000902 42000057 RAM-word-9
70000010 next 2 20001002 42000060 RAM-word-10
70000011 next 2 20001102 42000063 RAM-word-11
70000012 next 2 20001202 42000066 RAM-word-12
70000013 next 2 20001302 42000069 RAM-word-13
70000014 next 2 20001402 42000072 RAM-word-14
70000015 next 2 20001502 42000075 RAM-word-15
70000016 next 2 20001602 42000078 RAM-word-16

; checking syscall id

80000000 not 1 40000010 ; $a7 != SYSCALL_EXIT
80000001 not 1 40000011 ; $a7 != SYSCALL_READ
80000002 not 1 40000012 ; $a7 != SYSCALL_WRITE
80000003 not 1 40000013 ; $a7 != SYSCALL_OPENAT
80000004 not 1 40000014 ; $a7 != SYSCALL_BRK
80000005 and 1 80000000 80000001 ; ... and $a7 != SYSCALL_READ
80000006 and 1 80000005 80000002 ; ... and $a7 != SYSCALL_WRITE
80000007 and 1 80000006 80000003 ; ... and $a7 != SYSCALL_OPENAT
80000008 and 1 80000007 80000004 ; ... and $a7 != SYSCALL_BRK

80000009 and 1 36566800 80000008 ; ecall is active for invalid syscall id
80000010 bad 80000009 b0 ; invalid syscall id

; checking exit code

80000011 neq 1 210 20 ; $a0 != zero exit code
80000012 and 1 41000000 80000011 ; exit ecall is active with non-zero exit code
80000013 bad 80000012 b1 ; non-zero exit code

; checking division and remainder by zero

80000014 eq 1 36604800 20
80000015 bad 80000014 b2 ; division by zero

80000016 eq 1 21 20
80000017 bad 80000016 b3 ; remainder by zero

; checking address validity

; is start address of memory access word-aligned?

80000018 and 2 44000001 27 ; reset all but 3 LSBs of address
80000019 neq 1 80000018 20 ; 3 LSBs of address != 0 (address is not word-aligned)
80000020 bad 80000019 b4 ; word-unaligned memory access

; checking segmentation faults

; is start address of memory access in a valid segment?

80000021 ult 1 44000001 30 ; address < start of data segment
80000022 bad 80000021 b5 ; memory access below data segment
80000023 ugte 1 44000001 31 ; address >= end of data segment
80000024 ult 1 44000001 32 ; address < start of heap segment
80000025 and 1 80000023 80000024
80000026 bad 80000025 b6 ; memory access in between data and heap segments
80000027 ugte 1 44000001 45000001 ; address >= current end of heap segment
80000028 ult 1 44000001 202 ; address < current start of stack segment
80000029 and 1 80000027 80000028
80000030 bad 80000029 b7 ; memory access in between current heap and stack segments
80000031 ugte 1 44000001 34 ; address >= allowed end of heap segment
80000032 ult 1 44000001 45000001 ; address < current end of heap segment
80000033 and 1 80000031 80000032
80000034 bad 80000033 b8 ; memory access in between allowed and current end of heap segment
80000035 ugte 1 44000001 202 ; address >= current start of stack segment
80000036 ult 1 44000001 35 ; address < allowed start of stack segment
80000037 and 1 80000035 80000036
80000038 bad 80000037 b9 ; memory access in between current and allowed start of stack segment
80000039 ugt 1 44000001 50 ; address > highest address in 32-bit virtual address space (4GB)
80000040 bad 80000039 b10 ; memory access above stack segment

; end of BTOR2 examples/symbolic/division-by-zero-3-35.btor2
