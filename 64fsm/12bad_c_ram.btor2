; selfie.cs.uni-salzburg.at

; BTOR2 s.btor2 generated by ./beator
; with --no-syscall-id-check
; with --no-exit-code-check
; with --no-division-by-zero-check
; with --no-address-alignment-check
; with --heap-allowance 0
; with --stack-allowance 0
; with --MMU
; with --RAM

; RISC-V code obtained from s.c and invoked as: s.c
; with --constant-propagation

1 sort bitvec 1 ; Boolean
2 sort bitvec 64 ; 64-bit machine word

6 sort bitvec 4 ; 4-bit physical address
8 zero 6

; 96B total memory, 16B data, 8B heap (8B,0B), 72B stack (72B,0B)

10 zero 1
11 one 1

20 zero 2
21 one 2
22 constd 2 2
23 constd 2 3
24 constd 2 4
25 constd 2 5
26 constd 2 6
27 constd 2 7
28 constd 2 8

; start of data segment in 64-bit virtual memory
30 constd 2 69632 ; 0x11000
; end of data segment in 64-bit virtual memory
31 constd 2 69648 ; 0x11010

; start of heap segment in 64-bit virtual memory (initial program break)
32 constd 2 73728 ; 0x12000
; current end of heap segment in 64-bit virtual memory (current program break)
33 constd 2 73736 ; 0x12008

; allowed end of heap segment in 64-bit virtual memory (with 0B allowance)
34 constd 2 73736 ; 0x12008
; allowed start of stack segment in 64-bit virtual memory (with 0B allowance)
35 constd 2 4294967224 ; 0xFFFFFFB8

; offset of heap segment in 64-bit virtual memory
36 constd 2 73712 ; 0x11FF0
; offset of stack segment in 64-bit virtual memory
37 constd 2 4294967200 ; 0xFFFFFFA0

; highest address in 32-bit virtual address space (4GB)

50 constd 2 4294967288 ; 0xFFFFFFF8

; kernel-mode flag

60 state 1 kernel-mode
61 init 1 60 10 kernel-mode ; initial value is false
62 not 1 60

; unsigned-extended inputs for byte-wise reading

71 sort bitvec 8 ; 1 byte
72 sort bitvec 16 ; 2 bytes
73 sort bitvec 24 ; 3 bytes
74 sort bitvec 32 ; 4 bytes
75 sort bitvec 40 ; 5 bytes
76 sort bitvec 48 ; 6 bytes
77 sort bitvec 56 ; 7 bytes

81 input 71 1-byte-input
82 input 72 2-byte-input
83 input 73 3-byte-input
84 input 74 4-byte-input
85 input 75 5-byte-input
86 input 76 6-byte-input
87 input 77 7-byte-input

91 uext 2 81 56 ; uext-1-byte-input
92 uext 2 82 48 ; uext-2-byte-input
93 uext 2 83 40 ; uext-3-byte-input
94 uext 2 84 32 ; uext-4-byte-input
95 uext 2 85 24 ; uext-5-byte-input
96 uext 2 86 16 ; uext-6-byte-input
97 uext 2 87 8 ; uext-7-byte-input
98 input 2 8-byte-input

; 32 64-bit general-purpose registers

; non-zero initial register values

101 constd 2 65952 ; 0x101A0 for ra
102 constd 2 4294967224 ; 0xFFFFFFB8 for sp
103 constd 2 69648 ; 0x11010 for gp
105 constd 2 1 ; 0x1 for t0
108 constd 2 4294967232 ; 0xFFFFFFC0 for s0
111 constd 2 73728 ; 0x12000 for a1
112 constd 2 1 ; 0x1 for a2
116 constd 2 105553147707392 ; 0x600001DFC000 for a6
117 constd 2 63 ; 0x3F for a7

; registers

200 zero 2 zero ; register $0 is always 0
201 state 2 ra ; register $1
202 state 2 sp ; register $2
203 state 2 gp ; register $3
204 state 2 tp ; register $4
205 state 2 t0 ; register $5
206 state 2 t1 ; register $6
207 state 2 t2 ; register $7
208 state 2 s0 ; register $8
209 state 2 s1 ; register $9
210 state 2 a0 ; register $10
211 state 2 a1 ; register $11
212 state 2 a2 ; register $12
213 state 2 a3 ; register $13
214 state 2 a4 ; register $14
215 state 2 a5 ; register $15
216 state 2 a6 ; register $16
217 state 2 a7 ; register $17
218 state 2 s2 ; register $18
219 state 2 s3 ; register $19
220 state 2 s4 ; register $20
221 state 2 s5 ; register $21
222 state 2 s6 ; register $22
223 state 2 s7 ; register $23
224 state 2 s8 ; register $24
225 state 2 s9 ; register $25
226 state 2 s10 ; register $26
227 state 2 s11 ; register $27
228 state 2 t3 ; register $28
229 state 2 t4 ; register $29
230 state 2 t5 ; register $30
231 state 2 t6 ; register $31

; initializing registers

301 init 2 201 101 ra ; initial value is 65952
302 init 2 202 102 sp ; initial value is 4294967224
303 init 2 203 103 gp ; initial value is 69648
304 init 2 204 20 tp ; initial value is 0
305 init 2 205 105 t0 ; initial value is 1
306 init 2 206 20 t1 ; initial value is 0
307 init 2 207 20 t2 ; initial value is 0
308 init 2 208 108 s0 ; initial value is 4294967232
309 init 2 209 20 s1 ; initial value is 0
310 init 2 210 20 a0 ; initial value is 0
311 init 2 211 111 a1 ; initial value is 73728
312 init 2 212 112 a2 ; initial value is 1
313 init 2 213 20 a3 ; initial value is 0
314 init 2 214 20 a4 ; initial value is 0
315 init 2 215 20 a5 ; initial value is 0
316 init 2 216 116 a6 ; initial value is 105553147707392
317 init 2 217 117 a7 ; initial value is 63
318 init 2 218 20 s2 ; initial value is 0
319 init 2 219 20 s3 ; initial value is 0
320 init 2 220 20 s4 ; initial value is 0
321 init 2 221 20 s5 ; initial value is 0
322 init 2 222 20 s6 ; initial value is 0
323 init 2 223 20 s7 ; initial value is 0
324 init 2 224 20 s8 ; initial value is 0
325 init 2 225 20 s9 ; initial value is 0
326 init 2 226 20 s10 ; initial value is 0
327 init 2 227 20 s11 ; initial value is 0
328 init 2 228 20 t3 ; initial value is 0
329 init 2 229 20 t4 ; initial value is 0
330 init 2 230 20 t5 ; initial value is 0
331 init 2 231 20 t6 ; initial value is 0

; 64-bit program counter encoded in Boolean flags

; 16553600 unreachable state at 10000
; 16554000 unreachable state at 10004
; 16554400 unreachable state at 10008
; 16554800 unreachable state at 1000C
; 16555200 unreachable state at 10010
; 16555600 unreachable state at 10014
; 16556000 unreachable state at 10018
; 16556400 unreachable state at 1001C
; 16556800 unreachable state at 10020
; 16557200 unreachable state at 10024
; 16557600 unreachable state at 10028
; 16558000 unreachable state at 1002C
; 16558400 unreachable state at 10030
; 16558800 unreachable state at 10034
; 16559200 unreachable state at 10038
; 16559600 unreachable state at 1003C
; 16560000 unreachable state at 10040
; 16560400 unreachable state at 10044
; 16560800 unreachable state at 10048
; 16561200 unreachable state at 1004C
16561600 state 1 pc=0x10050
16561601 init 1 16561600 10
16562000 state 1 pc=0x10054
16562001 init 1 16562000 10
16562400 state 1 pc=0x10058
16562401 init 1 16562400 10
16562800 state 1 pc=0x1005C
16562801 init 1 16562800 10
16563200 state 1 pc=0x10060
16563201 init 1 16563200 10
16563600 state 1 pc=0x10064
16563601 init 1 16563600 10
; 16564000 unreachable state at 10068
; 16564400 unreachable state at 1006C
; 16564800 unreachable state at 10070
; 16565200 unreachable state at 10074
; 16565600 unreachable state at 10078
; 16566000 unreachable state at 1007C
; 16566400 unreachable state at 10080
16566800 state 1 pc=0x10084
16566801 init 1 16566800 11 ; initial program counter
16567200 state 1 pc=0x10088
16567201 init 1 16567200 10
; 16567600 unreachable state at 1008C
; 16568000 unreachable state at 10090
; 16568400 unreachable state at 10094
; 16568800 unreachable state at 10098
; 16569200 unreachable state at 1009C
; 16569600 unreachable state at 100A0
; 16570000 unreachable state at 100A4
; 16570400 unreachable state at 100A8
; 16570800 unreachable state at 100AC
; 16571200 unreachable state at 100B0
; 16571600 unreachable state at 100B4
; 16572000 unreachable state at 100B8
; 16572400 unreachable state at 100BC
; 16572800 unreachable state at 100C0
; 16573200 unreachable state at 100C4
; 16573600 unreachable state at 100C8
; 16574000 unreachable state at 100CC
; 16574400 unreachable state at 100D0
; 16574800 unreachable state at 100D4
; 16575200 unreachable state at 100D8
; 16575600 unreachable state at 100DC
; 16576000 unreachable state at 100E0
; 16576400 unreachable state at 100E4
; 16576800 unreachable state at 100E8
; 16577200 unreachable state at 100EC
; 16577600 unreachable state at 100F0
; 16578000 unreachable state at 100F4
; 16578400 unreachable state at 100F8
; 16578800 unreachable state at 100FC
; 16579200 unreachable state at 10100
; 16579600 unreachable state at 10104
; 16580000 unreachable state at 10108
; 16580400 unreachable state at 1010C
; 16580800 unreachable state at 10110
; 16581200 unreachable state at 10114
; 16581600 unreachable state at 10118
; 16582000 unreachable state at 1011C
; 16582400 unreachable state at 10120
; 16582800 unreachable state at 10124
; 16583200 unreachable state at 10128
; 16583600 unreachable state at 1012C
; 16584000 unreachable state at 10130
; 16584400 unreachable state at 10134
; 16584800 unreachable state at 10138
; 16585200 unreachable state at 1013C
; 16585600 unreachable state at 10140
; 16586000 unreachable state at 10144
; 16586400 unreachable state at 10148
; 16586800 unreachable state at 1014C
; 16587200 unreachable state at 10150
; 16587600 unreachable state at 10154
; 16588000 unreachable state at 10158
; 16588400 unreachable state at 1015C
; 16588800 unreachable state at 10160
; 16589200 unreachable state at 10164
; 16589600 unreachable state at 10168
; 16590000 unreachable state at 1016C
; 16590400 unreachable state at 10170
; 16590800 unreachable state at 10174
; 16591200 unreachable state at 10178
; 16591600 unreachable state at 1017C
; 16592000 unreachable state at 10180
; 16592400 unreachable state at 10184
; 16592800 unreachable state at 10188
; 16593200 unreachable state at 1018C
; 16593600 unreachable state at 10190
; 16594000 unreachable state at 10194
; 16594400 unreachable state at 10198
; 16594800 unreachable state at 1019C
16595200 state 1 pc=0x101A0
16595201 init 1 16595200 10
16595600 state 1 pc=0x101A4
16595601 init 1 16595600 10
16596000 state 1 pc=0x101A8
16596001 init 1 16596000 10
16596400 state 1 pc=0x101AC
16596401 init 1 16596400 10
16596800 state 1 pc=0x101B0
16596801 init 1 16596800 10
16597200 state 1 pc=0x101B4
16597201 init 1 16597200 10
16597600 state 1 pc=0x101B8
16597601 init 1 16597600 10
16598000 state 1 pc=0x101BC
16598001 init 1 16598000 10
16598400 state 1 pc=0x101C0
16598401 init 1 16598400 10
16598800 state 1 pc=0x101C4
16598801 init 1 16598800 10
16599200 state 1 pc=0x101C8
16599201 init 1 16599200 10
16599600 state 1 pc=0x101CC
16599601 init 1 16599600 10
16600000 state 1 pc=0x101D0
16600001 init 1 16600000 10
16600400 state 1 pc=0x101D4
16600401 init 1 16600400 10
16600800 state 1 pc=0x101D8
16600801 init 1 16600800 10
16601200 state 1 pc=0x101DC
16601201 init 1 16601200 10
16601600 state 1 pc=0x101E0
16601601 init 1 16601600 10
16602000 state 1 pc=0x101E4
16602001 init 1 16602000 10
16602400 state 1 pc=0x101E8
16602401 init 1 16602400 10
16602800 state 1 pc=0x101EC
16602801 init 1 16602800 10
16603200 state 1 pc=0x101F0
16603201 init 1 16603200 10
16603600 state 1 pc=0x101F4
16603601 init 1 16603600 10
16604000 state 1 pc=0x101F8
16604001 init 1 16604000 10
16604400 state 1 pc=0x101FC
16604401 init 1 16604400 10
16604800 state 1 pc=0x10200
16604801 init 1 16604800 10
16605200 state 1 pc=0x10204
16605201 init 1 16605200 10
16605600 state 1 pc=0x10208
16605601 init 1 16605600 10
16606000 state 1 pc=0x1020C
16606001 init 1 16606000 10
16606400 state 1 pc=0x10210
16606401 init 1 16606400 10
16606800 state 1 pc=0x10214
16606801 init 1 16606800 10
16607200 state 1 pc=0x10218
16607201 init 1 16607200 10
16607600 state 1 pc=0x1021C
16607601 init 1 16607600 10
16608000 state 1 pc=0x10220
16608001 init 1 16608000 10
16608400 state 1 pc=0x10224
16608401 init 1 16608400 10
16608800 state 1 pc=0x10228
16608801 init 1 16608800 10
16609200 state 1 pc=0x1022C
16609201 init 1 16609200 10
16609600 state 1 pc=0x10230
16609601 init 1 16609600 10
16610000 state 1 pc=0x10234
16610001 init 1 16610000 10

; 4-bit physical memory

; data segment

20000000 constd 6 0 ; 0x0 paddr, 0x11000 vaddr
20000001 constd 2 73728 ; 0x12000 word
20000002 state 2 RAM-word-0
20000003 init 2 20000002 20000001
20000100 constd 6 1 ; 0x1 paddr, 0x11008 vaddr
20000101 constd 2 73736 ; 0x12008 word
20000102 state 2 RAM-word-1
20000103 init 2 20000102 20000101

; heap segment

20000200 constd 6 2 ; 0x2 paddr, 0x12000 vaddr
20000202 state 2 RAM-word-2
20000203 init 2 20000202 20

; stack segment

20000300 constd 6 3 ; 0x3 paddr, 0xFFFFFFB8 vaddr
20000302 state 2 RAM-word-3
20000303 init 2 20000302 20
20000400 constd 6 4 ; 0x4 paddr, 0xFFFFFFC0 vaddr
20000402 state 2 RAM-word-4
20000403 init 2 20000402 20
20000500 constd 6 5 ; 0x5 paddr, 0xFFFFFFC8 vaddr
20000501 constd 2 65616 ; 0x10050 word
20000502 state 2 RAM-word-5
20000503 init 2 20000502 20000501
20000600 constd 6 6 ; 0x6 paddr, 0xFFFFFFD0 vaddr
20000601 constd 2 1 ; 0x1 word
20000602 state 2 RAM-word-6
20000603 init 2 20000602 20000601
20000700 constd 6 7 ; 0x7 paddr, 0xFFFFFFD8 vaddr
20000701 constd 2 4294967264 ; 0xFFFFFFE0 word
20000702 state 2 RAM-word-7
20000703 init 2 20000702 20000701
20000800 constd 6 8 ; 0x8 paddr, 0xFFFFFFE0 vaddr
20000801 constd 2 4294967288 ; 0xFFFFFFF8 word
20000802 state 2 RAM-word-8
20000803 init 2 20000802 20000801
20000900 constd 6 9 ; 0x9 paddr, 0xFFFFFFE8 vaddr
20000902 state 2 RAM-word-9
20000903 init 2 20000902 20
20001000 constd 6 10 ; 0xA paddr, 0xFFFFFFF0 vaddr
20001002 state 2 RAM-word-10
20001003 init 2 20001002 20
20001100 constd 6 11 ; 0xB paddr, 0xFFFFFFF8 vaddr
20001101 constd 2 13510992162139763 ; 0x30002D00632E73 word
20001102 state 2 RAM-word-11
20001103 init 2 20001102 20001101

; data flow

36561200 constd 2 65616 ; 0x10050
36561600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36561601 add 2 202 36561600
36561602 ite 2 16561600 36561601 202 ; 0x10050(~1): addi sp,sp,-8
36562000 ugte 1 202 30 ; address >= start of segment
36562001 ult 1 202 31 ; address < end of segment
36562002 and 1 36562000 36562001
36562003 sub 2 202 30
36562004 slice 6 36562003 6 3
36562005 ite 6 36562002 36562004 8
36562006 ugte 1 202 32 ; address >= start of segment
36562007 ult 1 202 34 ; address < end of segment
36562008 and 1 36562006 36562007
36562009 sub 2 202 36
36562010 slice 6 36562009 6 3
36562011 ite 6 36562008 36562010 36562005
36562012 ugte 1 202 35 ; address >= start of segment
36562013 ulte 1 202 50 ; address <= end of segment
36562014 and 1 36562012 36562013
36562015 sub 2 202 37
36562016 slice 6 36562015 6 3
36562017 ite 6 36562014 36562016 36562011
36562018 ite 2 16562000 202 30 ; for checking address validity
36562019 eq 1 36562017 20000000
36562020 ite 2 36562019 210 20000002
36562021 ite 2 16562000 36562020 20000002
36562022 eq 1 36562017 20000100
36562023 ite 2 36562022 210 20000102
36562024 ite 2 16562000 36562023 20000102
36562025 eq 1 36562017 20000200
36562026 ite 2 36562025 210 20000202
36562027 ite 2 16562000 36562026 20000202
36562028 eq 1 36562017 20000300
36562029 ite 2 36562028 210 20000302
36562030 ite 2 16562000 36562029 20000302
36562031 eq 1 36562017 20000400
36562032 ite 2 36562031 210 20000402
36562033 ite 2 16562000 36562032 20000402
36562034 eq 1 36562017 20000500
36562035 ite 2 36562034 210 20000502
36562036 ite 2 16562000 36562035 20000502
36562037 eq 1 36562017 20000600
36562038 ite 2 36562037 210 20000602
36562039 ite 2 16562000 36562038 20000602
36562040 eq 1 36562017 20000700
36562041 ite 2 36562040 210 20000702
36562042 ite 2 16562000 36562041 20000702
36562043 eq 1 36562017 20000800
36562044 ite 2 36562043 210 20000802
36562045 ite 2 16562000 36562044 20000802
36562046 eq 1 36562017 20000900
36562047 ite 2 36562046 210 20000902
36562048 ite 2 16562000 36562047 20000902
36562049 eq 1 36562017 20001000
36562050 ite 2 36562049 210 20001002
36562051 ite 2 16562000 36562050 20001002
36562052 eq 1 36562017 20001100
36562053 ite 2 36562052 210 20001102
36562054 ite 2 16562000 36562053 20001102 ; 0x10054(~1): sd a0,0(sp)
36562400 ugte 1 202 30 ; address >= start of segment
36562401 ult 1 202 31 ; address < end of segment
36562402 and 1 36562400 36562401
36562403 sub 2 202 30
36562404 slice 6 36562403 6 3
36562405 ite 6 36562402 36562404 8
36562406 ugte 1 202 32 ; address >= start of segment
36562407 ult 1 202 34 ; address < end of segment
36562408 and 1 36562406 36562407
36562409 sub 2 202 36
36562410 slice 6 36562409 6 3
36562411 ite 6 36562408 36562410 36562405
36562412 ugte 1 202 35 ; address >= start of segment
36562413 ulte 1 202 50 ; address <= end of segment
36562414 and 1 36562412 36562413
36562415 sub 2 202 37
36562416 slice 6 36562415 6 3
36562417 ite 6 36562414 36562416 36562411
36562418 ite 2 16562400 202 36562018 ; for checking address validity
36562419 eq 1 36562417 20000000
36562420 ite 2 36562419 20000002 20
36562421 eq 1 36562417 20000100
36562422 ite 2 36562421 20000102 36562420
36562423 eq 1 36562417 20000200
36562424 ite 2 36562423 20000202 36562422
36562425 eq 1 36562417 20000300
36562426 ite 2 36562425 20000302 36562424
36562427 eq 1 36562417 20000400
36562428 ite 2 36562427 20000402 36562426
36562429 eq 1 36562417 20000500
36562430 ite 2 36562429 20000502 36562428
36562431 eq 1 36562417 20000600
36562432 ite 2 36562431 20000602 36562430
36562433 eq 1 36562417 20000700
36562434 ite 2 36562433 20000702 36562432
36562435 eq 1 36562417 20000800
36562436 ite 2 36562435 20000802 36562434
36562437 eq 1 36562417 20000900
36562438 ite 2 36562437 20000902 36562436
36562439 eq 1 36562417 20001000
36562440 ite 2 36562439 20001002 36562438
36562441 eq 1 36562417 20001100
36562442 ite 2 36562441 20001102 36562440
36562443 ite 2 16562400 36562442 210 ; 0x10058(~1): ld a0,0(sp)
36562800 constd 2 8 ; 0x8
36562801 add 2 202 36562800
36562802 ite 2 16562800 36562801 36561602 ; 0x1005C(~1): addi sp,sp,8
36563200 constd 2 93 ; 0x5D
36563201 ite 2 16563200 36563200 217 ; 0x10060(~1): addi a7,zero,93
36563600 ite 1 16563600 11 10 ; 0x10064(~1): ecall
36566800 ite 1 16566800 11 36563600 ; 0x10084(~1): ecall
36589200 constd 2 65896 ; 0x10168
36594800 constd 2 65952 ; 0x101A0
36595200 ite 2 16595200 200 36562443 ; 0x101A0(~8): addi a0,zero,0
36595600 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36595601 add 2 203 36595600
36595602 ugte 1 36595601 30 ; address >= start of segment
36595603 ult 1 36595601 31 ; address < end of segment
36595604 and 1 36595602 36595603
36595605 sub 2 36595601 30
36595606 slice 6 36595605 6 3
36595607 ite 6 36595604 36595606 8
36595608 ugte 1 36595601 32 ; address >= start of segment
36595609 ult 1 36595601 34 ; address < end of segment
36595610 and 1 36595608 36595609
36595611 sub 2 36595601 36
36595612 slice 6 36595611 6 3
36595613 ite 6 36595610 36595612 36595607
36595614 ugte 1 36595601 35 ; address >= start of segment
36595615 ulte 1 36595601 50 ; address <= end of segment
36595616 and 1 36595614 36595615
36595617 sub 2 36595601 37
36595618 slice 6 36595617 6 3
36595619 ite 6 36595616 36595618 36595613
36595620 ite 2 16595600 36595601 36562418 ; for checking address validity
36595621 eq 1 36595619 20000000
36595622 ite 2 36595621 20000002 20
36595623 eq 1 36595619 20000100
36595624 ite 2 36595623 20000102 36595622
36595625 eq 1 36595619 20000200
36595626 ite 2 36595625 20000202 36595624
36595627 eq 1 36595619 20000300
36595628 ite 2 36595627 20000302 36595626
36595629 eq 1 36595619 20000400
36595630 ite 2 36595629 20000402 36595628
36595631 eq 1 36595619 20000500
36595632 ite 2 36595631 20000502 36595630
36595633 eq 1 36595619 20000600
36595634 ite 2 36595633 20000602 36595632
36595635 eq 1 36595619 20000700
36595636 ite 2 36595635 20000702 36595634
36595637 eq 1 36595619 20000800
36595638 ite 2 36595637 20000802 36595636
36595639 eq 1 36595619 20000900
36595640 ite 2 36595639 20000902 36595638
36595641 eq 1 36595619 20001000
36595642 ite 2 36595641 20001002 36595640
36595643 eq 1 36595619 20001100
36595644 ite 2 36595643 20001102 36595642
36595645 ite 2 16595600 36595644 205 ; 0x101A4(~10): ld t0,-16(gp)
36596000 ugte 1 205 30 ; address >= start of segment
36596001 ult 1 205 31 ; address < end of segment
36596002 and 1 36596000 36596001
36596003 sub 2 205 30
36596004 slice 6 36596003 6 3
36596005 ite 6 36596002 36596004 8
36596006 ugte 1 205 32 ; address >= start of segment
36596007 ult 1 205 34 ; address < end of segment
36596008 and 1 36596006 36596007
36596009 sub 2 205 36
36596010 slice 6 36596009 6 3
36596011 ite 6 36596008 36596010 36596005
36596012 ugte 1 205 35 ; address >= start of segment
36596013 ulte 1 205 50 ; address <= end of segment
36596014 and 1 36596012 36596013
36596015 sub 2 205 37
36596016 slice 6 36596015 6 3
36596017 ite 6 36596014 36596016 36596011
36596018 ite 2 16596000 205 36595620 ; for checking address validity
36596019 eq 1 36596017 20000000
36596020 ite 2 36596019 20000002 20
36596021 eq 1 36596017 20000100
36596022 ite 2 36596021 20000102 36596020
36596023 eq 1 36596017 20000200
36596024 ite 2 36596023 20000202 36596022
36596025 eq 1 36596017 20000300
36596026 ite 2 36596025 20000302 36596024
36596027 eq 1 36596017 20000400
36596028 ite 2 36596027 20000402 36596026
36596029 eq 1 36596017 20000500
36596030 ite 2 36596029 20000502 36596028
36596031 eq 1 36596017 20000600
36596032 ite 2 36596031 20000602 36596030
36596033 eq 1 36596017 20000700
36596034 ite 2 36596033 20000702 36596032
36596035 eq 1 36596017 20000800
36596036 ite 2 36596035 20000802 36596034
36596037 eq 1 36596017 20000900
36596038 ite 2 36596037 20000902 36596036
36596039 eq 1 36596017 20001000
36596040 ite 2 36596039 20001002 36596038
36596041 eq 1 36596017 20001100
36596042 ite 2 36596041 20001102 36596040
36596043 ite 2 16596000 36596042 36595645 ; 0x101A8(~10): ld t0,0(t0)
36596400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36596401 add 2 208 36596400
36596402 ugte 1 36596401 30 ; address >= start of segment
36596403 ult 1 36596401 31 ; address < end of segment
36596404 and 1 36596402 36596403
36596405 sub 2 36596401 30
36596406 slice 6 36596405 6 3
36596407 ite 6 36596404 36596406 8
36596408 ugte 1 36596401 32 ; address >= start of segment
36596409 ult 1 36596401 34 ; address < end of segment
36596410 and 1 36596408 36596409
36596411 sub 2 36596401 36
36596412 slice 6 36596411 6 3
36596413 ite 6 36596410 36596412 36596407
36596414 ugte 1 36596401 35 ; address >= start of segment
36596415 ulte 1 36596401 50 ; address <= end of segment
36596416 and 1 36596414 36596415
36596417 sub 2 36596401 37
36596418 slice 6 36596417 6 3
36596419 ite 6 36596416 36596418 36596413
36596420 ite 2 16596400 36596401 36596018 ; for checking address validity
36596421 eq 1 36596419 20000000
36596422 ite 2 36596421 205 36562021
36596423 ite 2 16596400 36596422 36562021
36596424 eq 1 36596419 20000100
36596425 ite 2 36596424 205 36562024
36596426 ite 2 16596400 36596425 36562024
36596427 eq 1 36596419 20000200
36596428 ite 2 36596427 205 36562027
36596429 ite 2 16596400 36596428 36562027
36596430 eq 1 36596419 20000300
36596431 ite 2 36596430 205 36562030
36596432 ite 2 16596400 36596431 36562030
36596433 eq 1 36596419 20000400
36596434 ite 2 36596433 205 36562033
36596435 ite 2 16596400 36596434 36562033
36596436 eq 1 36596419 20000500
36596437 ite 2 36596436 205 36562036
36596438 ite 2 16596400 36596437 36562036
36596439 eq 1 36596419 20000600
36596440 ite 2 36596439 205 36562039
36596441 ite 2 16596400 36596440 36562039
36596442 eq 1 36596419 20000700
36596443 ite 2 36596442 205 36562042
36596444 ite 2 16596400 36596443 36562042
36596445 eq 1 36596419 20000800
36596446 ite 2 36596445 205 36562045
36596447 ite 2 16596400 36596446 36562045
36596448 eq 1 36596419 20000900
36596449 ite 2 36596448 205 36562048
36596450 ite 2 16596400 36596449 36562048
36596451 eq 1 36596419 20001000
36596452 ite 2 36596451 205 36562051
36596453 ite 2 16596400 36596452 36562051
36596454 eq 1 36596419 20001100
36596455 ite 2 36596454 205 36562054
36596456 ite 2 16596400 36596455 36562054 ; 0x101AC(~10): sd t0,-8(s0)
36596800 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36596801 add 2 208 36596800
36596802 ugte 1 36596801 30 ; address >= start of segment
36596803 ult 1 36596801 31 ; address < end of segment
36596804 and 1 36596802 36596803
36596805 sub 2 36596801 30
36596806 slice 6 36596805 6 3
36596807 ite 6 36596804 36596806 8
36596808 ugte 1 36596801 32 ; address >= start of segment
36596809 ult 1 36596801 34 ; address < end of segment
36596810 and 1 36596808 36596809
36596811 sub 2 36596801 36
36596812 slice 6 36596811 6 3
36596813 ite 6 36596810 36596812 36596807
36596814 ugte 1 36596801 35 ; address >= start of segment
36596815 ulte 1 36596801 50 ; address <= end of segment
36596816 and 1 36596814 36596815
36596817 sub 2 36596801 37
36596818 slice 6 36596817 6 3
36596819 ite 6 36596816 36596818 36596813
36596820 ite 2 16596800 36596801 36596420 ; for checking address validity
36596821 eq 1 36596819 20000000
36596822 ite 2 36596821 20000002 20
36596823 eq 1 36596819 20000100
36596824 ite 2 36596823 20000102 36596822
36596825 eq 1 36596819 20000200
36596826 ite 2 36596825 20000202 36596824
36596827 eq 1 36596819 20000300
36596828 ite 2 36596827 20000302 36596826
36596829 eq 1 36596819 20000400
36596830 ite 2 36596829 20000402 36596828
36596831 eq 1 36596819 20000500
36596832 ite 2 36596831 20000502 36596830
36596833 eq 1 36596819 20000600
36596834 ite 2 36596833 20000602 36596832
36596835 eq 1 36596819 20000700
36596836 ite 2 36596835 20000702 36596834
36596837 eq 1 36596819 20000800
36596838 ite 2 36596837 20000802 36596836
36596839 eq 1 36596819 20000900
36596840 ite 2 36596839 20000902 36596838
36596841 eq 1 36596819 20001000
36596842 ite 2 36596841 20001002 36596840
36596843 eq 1 36596819 20001100
36596844 ite 2 36596843 20001102 36596842
36596845 ite 2 16596800 36596844 36596043 ; 0x101B0(~12): ld t0,-8(s0)
36597200 constd 2 48 ; 0x30
36597201 ite 2 16597200 36597200 206 ; 0x101B4(~12): addi t1,zero,48
36597600 ult 1 206 205
36597601 uext 2 36597600 63
36597602 ite 2 16597600 36597601 36596845 ; 0x101B8(~12): sltu t0,t1,t0
36598000 eq 1 205 200 ; 0x101BC(~12): beq t0,zero,6
36598001 not 1 36598000
36598400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36598401 add 2 208 36598400
36598402 ugte 1 36598401 30 ; address >= start of segment
36598403 ult 1 36598401 31 ; address < end of segment
36598404 and 1 36598402 36598403
36598405 sub 2 36598401 30
36598406 slice 6 36598405 6 3
36598407 ite 6 36598404 36598406 8
36598408 ugte 1 36598401 32 ; address >= start of segment
36598409 ult 1 36598401 34 ; address < end of segment
36598410 and 1 36598408 36598409
36598411 sub 2 36598401 36
36598412 slice 6 36598411 6 3
36598413 ite 6 36598410 36598412 36598407
36598414 ugte 1 36598401 35 ; address >= start of segment
36598415 ulte 1 36598401 50 ; address <= end of segment
36598416 and 1 36598414 36598415
36598417 sub 2 36598401 37
36598418 slice 6 36598417 6 3
36598419 ite 6 36598416 36598418 36598413
36598420 ite 2 16598400 36598401 36596820 ; for checking address validity
36598421 eq 1 36598419 20000000
36598422 ite 2 36598421 20000002 20
36598423 eq 1 36598419 20000100
36598424 ite 2 36598423 20000102 36598422
36598425 eq 1 36598419 20000200
36598426 ite 2 36598425 20000202 36598424
36598427 eq 1 36598419 20000300
36598428 ite 2 36598427 20000302 36598426
36598429 eq 1 36598419 20000400
36598430 ite 2 36598429 20000402 36598428
36598431 eq 1 36598419 20000500
36598432 ite 2 36598431 20000502 36598430
36598433 eq 1 36598419 20000600
36598434 ite 2 36598433 20000602 36598432
36598435 eq 1 36598419 20000700
36598436 ite 2 36598435 20000702 36598434
36598437 eq 1 36598419 20000800
36598438 ite 2 36598437 20000802 36598436
36598439 eq 1 36598419 20000900
36598440 ite 2 36598439 20000902 36598438
36598441 eq 1 36598419 20001000
36598442 ite 2 36598441 20001002 36598440
36598443 eq 1 36598419 20001100
36598444 ite 2 36598443 20001102 36598442
36598445 ite 2 16598400 36598444 36597602 ; 0x101C0(~13): ld t0,-8(s0)
36598800 constd 2 1 ; 0x1
36598801 ite 2 16598800 36598800 36597201 ; 0x101C4(~13): addi t1,zero,1
36599200 sub 2 205 206
36599201 ite 2 16599200 36599200 36598445 ; 0x101C8(~13): sub t0,t0,t1
36599600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36599601 add 2 208 36599600
36599602 ugte 1 36599601 30 ; address >= start of segment
36599603 ult 1 36599601 31 ; address < end of segment
36599604 and 1 36599602 36599603
36599605 sub 2 36599601 30
36599606 slice 6 36599605 6 3
36599607 ite 6 36599604 36599606 8
36599608 ugte 1 36599601 32 ; address >= start of segment
36599609 ult 1 36599601 34 ; address < end of segment
36599610 and 1 36599608 36599609
36599611 sub 2 36599601 36
36599612 slice 6 36599611 6 3
36599613 ite 6 36599610 36599612 36599607
36599614 ugte 1 36599601 35 ; address >= start of segment
36599615 ulte 1 36599601 50 ; address <= end of segment
36599616 and 1 36599614 36599615
36599617 sub 2 36599601 37
36599618 slice 6 36599617 6 3
36599619 ite 6 36599616 36599618 36599613
36599620 ite 2 16599600 36599601 36598420 ; for checking address validity
36599621 eq 1 36599619 20000000
36599622 ite 2 36599621 205 36596423
36599623 ite 2 16599600 36599622 36596423
36599624 eq 1 36599619 20000100
36599625 ite 2 36599624 205 36596426
36599626 ite 2 16599600 36599625 36596426
36599627 eq 1 36599619 20000200
36599628 ite 2 36599627 205 36596429
36599629 ite 2 16599600 36599628 36596429
36599630 eq 1 36599619 20000300
36599631 ite 2 36599630 205 36596432
36599632 ite 2 16599600 36599631 36596432
36599633 eq 1 36599619 20000400
36599634 ite 2 36599633 205 36596435
36599635 ite 2 16599600 36599634 36596435
36599636 eq 1 36599619 20000500
36599637 ite 2 36599636 205 36596438
36599638 ite 2 16599600 36599637 36596438
36599639 eq 1 36599619 20000600
36599640 ite 2 36599639 205 36596441
36599641 ite 2 16599600 36599640 36596441
36599642 eq 1 36599619 20000700
36599643 ite 2 36599642 205 36596444
36599644 ite 2 16599600 36599643 36596444
36599645 eq 1 36599619 20000800
36599646 ite 2 36599645 205 36596447
36599647 ite 2 16599600 36599646 36596447
36599648 eq 1 36599619 20000900
36599649 ite 2 36599648 205 36596450
36599650 ite 2 16599600 36599649 36596450
36599651 eq 1 36599619 20001000
36599652 ite 2 36599651 205 36596453
36599653 ite 2 16599600 36599652 36596453
36599654 eq 1 36599619 20001100
36599655 ite 2 36599654 205 36596456
36599656 ite 2 16599600 36599655 36596456 ; 0x101CC(~13): sd t0,-8(s0)
36600400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36600401 add 2 208 36600400
36600402 ugte 1 36600401 30 ; address >= start of segment
36600403 ult 1 36600401 31 ; address < end of segment
36600404 and 1 36600402 36600403
36600405 sub 2 36600401 30
36600406 slice 6 36600405 6 3
36600407 ite 6 36600404 36600406 8
36600408 ugte 1 36600401 32 ; address >= start of segment
36600409 ult 1 36600401 34 ; address < end of segment
36600410 and 1 36600408 36600409
36600411 sub 2 36600401 36
36600412 slice 6 36600411 6 3
36600413 ite 6 36600410 36600412 36600407
36600414 ugte 1 36600401 35 ; address >= start of segment
36600415 ulte 1 36600401 50 ; address <= end of segment
36600416 and 1 36600414 36600415
36600417 sub 2 36600401 37
36600418 slice 6 36600417 6 3
36600419 ite 6 36600416 36600418 36600413
36600420 ite 2 16600400 36600401 36599620 ; for checking address validity
36600421 eq 1 36600419 20000000
36600422 ite 2 36600421 20000002 20
36600423 eq 1 36600419 20000100
36600424 ite 2 36600423 20000102 36600422
36600425 eq 1 36600419 20000200
36600426 ite 2 36600425 20000202 36600424
36600427 eq 1 36600419 20000300
36600428 ite 2 36600427 20000302 36600426
36600429 eq 1 36600419 20000400
36600430 ite 2 36600429 20000402 36600428
36600431 eq 1 36600419 20000500
36600432 ite 2 36600431 20000502 36600430
36600433 eq 1 36600419 20000600
36600434 ite 2 36600433 20000602 36600432
36600435 eq 1 36600419 20000700
36600436 ite 2 36600435 20000702 36600434
36600437 eq 1 36600419 20000800
36600438 ite 2 36600437 20000802 36600436
36600439 eq 1 36600419 20000900
36600440 ite 2 36600439 20000902 36600438
36600441 eq 1 36600419 20001000
36600442 ite 2 36600441 20001002 36600440
36600443 eq 1 36600419 20001100
36600444 ite 2 36600443 20001102 36600442
36600445 ite 2 16600400 36600444 36599201 ; 0x101D4(~15): ld t0,-8(s0)
36600800 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36600801 add 2 203 36600800
36600802 ugte 1 36600801 30 ; address >= start of segment
36600803 ult 1 36600801 31 ; address < end of segment
36600804 and 1 36600802 36600803
36600805 sub 2 36600801 30
36600806 slice 6 36600805 6 3
36600807 ite 6 36600804 36600806 8
36600808 ugte 1 36600801 32 ; address >= start of segment
36600809 ult 1 36600801 34 ; address < end of segment
36600810 and 1 36600808 36600809
36600811 sub 2 36600801 36
36600812 slice 6 36600811 6 3
36600813 ite 6 36600810 36600812 36600807
36600814 ugte 1 36600801 35 ; address >= start of segment
36600815 ulte 1 36600801 50 ; address <= end of segment
36600816 and 1 36600814 36600815
36600817 sub 2 36600801 37
36600818 slice 6 36600817 6 3
36600819 ite 6 36600816 36600818 36600813
36600820 ite 2 16600800 36600801 36600420 ; for checking address validity
36600821 eq 1 36600819 20000000
36600822 ite 2 36600821 20000002 20
36600823 eq 1 36600819 20000100
36600824 ite 2 36600823 20000102 36600822
36600825 eq 1 36600819 20000200
36600826 ite 2 36600825 20000202 36600824
36600827 eq 1 36600819 20000300
36600828 ite 2 36600827 20000302 36600826
36600829 eq 1 36600819 20000400
36600830 ite 2 36600829 20000402 36600828
36600831 eq 1 36600819 20000500
36600832 ite 2 36600831 20000502 36600830
36600833 eq 1 36600819 20000600
36600834 ite 2 36600833 20000602 36600832
36600835 eq 1 36600819 20000700
36600836 ite 2 36600835 20000702 36600834
36600837 eq 1 36600819 20000800
36600838 ite 2 36600837 20000802 36600836
36600839 eq 1 36600819 20000900
36600840 ite 2 36600839 20000902 36600838
36600841 eq 1 36600819 20001000
36600842 ite 2 36600841 20001002 36600840
36600843 eq 1 36600819 20001100
36600844 ite 2 36600843 20001102 36600842
36600845 ite 2 16600800 36600844 36598801 ; 0x101D8(~15): ld t1,-16(gp)
36601200 ugte 1 206 30 ; address >= start of segment
36601201 ult 1 206 31 ; address < end of segment
36601202 and 1 36601200 36601201
36601203 sub 2 206 30
36601204 slice 6 36601203 6 3
36601205 ite 6 36601202 36601204 8
36601206 ugte 1 206 32 ; address >= start of segment
36601207 ult 1 206 34 ; address < end of segment
36601208 and 1 36601206 36601207
36601209 sub 2 206 36
36601210 slice 6 36601209 6 3
36601211 ite 6 36601208 36601210 36601205
36601212 ugte 1 206 35 ; address >= start of segment
36601213 ulte 1 206 50 ; address <= end of segment
36601214 and 1 36601212 36601213
36601215 sub 2 206 37
36601216 slice 6 36601215 6 3
36601217 ite 6 36601214 36601216 36601211
36601218 ite 2 16601200 206 36600820 ; for checking address validity
36601219 eq 1 36601217 20000000
36601220 ite 2 36601219 20000002 20
36601221 eq 1 36601217 20000100
36601222 ite 2 36601221 20000102 36601220
36601223 eq 1 36601217 20000200
36601224 ite 2 36601223 20000202 36601222
36601225 eq 1 36601217 20000300
36601226 ite 2 36601225 20000302 36601224
36601227 eq 1 36601217 20000400
36601228 ite 2 36601227 20000402 36601226
36601229 eq 1 36601217 20000500
36601230 ite 2 36601229 20000502 36601228
36601231 eq 1 36601217 20000600
36601232 ite 2 36601231 20000602 36601230
36601233 eq 1 36601217 20000700
36601234 ite 2 36601233 20000702 36601232
36601235 eq 1 36601217 20000800
36601236 ite 2 36601235 20000802 36601234
36601237 eq 1 36601217 20000900
36601238 ite 2 36601237 20000902 36601236
36601239 eq 1 36601217 20001000
36601240 ite 2 36601239 20001002 36601238
36601241 eq 1 36601217 20001100
36601242 ite 2 36601241 20001102 36601240
36601243 ite 2 16601200 36601242 36600845 ; 0x101DC(~15): ld t1,0(t1)
36601600 constd 2 1 ; 0x1
36601601 ite 2 16601600 36601600 207 ; 0x101E0(~15): addi t2,zero,1
36602000 sub 2 206 207
36602001 ite 2 16602000 36602000 36601243 ; 0x101E4(~15): sub t1,t1,t2
36602400 sub 2 206 205
36602401 ite 2 16602400 36602400 36600445 ; 0x101E8(~15): sub t0,t1,t0
36602800 constd 2 1 ; 0x1
36602801 ite 2 16602800 36602800 36602001 ; 0x101EC(~15): addi t1,zero,1
36603200 ult 1 205 206
36603201 uext 2 36603200 63
36603202 ite 2 16603200 36603201 36602401 ; 0x101F0(~15): sltu t0,t0,t1
36603600 eq 1 205 200 ; 0x101F4(~15): beq t0,zero,8
36603601 not 1 36603600
36604000 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36604001 add 2 203 36604000
36604002 ugte 1 36604001 30 ; address >= start of segment
36604003 ult 1 36604001 31 ; address < end of segment
36604004 and 1 36604002 36604003
36604005 sub 2 36604001 30
36604006 slice 6 36604005 6 3
36604007 ite 6 36604004 36604006 8
36604008 ugte 1 36604001 32 ; address >= start of segment
36604009 ult 1 36604001 34 ; address < end of segment
36604010 and 1 36604008 36604009
36604011 sub 2 36604001 36
36604012 slice 6 36604011 6 3
36604013 ite 6 36604010 36604012 36604007
36604014 ugte 1 36604001 35 ; address >= start of segment
36604015 ulte 1 36604001 50 ; address <= end of segment
36604016 and 1 36604014 36604015
36604017 sub 2 36604001 37
36604018 slice 6 36604017 6 3
36604019 ite 6 36604016 36604018 36604013
36604020 ite 2 16604000 36604001 36601218 ; for checking address validity
36604021 eq 1 36604019 20000000
36604022 ite 2 36604021 20000002 20
36604023 eq 1 36604019 20000100
36604024 ite 2 36604023 20000102 36604022
36604025 eq 1 36604019 20000200
36604026 ite 2 36604025 20000202 36604024
36604027 eq 1 36604019 20000300
36604028 ite 2 36604027 20000302 36604026
36604029 eq 1 36604019 20000400
36604030 ite 2 36604029 20000402 36604028
36604031 eq 1 36604019 20000500
36604032 ite 2 36604031 20000502 36604030
36604033 eq 1 36604019 20000600
36604034 ite 2 36604033 20000602 36604032
36604035 eq 1 36604019 20000700
36604036 ite 2 36604035 20000702 36604034
36604037 eq 1 36604019 20000800
36604038 ite 2 36604037 20000802 36604036
36604039 eq 1 36604019 20000900
36604040 ite 2 36604039 20000902 36604038
36604041 eq 1 36604019 20001000
36604042 ite 2 36604041 20001002 36604040
36604043 eq 1 36604019 20001100
36604044 ite 2 36604043 20001102 36604042
36604045 ite 2 16604000 36604044 36603202 ; 0x101F8(~17): ld t0,-16(gp)
36604400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36604401 add 2 208 36604400
36604402 ugte 1 36604401 30 ; address >= start of segment
36604403 ult 1 36604401 31 ; address < end of segment
36604404 and 1 36604402 36604403
36604405 sub 2 36604401 30
36604406 slice 6 36604405 6 3
36604407 ite 6 36604404 36604406 8
36604408 ugte 1 36604401 32 ; address >= start of segment
36604409 ult 1 36604401 34 ; address < end of segment
36604410 and 1 36604408 36604409
36604411 sub 2 36604401 36
36604412 slice 6 36604411 6 3
36604413 ite 6 36604410 36604412 36604407
36604414 ugte 1 36604401 35 ; address >= start of segment
36604415 ulte 1 36604401 50 ; address <= end of segment
36604416 and 1 36604414 36604415
36604417 sub 2 36604401 37
36604418 slice 6 36604417 6 3
36604419 ite 6 36604416 36604418 36604413
36604420 ite 2 16604400 36604401 36604020 ; for checking address validity
36604421 eq 1 36604419 20000000
36604422 ite 2 36604421 20000002 20
36604423 eq 1 36604419 20000100
36604424 ite 2 36604423 20000102 36604422
36604425 eq 1 36604419 20000200
36604426 ite 2 36604425 20000202 36604424
36604427 eq 1 36604419 20000300
36604428 ite 2 36604427 20000302 36604426
36604429 eq 1 36604419 20000400
36604430 ite 2 36604429 20000402 36604428
36604431 eq 1 36604419 20000500
36604432 ite 2 36604431 20000502 36604430
36604433 eq 1 36604419 20000600
36604434 ite 2 36604433 20000602 36604432
36604435 eq 1 36604419 20000700
36604436 ite 2 36604435 20000702 36604434
36604437 eq 1 36604419 20000800
36604438 ite 2 36604437 20000802 36604436
36604439 eq 1 36604419 20000900
36604440 ite 2 36604439 20000902 36604438
36604441 eq 1 36604419 20001000
36604442 ite 2 36604441 20001002 36604440
36604443 eq 1 36604419 20001100
36604444 ite 2 36604443 20001102 36604442
36604445 ite 2 16604400 36604444 36602801 ; 0x101FC(~17): ld t1,-8(s0)
36604800 constd 2 8 ; 0x8
36604801 ite 2 16604800 36604800 36601601 ; 0x10200(~17): addi t2,zero,8
36605200 mul 2 206 207
36605201 ite 2 16605200 36605200 36604445 ; 0x10204(~17): mul t1,t1,t2
36605600 add 2 205 206
36605601 ite 2 16605600 36605600 36604045 ; 0x10208(~17): add t0,t0,t1
36606000 ugte 1 205 30 ; address >= start of segment
36606001 ult 1 205 31 ; address < end of segment
36606002 and 1 36606000 36606001
36606003 sub 2 205 30
36606004 slice 6 36606003 6 3
36606005 ite 6 36606002 36606004 8
36606006 ugte 1 205 32 ; address >= start of segment
36606007 ult 1 205 34 ; address < end of segment
36606008 and 1 36606006 36606007
36606009 sub 2 205 36
36606010 slice 6 36606009 6 3
36606011 ite 6 36606008 36606010 36606005
36606012 ugte 1 205 35 ; address >= start of segment
36606013 ulte 1 205 50 ; address <= end of segment
36606014 and 1 36606012 36606013
36606015 sub 2 205 37
36606016 slice 6 36606015 6 3
36606017 ite 6 36606014 36606016 36606011
36606018 ite 2 16606000 205 36604420 ; for checking address validity
36606019 eq 1 36606017 20000000
36606020 ite 2 36606019 20000002 20
36606021 eq 1 36606017 20000100
36606022 ite 2 36606021 20000102 36606020
36606023 eq 1 36606017 20000200
36606024 ite 2 36606023 20000202 36606022
36606025 eq 1 36606017 20000300
36606026 ite 2 36606025 20000302 36606024
36606027 eq 1 36606017 20000400
36606028 ite 2 36606027 20000402 36606026
36606029 eq 1 36606017 20000500
36606030 ite 2 36606029 20000502 36606028
36606031 eq 1 36606017 20000600
36606032 ite 2 36606031 20000602 36606030
36606033 eq 1 36606017 20000700
36606034 ite 2 36606033 20000702 36606032
36606035 eq 1 36606017 20000800
36606036 ite 2 36606035 20000802 36606034
36606037 eq 1 36606017 20000900
36606038 ite 2 36606037 20000902 36606036
36606039 eq 1 36606017 20001000
36606040 ite 2 36606039 20001002 36606038
36606041 eq 1 36606017 20001100
36606042 ite 2 36606041 20001102 36606040
36606043 ite 2 16606000 36606042 36605601 ; 0x1020C(~17): ld t0,0(t0)
36606400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36606401 add 2 208 36606400
36606402 ugte 1 36606401 30 ; address >= start of segment
36606403 ult 1 36606401 31 ; address < end of segment
36606404 and 1 36606402 36606403
36606405 sub 2 36606401 30
36606406 slice 6 36606405 6 3
36606407 ite 6 36606404 36606406 8
36606408 ugte 1 36606401 32 ; address >= start of segment
36606409 ult 1 36606401 34 ; address < end of segment
36606410 and 1 36606408 36606409
36606411 sub 2 36606401 36
36606412 slice 6 36606411 6 3
36606413 ite 6 36606410 36606412 36606407
36606414 ugte 1 36606401 35 ; address >= start of segment
36606415 ulte 1 36606401 50 ; address <= end of segment
36606416 and 1 36606414 36606415
36606417 sub 2 36606401 37
36606418 slice 6 36606417 6 3
36606419 ite 6 36606416 36606418 36606413
36606420 ite 2 16606400 36606401 36606018 ; for checking address validity
36606421 eq 1 36606419 20000000
36606422 ite 2 36606421 205 36599623
36606423 ite 2 16606400 36606422 36599623
36606424 eq 1 36606419 20000100
36606425 ite 2 36606424 205 36599626
36606426 ite 2 16606400 36606425 36599626
36606427 eq 1 36606419 20000200
36606428 ite 2 36606427 205 36599629
36606429 ite 2 16606400 36606428 36599629
36606430 eq 1 36606419 20000300
36606431 ite 2 36606430 205 36599632
36606432 ite 2 16606400 36606431 36599632
36606433 eq 1 36606419 20000400
36606434 ite 2 36606433 205 36599635
36606435 ite 2 16606400 36606434 36599635
36606436 eq 1 36606419 20000500
36606437 ite 2 36606436 205 36599638
36606438 ite 2 16606400 36606437 36599638
36606439 eq 1 36606419 20000600
36606440 ite 2 36606439 205 36599641
36606441 ite 2 16606400 36606440 36599641
36606442 eq 1 36606419 20000700
36606443 ite 2 36606442 205 36599644
36606444 ite 2 16606400 36606443 36599644
36606445 eq 1 36606419 20000800
36606446 ite 2 36606445 205 36599647
36606447 ite 2 16606400 36606446 36599647
36606448 eq 1 36606419 20000900
36606449 ite 2 36606448 205 36599650
36606450 ite 2 16606400 36606449 36599650
36606451 eq 1 36606419 20001000
36606452 ite 2 36606451 205 36599653
36606453 ite 2 16606400 36606452 36599653
36606454 eq 1 36606419 20001100
36606455 ite 2 36606454 205 36599656
36606456 ite 2 16606400 36606455 36599656 ; 0x10210(~17): sd t0,-8(s0)
36606800 ite 2 16606800 200 36606043 ; 0x10214(~18): addi t0,zero,0
36607200 ite 2 16607200 205 36595200 ; 0x10218(~18): addi a0,t0,0
36608000 ite 2 16608000 208 36562802 ; 0x10220(~19): addi sp,s0,0
36608400 ugte 1 202 30 ; address >= start of segment
36608401 ult 1 202 31 ; address < end of segment
36608402 and 1 36608400 36608401
36608403 sub 2 202 30
36608404 slice 6 36608403 6 3
36608405 ite 6 36608402 36608404 8
36608406 ugte 1 202 32 ; address >= start of segment
36608407 ult 1 202 34 ; address < end of segment
36608408 and 1 36608406 36608407
36608409 sub 2 202 36
36608410 slice 6 36608409 6 3
36608411 ite 6 36608408 36608410 36608405
36608412 ugte 1 202 35 ; address >= start of segment
36608413 ulte 1 202 50 ; address <= end of segment
36608414 and 1 36608412 36608413
36608415 sub 2 202 37
36608416 slice 6 36608415 6 3
36608417 ite 6 36608414 36608416 36608411
36608418 ite 2 16608400 202 36606420 ; for checking address validity
36608419 eq 1 36608417 20000000
36608420 ite 2 36608419 20000002 20
36608421 eq 1 36608417 20000100
36608422 ite 2 36608421 20000102 36608420
36608423 eq 1 36608417 20000200
36608424 ite 2 36608423 20000202 36608422
36608425 eq 1 36608417 20000300
36608426 ite 2 36608425 20000302 36608424
36608427 eq 1 36608417 20000400
36608428 ite 2 36608427 20000402 36608426
36608429 eq 1 36608417 20000500
36608430 ite 2 36608429 20000502 36608428
36608431 eq 1 36608417 20000600
36608432 ite 2 36608431 20000602 36608430
36608433 eq 1 36608417 20000700
36608434 ite 2 36608433 20000702 36608432
36608435 eq 1 36608417 20000800
36608436 ite 2 36608435 20000802 36608434
36608437 eq 1 36608417 20000900
36608438 ite 2 36608437 20000902 36608436
36608439 eq 1 36608417 20001000
36608440 ite 2 36608439 20001002 36608438
36608441 eq 1 36608417 20001100
36608442 ite 2 36608441 20001102 36608440
36608443 ite 2 16608400 36608442 208 ; 0x10224(~19): ld s0,0(sp)
36608800 constd 2 8 ; 0x8
36608801 add 2 202 36608800
36608802 ite 2 16608800 36608801 36608000 ; 0x10228(~19): addi sp,sp,8
36609200 ugte 1 202 30 ; address >= start of segment
36609201 ult 1 202 31 ; address < end of segment
36609202 and 1 36609200 36609201
36609203 sub 2 202 30
36609204 slice 6 36609203 6 3
36609205 ite 6 36609202 36609204 8
36609206 ugte 1 202 32 ; address >= start of segment
36609207 ult 1 202 34 ; address < end of segment
36609208 and 1 36609206 36609207
36609209 sub 2 202 36
36609210 slice 6 36609209 6 3
36609211 ite 6 36609208 36609210 36609205
36609212 ugte 1 202 35 ; address >= start of segment
36609213 ulte 1 202 50 ; address <= end of segment
36609214 and 1 36609212 36609213
36609215 sub 2 202 37
36609216 slice 6 36609215 6 3
36609217 ite 6 36609214 36609216 36609211
36609218 ite 2 16609200 202 36608418 ; for checking address validity
36609219 eq 1 36609217 20000000
36609220 ite 2 36609219 20000002 20
36609221 eq 1 36609217 20000100
36609222 ite 2 36609221 20000102 36609220
36609223 eq 1 36609217 20000200
36609224 ite 2 36609223 20000202 36609222
36609225 eq 1 36609217 20000300
36609226 ite 2 36609225 20000302 36609224
36609227 eq 1 36609217 20000400
36609228 ite 2 36609227 20000402 36609226
36609229 eq 1 36609217 20000500
36609230 ite 2 36609229 20000502 36609228
36609231 eq 1 36609217 20000600
36609232 ite 2 36609231 20000602 36609230
36609233 eq 1 36609217 20000700
36609234 ite 2 36609233 20000702 36609232
36609235 eq 1 36609217 20000800
36609236 ite 2 36609235 20000802 36609234
36609237 eq 1 36609217 20000900
36609238 ite 2 36609237 20000902 36609236
36609239 eq 1 36609217 20001000
36609240 ite 2 36609239 20001002 36609238
36609241 eq 1 36609217 20001100
36609242 ite 2 36609241 20001102 36609240
36609243 ite 2 16609200 36609242 201 ; 0x1022C(~19): ld ra,0(sp)
36609600 constd 2 8 ; 0x8
36609601 add 2 202 36609600
36609602 ite 2 16609600 36609601 36608802 ; 0x10230(~19): addi sp,sp,8

; syscalls

40000000 constd 2 93 ; SYSCALL_EXIT
40000001 constd 2 63 ; SYSCALL_READ
40000002 constd 2 64 ; SYSCALL_WRITE
40000003 constd 2 56 ; SYSCALL_OPENAT
40000004 constd 2 214 ; SYSCALL_BRK

40000010 eq 1 217 40000000 ; $a7 == SYSCALL_EXIT
40000011 eq 1 217 40000001 ; $a7 == SYSCALL_READ
40000012 eq 1 217 40000002 ; $a7 == SYSCALL_WRITE
40000013 eq 1 217 40000003 ; $a7 == SYSCALL_OPENAT
40000014 eq 1 217 40000004 ; $a7 == SYSCALL_BRK

41000000 and 1 36566800 40000010 ; exit ecall is active
41000001 ite 1 60 40000010 41000000 ; stay in kernel mode indefinitely if exit ecall is active

42000000 and 1 36566800 40000011 ; read ecall is active
42000001 ite 2 42000000 211 36609218 ; $a1 is start address of buffer for checking address validity
42000002 ite 1 42000000 11 41000001 ; go into kernel mode if read ecall is active
42000003 ite 2 42000000 20 36607200 ; set $a0 = 0 bytes if read ecall is active
42000004 sub 2 212 210 ; $a2 - $a0
42000005 ugte 1 42000004 28 ; $a2 - $a0 >= 8 bytes
42000006 ite 2 42000005 28 42000004 ; read 8 bytes if $a2 - $a0 >= 8 bytes, or else $a2 - $a0 bytes
42000007 eq 1 42000006 22 ; increment == 2
42000008 ite 2 42000007 92 91 ; unsigned-extended 2-byte input if increment == 2, or else unsigned-extended 1-byte input
42000009 eq 1 42000006 23 ; increment == 3
42000010 ite 2 42000009 93 42000008 ; unsigned-extended 3-byte input if increment == 3
42000011 eq 1 42000006 24 ; increment == 4
42000012 ite 2 42000011 94 42000010 ; unsigned-extended 4-byte input if increment == 4
42000013 eq 1 42000006 25 ; increment == 5
42000014 ite 2 42000013 95 42000012 ; unsigned-extended 5-byte input if increment == 5
42000015 eq 1 42000006 26 ; increment == 6
42000016 ite 2 42000015 96 42000014 ; unsigned-extended 6-byte input if increment == 6
42000017 eq 1 42000006 27 ; increment == 7
42000018 ite 2 42000017 97 42000016 ; unsigned-extended 7-byte input if increment == 7
42000019 eq 1 42000006 28 ; increment == 8
42000020 ite 2 42000019 98 42000018 ; 8-byte input if increment == 8
42000021 add 2 211 210 ; $a1 + $a0
42000022 ugte 1 42000021 30 ; address >= start of segment
42000023 ult 1 42000021 31 ; address < end of segment
42000024 and 1 42000022 42000023
42000025 sub 2 42000021 30
42000026 slice 6 42000025 6 3
42000027 ite 6 42000024 42000026 8
42000028 ugte 1 42000021 32 ; address >= start of segment
42000029 ult 1 42000021 34 ; address < end of segment
42000030 and 1 42000028 42000029
42000031 sub 2 42000021 36
42000032 slice 6 42000031 6 3
42000033 ite 6 42000030 42000032 42000027
42000034 ugte 1 42000021 35 ; address >= start of segment
42000035 ulte 1 42000021 50 ; address <= end of segment
42000036 and 1 42000034 42000035
42000037 sub 2 42000021 37
42000038 slice 6 42000037 6 3
42000039 ite 6 42000036 42000038 42000033
42000040 ult 1 210 212 ; $a0 < $a2
42000041 and 1 40000011 42000040 ; $a7 == SYSCALL_READ and $a0 < $a2
42000042 and 1 60 42000041 ; read ecall is in kernel mode and not done yet
42000043 ugt 1 42000006 20 ; increment > 0
42000044 and 1 42000042 42000043 ; read ecall is in kernel mode and not done yet and increment > 0
42000045 eq 1 42000039 20000000
42000046 ite 2 42000045 42000020 36606423
42000047 ite 2 42000044 42000046 36606423 ; read input into RAM[$a1 + $a0]
42000048 eq 1 42000039 20000100
42000049 ite 2 42000048 42000020 36606426
42000050 ite 2 42000044 42000049 36606426 ; read input into RAM[$a1 + $a0]
42000051 eq 1 42000039 20000200
42000052 ite 2 42000051 42000020 36606429
42000053 ite 2 42000044 42000052 36606429 ; read input into RAM[$a1 + $a0]
42000054 eq 1 42000039 20000300
42000055 ite 2 42000054 42000020 36606432
42000056 ite 2 42000044 42000055 36606432 ; read input into RAM[$a1 + $a0]
42000057 eq 1 42000039 20000400
42000058 ite 2 42000057 42000020 36606435
42000059 ite 2 42000044 42000058 36606435 ; read input into RAM[$a1 + $a0]
42000060 eq 1 42000039 20000500
42000061 ite 2 42000060 42000020 36606438
42000062 ite 2 42000044 42000061 36606438 ; read input into RAM[$a1 + $a0]
42000063 eq 1 42000039 20000600
42000064 ite 2 42000063 42000020 36606441
42000065 ite 2 42000044 42000064 36606441 ; read input into RAM[$a1 + $a0]
42000066 eq 1 42000039 20000700
42000067 ite 2 42000066 42000020 36606444
42000068 ite 2 42000044 42000067 36606444 ; read input into RAM[$a1 + $a0]
42000069 eq 1 42000039 20000800
42000070 ite 2 42000069 42000020 36606447
42000071 ite 2 42000044 42000070 36606447 ; read input into RAM[$a1 + $a0]
42000072 eq 1 42000039 20000900
42000073 ite 2 42000072 42000020 36606450
42000074 ite 2 42000044 42000073 36606450 ; read input into RAM[$a1 + $a0]
42000075 eq 1 42000039 20001000
42000076 ite 2 42000075 42000020 36606453
42000077 ite 2 42000044 42000076 36606453 ; read input into RAM[$a1 + $a0]
42000078 eq 1 42000039 20001100
42000079 ite 2 42000078 42000020 36606456
42000080 ite 2 42000044 42000079 36606456 ; read input into RAM[$a1 + $a0]
42000081 add 2 210 42000006 ; $a0 + increment
42000082 ite 2 42000042 42000081 42000003 ; set $a0 = $a0 + increment if read ecall is in kernel mode and not done yet
42000083 ite 1 42000042 11 42000002 ; stay in kernel mode if read ecall is in kernel mode and not done yet

43000000 and 1 36566800 40000012 ; write ecall is active
43000001 ite 2 43000000 211 42000001 ; $a1 is start address of buffer for checking address validity
43000002 ite 2 43000000 212 42000082 ; set $a0 = $a2 if write ecall is active

44000000 and 1 36566800 40000013 ; openat ecall is active
44000001 ite 2 44000000 211 43000001 ; $a1 is start address of buffer for checking address validity
44000002 state 2 fd-bump-pointer
44000003 init 2 44000002 21 ; initial fd-bump-pointer is 1 (file descriptor bump pointer)
44000004 inc 2 44000002
44000005 ite 2 44000000 44000004 44000002 ; fd-bump-pointer + 1 if openat ecall is active
44000006 next 2 44000002 44000005 ; increment fd-bump-pointer if openat ecall is active
44000007 ite 2 44000000 44000004 43000002 ; set $a0 = fd-bump-pointer + 1 if openat ecall is active

45000000 and 1 36566800 40000014 ; brk ecall is active
45000001 state 2 brk-bump-pointer
45000002 init 2 45000001 33 ; current program break
45000003 ulte 1 45000001 210 ; brk <= $a0
45000004 ult 1 210 202 ; $a0 < $sp
45000005 and 1 45000003 45000004 ; brk <= $a0 < $sp
45000006 and 2 210 27 ; reset all but 3 LSBs of $a0
45000007 eq 1 45000006 20 ; 3 LSBs of $a0 == 0 ($a0 is word-aligned)
45000008 and 1 45000005 45000007 ; brk <= $a0 < $sp and $a0 is word-aligned ($a0 is valid)
45000009 and 1 45000000 45000008 ; brk ecall is active and $a0 is valid
45000010 ite 2 45000009 210 45000001 ; brk = $a0 if brk ecall is active and $a0 is valid
45000011 next 2 45000001 45000010 ; set brk = $a0 if brk ecall is active and $a0 is valid
45000012 not 1 45000008 ; $a0 is invalid
45000013 and 1 45000000 45000012 ; brk ecall is active and $a0 is invalid
45000014 ite 2 45000013 45000001 44000007 ; set $a0 = brk if brk ecall is active and $a0 is invalid

46000000 next 1 60 42000083 ; updating kernel-mode flag

; control flow

56561600 not 2 21 ; jalr 66100[0x10234](~19)
56561601 and 2 201 56561600
56561602 eq 1 56561601 36561200
56561603 and 1 16610000 56561602
56561604 next 1 16561600 56561603 ; ->65616[0x10050](~1)
; 65616[0x10050](~1)
56562000 next 1 16562000 16561600 ; ->65620[0x10054](~1)
; 65620[0x10054](~1)
56562400 next 1 16562400 16562000 ; ->65624[0x10058](~1)
; 65624[0x10058](~1)
56562800 next 1 16562800 16562400 ; ->65628[0x1005C](~1)
; 65628[0x1005C](~1)
56563200 next 1 16563200 16562800 ; ->65632[0x10060](~1)
; 65632[0x10060](~1)
56563600 next 1 16563600 16563200 ; ->65636[0x10064](~1)
56564000 state 1 kernel-mode-pc-flag-65636[0x10064](~1)
56564001 init 1 56564000 10 ; ecall is initially inactive
56564002 ite 1 56564000 60 16563600 ; activate ecall and keep active while in kernel mode
56564003 next 1 56564000 56564002 ; keep ecall active while in kernel mode
56564004 and 1 56564000 62 ; ecall is active but not in kernel mode anymore
56566800 next 1 16566800 10 ; ->65668[0x10084](~1)
56567200 state 1 kernel-mode-pc-flag-65668[0x10084](~1)
56567201 init 1 56567200 10 ; ecall is initially inactive
56567202 ite 1 56567200 60 16566800 ; activate ecall and keep active while in kernel mode
56567203 next 1 56567200 56567202 ; keep ecall active while in kernel mode
56567204 and 1 56567200 62 ; ecall is active but not in kernel mode anymore
56567205 next 1 16567200 56567204 ; ->65672[0x10088](~1)
56595200 not 2 21 ; jalr 65672[0x10088](~1)
56595201 and 2 201 56595200
56595202 eq 1 56595201 36594800
56595203 and 1 16567200 56595202
56595204 next 1 16595200 56595203 ; ->65952[0x101A0](~8)
; 65952[0x101A0](~8)
56595600 next 1 16595600 16595200 ; ->65956[0x101A4](~10)
; 65956[0x101A4](~10)
56596000 next 1 16596000 16595600 ; ->65960[0x101A8](~10)
; 65960[0x101A8](~10)
56596400 next 1 16596400 16596000 ; ->65964[0x101AC](~10)
; jal 66000[0x101D0](~15)
; 65964[0x101AC](~10)
56596800 ite 1 16596400 11 16600000
56596801 next 1 16596800 56596800 ; ->65968[0x101B0](~12)
; 65968[0x101B0](~12)
56597200 next 1 16597200 16596800 ; ->65972[0x101B4](~12)
; 65972[0x101B4](~12)
56597600 next 1 16597600 16597200 ; ->65976[0x101B8](~12)
; 65976[0x101B8](~12)
56598000 next 1 16598000 16597600 ; ->65980[0x101BC](~12)
56598400 and 1 16598000 36598001 ; beq 65980[0x101BC](~12)
56598401 next 1 16598400 56598400 ; ->65984[0x101C0](~13)
; 65984[0x101C0](~13)
56598800 next 1 16598800 16598400 ; ->65988[0x101C4](~13)
; 65988[0x101C4](~13)
56599200 next 1 16599200 16598800 ; ->65992[0x101C8](~13)
; 65992[0x101C8](~13)
56599600 next 1 16599600 16599200 ; ->65996[0x101CC](~13)
; 65996[0x101CC](~13)
56600000 next 1 16600000 16599600 ; ->66000[0x101D0](~15)
56600400 and 1 16598000 36598000 ; beq 65980[0x101BC](~12)
56600401 next 1 16600400 56600400 ; ->66004[0x101D4](~15)
; 66004[0x101D4](~15)
56600800 next 1 16600800 16600400 ; ->66008[0x101D8](~15)
; 66008[0x101D8](~15)
56601200 next 1 16601200 16600800 ; ->66012[0x101DC](~15)
; 66012[0x101DC](~15)
56601600 next 1 16601600 16601200 ; ->66016[0x101E0](~15)
; 66016[0x101E0](~15)
56602000 next 1 16602000 16601600 ; ->66020[0x101E4](~15)
; 66020[0x101E4](~15)
56602400 next 1 16602400 16602000 ; ->66024[0x101E8](~15)
; 66024[0x101E8](~15)
56602800 next 1 16602800 16602400 ; ->66028[0x101EC](~15)
; 66028[0x101EC](~15)
56603200 next 1 16603200 16602800 ; ->66032[0x101F0](~15)
; 66032[0x101F0](~15)
56603600 next 1 16603600 16603200 ; ->66036[0x101F4](~15)
56604000 and 1 16603600 36603601 ; beq 66036[0x101F4](~15)
56604001 next 1 16604000 56604000 ; ->66040[0x101F8](~17)
; 66040[0x101F8](~17)
56604400 next 1 16604400 16604000 ; ->66044[0x101FC](~17)
; 66044[0x101FC](~17)
56604800 next 1 16604800 16604400 ; ->66048[0x10200](~17)
; 66048[0x10200](~17)
56605200 next 1 16605200 16604800 ; ->66052[0x10204](~17)
; 66052[0x10204](~17)
56605600 next 1 16605600 16605200 ; ->66056[0x10208](~17)
; 66056[0x10208](~17)
56606000 next 1 16606000 16605600 ; ->66060[0x1020C](~17)
; 66060[0x1020C](~17)
56606400 next 1 16606400 16606000 ; ->66064[0x10210](~17)
; 66064[0x10210](~17)
56606800 and 1 16603600 36603600 ; beq 66036[0x101F4](~15)
56606801 ite 1 56606800 11 16606400
56606802 next 1 16606800 56606801 ; ->66068[0x10214](~18)
; 66068[0x10214](~18)
56607200 next 1 16607200 16606800 ; ->66072[0x10218](~18)
; 66072[0x10218](~18)
56607600 next 1 16607600 16607200 ; ->66076[0x1021C](~18)
; jal 66076[0x1021C](~18)
56608000 next 1 16608000 16607600 ; ->66080[0x10220](~19)
; 66080[0x10220](~19)
56608400 next 1 16608400 16608000 ; ->66084[0x10224](~19)
; 66084[0x10224](~19)
56608800 next 1 16608800 16608400 ; ->66088[0x10228](~19)
; 66088[0x10228](~19)
56609200 next 1 16609200 16608800 ; ->66092[0x1022C](~19)
; 66092[0x1022C](~19)
56609600 next 1 16609600 16609200 ; ->66096[0x10230](~19)
; 66096[0x10230](~19)
56610000 next 1 16610000 16609600 ; ->66100[0x10234](~19)

; updating registers

60000001 next 2 201 36609243 ra ; register $1
60000002 next 2 202 36609602 sp ; register $2
60000003 next 2 203 203 gp ; register $3
60000004 next 2 204 204 tp ; register $4
60000005 next 2 205 36606800 t0 ; register $5
60000006 next 2 206 36605201 t1 ; register $6
60000007 next 2 207 36604801 t2 ; register $7
60000008 next 2 208 36608443 s0 ; register $8
60000009 next 2 209 209 s1 ; register $9
60000010 next 2 210 45000014 a0 ; register $10
60000011 next 2 211 211 a1 ; register $11
60000012 next 2 212 212 a2 ; register $12
60000013 next 2 213 213 a3 ; register $13
60000014 next 2 214 214 a4 ; register $14
60000015 next 2 215 215 a5 ; register $15
60000016 next 2 216 216 a6 ; register $16
60000017 next 2 217 36563201 a7 ; register $17
60000018 next 2 218 218 s2 ; register $18
60000019 next 2 219 219 s3 ; register $19
60000020 next 2 220 220 s4 ; register $20
60000021 next 2 221 221 s5 ; register $21
60000022 next 2 222 222 s6 ; register $22
60000023 next 2 223 223 s7 ; register $23
60000024 next 2 224 224 s8 ; register $24
60000025 next 2 225 225 s9 ; register $25
60000026 next 2 226 226 s10 ; register $26
60000027 next 2 227 227 s11 ; register $27
60000028 next 2 228 228 t3 ; register $28
60000029 next 2 229 229 t4 ; register $29
60000030 next 2 230 230 t5 ; register $30
60000031 next 2 231 231 t6 ; register $31

; updating 4-bit physical memory

70000000 next 2 20000002 42000047 RAM-word-0
70000001 next 2 20000102 42000050 RAM-word-1
70000002 next 2 20000202 42000053 RAM-word-2
70000003 next 2 20000302 42000056 RAM-word-3
70000004 next 2 20000402 42000059 RAM-word-4
70000005 next 2 20000502 42000062 RAM-word-5
70000006 next 2 20000602 42000065 RAM-word-6
70000007 next 2 20000702 42000068 RAM-word-7
70000008 next 2 20000802 42000071 RAM-word-8
70000009 next 2 20000902 42000074 RAM-word-9
70000010 next 2 20001002 42000077 RAM-word-10
70000011 next 2 20001102 42000080 RAM-word-11

; checking segmentation faults

; is start address of memory access in a valid segment?

80000000 ult 1 44000001 30 ; address < start of data segment
80000001 bad 80000000 b0 ; memory access below data segment
80000002 ugte 1 44000001 31 ; address >= end of data segment
80000003 ult 1 44000001 32 ; address < start of heap segment
80000004 and 1 80000002 80000003
80000005 bad 80000004 b1 ; memory access in between data and heap segments
80000006 ugte 1 44000001 45000001 ; address >= current end of heap segment
80000007 ult 1 44000001 202 ; address < current start of stack segment
80000008 and 1 80000006 80000007
80000009 bad 80000008 b2 ; memory access in between current heap and stack segments
80000010 ugte 1 44000001 34 ; address >= allowed end of heap segment
80000011 ult 1 44000001 45000001 ; address < current end of heap segment
80000012 and 1 80000010 80000011
80000013 bad 80000012 b3 ; memory access in between allowed and current end of heap segment
80000014 ugte 1 44000001 202 ; address >= current start of stack segment
80000015 ult 1 44000001 35 ; address < allowed start of stack segment
80000016 and 1 80000014 80000015
80000017 bad 80000016 b4 ; memory access in between current and allowed start of stack segment
80000018 ugt 1 44000001 50 ; address > highest address in 32-bit virtual address space (4GB)
80000019 bad 80000018 b5 ; memory access above stack segment

; end of BTOR2 s.btor2
