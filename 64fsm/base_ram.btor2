; selfie.cs.uni-salzburg.at

; BTOR2 s.btor2 generated by ./beator
; with --heap-allowance 8
; with --stack-allowance 56
; with --MMU
; with --RAM

; RISC-V code obtained from s.c and invoked as: s.c

1 sort bitvec 1 ; Boolean
2 sort bitvec 64 ; 64-bit machine word

6 sort bitvec 4 ; 4-bit physical address
8 zero 6

; 120B total memory, 16B data, 8B heap (0B,8B), 96B stack (40B,56B)

10 zero 1
11 one 1

20 zero 2
21 one 2
22 constd 2 2
23 constd 2 3
24 constd 2 4
25 constd 2 5
26 constd 2 6
27 constd 2 7
28 constd 2 8

; start of data segment in 64-bit virtual memory
30 constd 2 69632 ; 0x11000
; end of data segment in 64-bit virtual memory
31 constd 2 69648 ; 0x11010

; start of heap segment in 64-bit virtual memory (initial program break)
32 constd 2 73728 ; 0x12000
; current end of heap segment in 64-bit virtual memory (current program break)
33 constd 2 73728 ; 0x12000

; allowed end of heap segment in 64-bit virtual memory (with 8B allowance)
34 constd 2 73736 ; 0x12008
; allowed start of stack segment in 64-bit virtual memory (with 56B allowance)
35 constd 2 4294967200 ; 0xFFFFFFA0

; offset of heap segment in 64-bit virtual memory
36 constd 2 73712 ; 0x11FF0
; offset of stack segment in 64-bit virtual memory
37 constd 2 4294967176 ; 0xFFFFFF88

; highest address in 32-bit virtual address space (4GB)

50 constd 2 4294967288 ; 0xFFFFFFF8

; kernel-mode flag

60 state 1 kernel-mode
61 init 1 60 10 kernel-mode ; initial value is false
62 not 1 60

; unsigned-extended inputs for byte-wise reading

71 sort bitvec 8 ; 1 byte
72 sort bitvec 16 ; 2 bytes
73 sort bitvec 24 ; 3 bytes
74 sort bitvec 32 ; 4 bytes
75 sort bitvec 40 ; 5 bytes
76 sort bitvec 48 ; 6 bytes
77 sort bitvec 56 ; 7 bytes

81 input 71 1-byte-input
82 input 72 2-byte-input
83 input 73 3-byte-input
84 input 74 4-byte-input
85 input 75 5-byte-input
86 input 76 6-byte-input
87 input 77 7-byte-input

91 uext 2 81 56 ; uext-1-byte-input
92 uext 2 82 48 ; uext-2-byte-input
93 uext 2 83 40 ; uext-3-byte-input
94 uext 2 84 32 ; uext-4-byte-input
95 uext 2 85 24 ; uext-5-byte-input
96 uext 2 86 16 ; uext-6-byte-input
97 uext 2 87 8 ; uext-7-byte-input
98 input 2 8-byte-input

; 32 64-bit general-purpose registers

; non-zero initial register values

102 constd 2 4294967256 ; 0xFFFFFFD8 for sp
116 constd 2 105553153474560 ; 0x60000237C000 for a6

; registers

200 zero 2 zero ; register $0 is always 0
201 state 2 ra ; register $1
202 state 2 sp ; register $2
203 state 2 gp ; register $3
204 state 2 tp ; register $4
205 state 2 t0 ; register $5
206 state 2 t1 ; register $6
207 state 2 t2 ; register $7
208 state 2 s0 ; register $8
209 state 2 s1 ; register $9
210 state 2 a0 ; register $10
211 state 2 a1 ; register $11
212 state 2 a2 ; register $12
213 state 2 a3 ; register $13
214 state 2 a4 ; register $14
215 state 2 a5 ; register $15
216 state 2 a6 ; register $16
217 state 2 a7 ; register $17
218 state 2 s2 ; register $18
219 state 2 s3 ; register $19
220 state 2 s4 ; register $20
221 state 2 s5 ; register $21
222 state 2 s6 ; register $22
223 state 2 s7 ; register $23
224 state 2 s8 ; register $24
225 state 2 s9 ; register $25
226 state 2 s10 ; register $26
227 state 2 s11 ; register $27
228 state 2 t3 ; register $28
229 state 2 t4 ; register $29
230 state 2 t5 ; register $30
231 state 2 t6 ; register $31

; initializing registers

301 init 2 201 20 ra ; initial value is 0
302 init 2 202 102 sp ; initial value is 4294967256
303 init 2 203 20 gp ; initial value is 0
304 init 2 204 20 tp ; initial value is 0
305 init 2 205 20 t0 ; initial value is 0
306 init 2 206 20 t1 ; initial value is 0
307 init 2 207 20 t2 ; initial value is 0
308 init 2 208 20 s0 ; initial value is 0
309 init 2 209 20 s1 ; initial value is 0
310 init 2 210 20 a0 ; initial value is 0
311 init 2 211 20 a1 ; initial value is 0
312 init 2 212 20 a2 ; initial value is 0
313 init 2 213 20 a3 ; initial value is 0
314 init 2 214 20 a4 ; initial value is 0
315 init 2 215 20 a5 ; initial value is 0
316 init 2 216 116 a6 ; initial value is 105553153474560
317 init 2 217 20 a7 ; initial value is 0
318 init 2 218 20 s2 ; initial value is 0
319 init 2 219 20 s3 ; initial value is 0
320 init 2 220 20 s4 ; initial value is 0
321 init 2 221 20 s5 ; initial value is 0
322 init 2 222 20 s6 ; initial value is 0
323 init 2 223 20 s7 ; initial value is 0
324 init 2 224 20 s8 ; initial value is 0
325 init 2 225 20 s9 ; initial value is 0
326 init 2 226 20 s10 ; initial value is 0
327 init 2 227 20 s11 ; initial value is 0
328 init 2 228 20 t3 ; initial value is 0
329 init 2 229 20 t4 ; initial value is 0
330 init 2 230 20 t5 ; initial value is 0
331 init 2 231 20 t6 ; initial value is 0

; 64-bit program counter encoded in Boolean flags

16553600 state 1 pc=0x10000
16553601 init 1 16553600 11 ; initial program counter
16554000 state 1 pc=0x10004
16554001 init 1 16554000 10
16554400 state 1 pc=0x10008
16554401 init 1 16554400 10
16554800 state 1 pc=0x1000C
16554801 init 1 16554800 10
16555200 state 1 pc=0x10010
16555201 init 1 16555200 10
16555600 state 1 pc=0x10014
16555601 init 1 16555600 10
16556000 state 1 pc=0x10018
16556001 init 1 16556000 10
16556400 state 1 pc=0x1001C
16556401 init 1 16556400 10
16556800 state 1 pc=0x10020
16556801 init 1 16556800 10
16557200 state 1 pc=0x10024
16557201 init 1 16557200 10
16557600 state 1 pc=0x10028
16557601 init 1 16557600 10
16558000 state 1 pc=0x1002C
16558001 init 1 16558000 10
16558400 state 1 pc=0x10030
16558401 init 1 16558400 10
16558800 state 1 pc=0x10034
16558801 init 1 16558800 10
16559200 state 1 pc=0x10038
16559201 init 1 16559200 10
16559600 state 1 pc=0x1003C
16559601 init 1 16559600 10
16560000 state 1 pc=0x10040
16560001 init 1 16560000 10
16560400 state 1 pc=0x10044
16560401 init 1 16560400 10
16560800 state 1 pc=0x10048
16560801 init 1 16560800 10
16561200 state 1 pc=0x1004C
16561201 init 1 16561200 10
16561600 state 1 pc=0x10050
16561601 init 1 16561600 10
16562000 state 1 pc=0x10054
16562001 init 1 16562000 10
16562400 state 1 pc=0x10058
16562401 init 1 16562400 10
16562800 state 1 pc=0x1005C
16562801 init 1 16562800 10
16563200 state 1 pc=0x10060
16563201 init 1 16563200 10
16563600 state 1 pc=0x10064
16563601 init 1 16563600 10
16564000 state 1 pc=0x10068
16564001 init 1 16564000 10
16564400 state 1 pc=0x1006C
16564401 init 1 16564400 10
16564800 state 1 pc=0x10070
16564801 init 1 16564800 10
16565200 state 1 pc=0x10074
16565201 init 1 16565200 10
16565600 state 1 pc=0x10078
16565601 init 1 16565600 10
16566000 state 1 pc=0x1007C
16566001 init 1 16566000 10
16566400 state 1 pc=0x10080
16566401 init 1 16566400 10
16566800 state 1 pc=0x10084
16566801 init 1 16566800 10
16567200 state 1 pc=0x10088
16567201 init 1 16567200 10
; 16567600 unreachable state at 1008C
; 16568000 unreachable state at 10090
; 16568400 unreachable state at 10094
; 16568800 unreachable state at 10098
; 16569200 unreachable state at 1009C
; 16569600 unreachable state at 100A0
; 16570000 unreachable state at 100A4
; 16570400 unreachable state at 100A8
; 16570800 unreachable state at 100AC
; 16571200 unreachable state at 100B0
; 16571600 unreachable state at 100B4
; 16572000 unreachable state at 100B8
; 16572400 unreachable state at 100BC
; 16572800 unreachable state at 100C0
; 16573200 unreachable state at 100C4
; 16573600 unreachable state at 100C8
; 16574000 unreachable state at 100CC
; 16574400 unreachable state at 100D0
; 16574800 unreachable state at 100D4
16575200 state 1 pc=0x100D8
16575201 init 1 16575200 10
16575600 state 1 pc=0x100DC
16575601 init 1 16575600 10
16576000 state 1 pc=0x100E0
16576001 init 1 16576000 10
16576400 state 1 pc=0x100E4
16576401 init 1 16576400 10
16576800 state 1 pc=0x100E8
16576801 init 1 16576800 10
16577200 state 1 pc=0x100EC
16577201 init 1 16577200 10
16577600 state 1 pc=0x100F0
16577601 init 1 16577600 10
16578000 state 1 pc=0x100F4
16578001 init 1 16578000 10
16578400 state 1 pc=0x100F8
16578401 init 1 16578400 10
16578800 state 1 pc=0x100FC
16578801 init 1 16578800 10
16579200 state 1 pc=0x10100
16579201 init 1 16579200 10
16579600 state 1 pc=0x10104
16579601 init 1 16579600 10
16580000 state 1 pc=0x10108
16580001 init 1 16580000 10
16580400 state 1 pc=0x1010C
16580401 init 1 16580400 10
16580800 state 1 pc=0x10110
16580801 init 1 16580800 10
16581200 state 1 pc=0x10114
16581201 init 1 16581200 10
16581600 state 1 pc=0x10118
16581601 init 1 16581600 10
16582000 state 1 pc=0x1011C
16582001 init 1 16582000 10
; 16582400 unreachable state at 10120
; 16582800 unreachable state at 10124
; 16583200 unreachable state at 10128
; 16583600 unreachable state at 1012C
; 16584000 unreachable state at 10130
; 16584400 unreachable state at 10134
; 16584800 unreachable state at 10138
; 16585200 unreachable state at 1013C
16585600 state 1 pc=0x10140
16585601 init 1 16585600 10
16586000 state 1 pc=0x10144
16586001 init 1 16586000 10
16586400 state 1 pc=0x10148
16586401 init 1 16586400 10
16586800 state 1 pc=0x1014C
16586801 init 1 16586800 10
16587200 state 1 pc=0x10150
16587201 init 1 16587200 10
16587600 state 1 pc=0x10154
16587601 init 1 16587600 10
16588000 state 1 pc=0x10158
16588001 init 1 16588000 10
16588400 state 1 pc=0x1015C
16588401 init 1 16588400 10
16588800 state 1 pc=0x10160
16588801 init 1 16588800 10
16589200 state 1 pc=0x10164
16589201 init 1 16589200 10
16589600 state 1 pc=0x10168
16589601 init 1 16589600 10
16590000 state 1 pc=0x1016C
16590001 init 1 16590000 10
16590400 state 1 pc=0x10170
16590401 init 1 16590400 10
16590800 state 1 pc=0x10174
16590801 init 1 16590800 10
16591200 state 1 pc=0x10178
16591201 init 1 16591200 10
16591600 state 1 pc=0x1017C
16591601 init 1 16591600 10
16592000 state 1 pc=0x10180
16592001 init 1 16592000 10
16592400 state 1 pc=0x10184
16592401 init 1 16592400 10
16592800 state 1 pc=0x10188
16592801 init 1 16592800 10
16593200 state 1 pc=0x1018C
16593201 init 1 16593200 10
16593600 state 1 pc=0x10190
16593601 init 1 16593600 10
16594000 state 1 pc=0x10194
16594001 init 1 16594000 10
16594400 state 1 pc=0x10198
16594401 init 1 16594400 10
16594800 state 1 pc=0x1019C
16594801 init 1 16594800 10
16595200 state 1 pc=0x101A0
16595201 init 1 16595200 10
16595600 state 1 pc=0x101A4
16595601 init 1 16595600 10
16596000 state 1 pc=0x101A8
16596001 init 1 16596000 10
16596400 state 1 pc=0x101AC
16596401 init 1 16596400 10
16596800 state 1 pc=0x101B0
16596801 init 1 16596800 10
16597200 state 1 pc=0x101B4
16597201 init 1 16597200 10
16597600 state 1 pc=0x101B8
16597601 init 1 16597600 10
16598000 state 1 pc=0x101BC
16598001 init 1 16598000 10
16598400 state 1 pc=0x101C0
16598401 init 1 16598400 10
16598800 state 1 pc=0x101C4
16598801 init 1 16598800 10
16599200 state 1 pc=0x101C8
16599201 init 1 16599200 10
16599600 state 1 pc=0x101CC
16599601 init 1 16599600 10
16600000 state 1 pc=0x101D0
16600001 init 1 16600000 10
16600400 state 1 pc=0x101D4
16600401 init 1 16600400 10
16600800 state 1 pc=0x101D8
16600801 init 1 16600800 10
16601200 state 1 pc=0x101DC
16601201 init 1 16601200 10
16601600 state 1 pc=0x101E0
16601601 init 1 16601600 10
16602000 state 1 pc=0x101E4
16602001 init 1 16602000 10
16602400 state 1 pc=0x101E8
16602401 init 1 16602400 10
16602800 state 1 pc=0x101EC
16602801 init 1 16602800 10
16603200 state 1 pc=0x101F0
16603201 init 1 16603200 10
16603600 state 1 pc=0x101F4
16603601 init 1 16603600 10
16604000 state 1 pc=0x101F8
16604001 init 1 16604000 10
16604400 state 1 pc=0x101FC
16604401 init 1 16604400 10
16604800 state 1 pc=0x10200
16604801 init 1 16604800 10
16605200 state 1 pc=0x10204
16605201 init 1 16605200 10
16605600 state 1 pc=0x10208
16605601 init 1 16605600 10
16606000 state 1 pc=0x1020C
16606001 init 1 16606000 10
16606400 state 1 pc=0x10210
16606401 init 1 16606400 10
16606800 state 1 pc=0x10214
16606801 init 1 16606800 10
16607200 state 1 pc=0x10218
16607201 init 1 16607200 10
16607600 state 1 pc=0x1021C
16607601 init 1 16607600 10
16608000 state 1 pc=0x10220
16608001 init 1 16608000 10
16608400 state 1 pc=0x10224
16608401 init 1 16608400 10
16608800 state 1 pc=0x10228
16608801 init 1 16608800 10
16609200 state 1 pc=0x1022C
16609201 init 1 16609200 10
16609600 state 1 pc=0x10230
16609601 init 1 16609600 10
16610000 state 1 pc=0x10234
16610001 init 1 16610000 10

; 4-bit physical memory

; data segment

20000000 constd 6 0 ; 0x0 paddr, 0x11000 vaddr
20000002 state 2 RAM-word-0
20000003 init 2 20000002 20
20000100 constd 6 1 ; 0x1 paddr, 0x11008 vaddr
20000102 state 2 RAM-word-1
20000103 init 2 20000102 20

; heap segment

20000200 constd 6 2 ; 0x2 paddr, 0x12000 vaddr
20000202 state 2 RAM-word-2
20000203 init 2 20000202 20

; stack segment

20000300 constd 6 3 ; 0x3 paddr, 0xFFFFFFA0 vaddr
20000302 state 2 RAM-word-3
20000303 init 2 20000302 20
20000400 constd 6 4 ; 0x4 paddr, 0xFFFFFFA8 vaddr
20000402 state 2 RAM-word-4
20000403 init 2 20000402 20
20000500 constd 6 5 ; 0x5 paddr, 0xFFFFFFB0 vaddr
20000502 state 2 RAM-word-5
20000503 init 2 20000502 20
20000600 constd 6 6 ; 0x6 paddr, 0xFFFFFFB8 vaddr
20000602 state 2 RAM-word-6
20000603 init 2 20000602 20
20000700 constd 6 7 ; 0x7 paddr, 0xFFFFFFC0 vaddr
20000702 state 2 RAM-word-7
20000703 init 2 20000702 20
20000800 constd 6 8 ; 0x8 paddr, 0xFFFFFFC8 vaddr
20000802 state 2 RAM-word-8
20000803 init 2 20000802 20
20000900 constd 6 9 ; 0x9 paddr, 0xFFFFFFD0 vaddr
20000902 state 2 RAM-word-9
20000903 init 2 20000902 20
20001000 constd 6 10 ; 0xA paddr, 0xFFFFFFD8 vaddr
20001001 constd 2 1 ; 0x1 word
20001002 state 2 RAM-word-10
20001003 init 2 20001002 20001001
20001100 constd 6 11 ; 0xB paddr, 0xFFFFFFE0 vaddr
20001101 constd 2 4294967288 ; 0xFFFFFFF8 word
20001102 state 2 RAM-word-11
20001103 init 2 20001102 20001101
20001200 constd 6 12 ; 0xC paddr, 0xFFFFFFE8 vaddr
20001202 state 2 RAM-word-12
20001203 init 2 20001202 20
20001300 constd 6 13 ; 0xD paddr, 0xFFFFFFF0 vaddr
20001302 state 2 RAM-word-13
20001303 init 2 20001302 20
20001400 constd 6 14 ; 0xE paddr, 0xFFFFFFF8 vaddr
20001401 constd 2 13510992162139763 ; 0x30002D00632E73 word
20001402 state 2 RAM-word-14
20001403 init 2 20001402 20001401

; data flow

36553600 constd 2 69632 ; 0x11 << 12
36553601 ite 2 16553600 36553600 205 ; 0x10000(~1): lui t0,0x11
36554000 constd 2 16 ; 0x10
36554001 add 2 205 36554000
36554002 ite 2 16554000 36554001 36553601 ; 0x10004(~1): addi t0,t0,16
36554400 ite 2 16554400 205 203 ; 0x10008(~1): addi gp,t0,0
36554800 ite 2 16554800 200 210 ; 0x1000C(~1): addi a0,zero,0
36555200 constd 2 214 ; 0xD6
36555201 ite 2 16555200 36555200 217 ; 0x10010(~1): addi a7,zero,214
36555600 ite 1 16555600 11 10 ; 0x10014(~1): ecall
36556000 constd 2 7 ; 0x7
36556001 add 2 210 36556000
36556002 ite 2 16556000 36556001 36554800 ; 0x10018(~1): addi a0,a0,7
36556400 constd 2 8 ; 0x8
36556401 ite 2 16556400 36556400 36554002 ; 0x1001C(~1): addi t0,zero,8
36556800 ite 2 16556800 205 21 ; record t0 for checking remainder by zero
36556801 urem 2 210 205
36556802 ite 2 16556800 36556801 36556401 ; 0x10020(~1): remu t0,a0,t0
36557200 sub 2 210 205
36557201 ite 2 16557200 36557200 36556002 ; 0x10024(~1): sub a0,a0,t0
36557600 constd 2 214 ; 0xD6
36557601 ite 2 16557600 36557600 36555201 ; 0x10028(~1): addi a7,zero,214
36558000 ite 1 16558000 11 36555600 ; 0x1002C(~1): ecall
36558400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36558401 add 2 203 36558400
36558402 ugte 1 36558401 30 ; address >= start of segment
36558403 ult 1 36558401 31 ; address < end of segment
36558404 and 1 36558402 36558403
36558405 sub 2 36558401 30
36558406 slice 6 36558405 6 3
36558407 ite 6 36558404 36558406 8
36558408 ugte 1 36558401 32 ; address >= start of segment
36558409 ult 1 36558401 34 ; address < end of segment
36558410 and 1 36558408 36558409
36558411 sub 2 36558401 36
36558412 slice 6 36558411 6 3
36558413 ite 6 36558410 36558412 36558407
36558414 ugte 1 36558401 35 ; address >= start of segment
36558415 ulte 1 36558401 50 ; address <= end of segment
36558416 and 1 36558414 36558415
36558417 sub 2 36558401 37
36558418 slice 6 36558417 6 3
36558419 ite 6 36558416 36558418 36558413
36558420 ite 2 16558400 36558401 30 ; for checking address validity
36558421 eq 1 36558419 20000000
36558422 ite 2 36558421 210 20000002
36558423 ite 2 16558400 36558422 20000002
36558424 eq 1 36558419 20000100
36558425 ite 2 36558424 210 20000102
36558426 ite 2 16558400 36558425 20000102
36558427 eq 1 36558419 20000200
36558428 ite 2 36558427 210 20000202
36558429 ite 2 16558400 36558428 20000202
36558430 eq 1 36558419 20000300
36558431 ite 2 36558430 210 20000302
36558432 ite 2 16558400 36558431 20000302
36558433 eq 1 36558419 20000400
36558434 ite 2 36558433 210 20000402
36558435 ite 2 16558400 36558434 20000402
36558436 eq 1 36558419 20000500
36558437 ite 2 36558436 210 20000502
36558438 ite 2 16558400 36558437 20000502
36558439 eq 1 36558419 20000600
36558440 ite 2 36558439 210 20000602
36558441 ite 2 16558400 36558440 20000602
36558442 eq 1 36558419 20000700
36558443 ite 2 36558442 210 20000702
36558444 ite 2 16558400 36558443 20000702
36558445 eq 1 36558419 20000800
36558446 ite 2 36558445 210 20000802
36558447 ite 2 16558400 36558446 20000802
36558448 eq 1 36558419 20000900
36558449 ite 2 36558448 210 20000902
36558450 ite 2 16558400 36558449 20000902
36558451 eq 1 36558419 20001000
36558452 ite 2 36558451 210 20001002
36558453 ite 2 16558400 36558452 20001002
36558454 eq 1 36558419 20001100
36558455 ite 2 36558454 210 20001102
36558456 ite 2 16558400 36558455 20001102
36558457 eq 1 36558419 20001200
36558458 ite 2 36558457 210 20001202
36558459 ite 2 16558400 36558458 20001202
36558460 eq 1 36558419 20001300
36558461 ite 2 36558460 210 20001302
36558462 ite 2 16558400 36558461 20001302
36558463 eq 1 36558419 20001400
36558464 ite 2 36558463 210 20001402
36558465 ite 2 16558400 36558464 20001402 ; 0x10030(~1): sd a0,-8(gp)
36558800 ite 2 16558800 200 36557201 ; 0x10034(~1): addi a0,zero,0
36559200 ugte 1 202 30 ; address >= start of segment
36559201 ult 1 202 31 ; address < end of segment
36559202 and 1 36559200 36559201
36559203 sub 2 202 30
36559204 slice 6 36559203 6 3
36559205 ite 6 36559202 36559204 8
36559206 ugte 1 202 32 ; address >= start of segment
36559207 ult 1 202 34 ; address < end of segment
36559208 and 1 36559206 36559207
36559209 sub 2 202 36
36559210 slice 6 36559209 6 3
36559211 ite 6 36559208 36559210 36559205
36559212 ugte 1 202 35 ; address >= start of segment
36559213 ulte 1 202 50 ; address <= end of segment
36559214 and 1 36559212 36559213
36559215 sub 2 202 37
36559216 slice 6 36559215 6 3
36559217 ite 6 36559214 36559216 36559211
36559218 ite 2 16559200 202 36558420 ; for checking address validity
36559219 eq 1 36559217 20000000
36559220 ite 2 36559219 20000002 20
36559221 eq 1 36559217 20000100
36559222 ite 2 36559221 20000102 36559220
36559223 eq 1 36559217 20000200
36559224 ite 2 36559223 20000202 36559222
36559225 eq 1 36559217 20000300
36559226 ite 2 36559225 20000302 36559224
36559227 eq 1 36559217 20000400
36559228 ite 2 36559227 20000402 36559226
36559229 eq 1 36559217 20000500
36559230 ite 2 36559229 20000502 36559228
36559231 eq 1 36559217 20000600
36559232 ite 2 36559231 20000602 36559230
36559233 eq 1 36559217 20000700
36559234 ite 2 36559233 20000702 36559232
36559235 eq 1 36559217 20000800
36559236 ite 2 36559235 20000802 36559234
36559237 eq 1 36559217 20000900
36559238 ite 2 36559237 20000902 36559236
36559239 eq 1 36559217 20001000
36559240 ite 2 36559239 20001002 36559238
36559241 eq 1 36559217 20001100
36559242 ite 2 36559241 20001102 36559240
36559243 eq 1 36559217 20001200
36559244 ite 2 36559243 20001202 36559242
36559245 eq 1 36559217 20001300
36559246 ite 2 36559245 20001302 36559244
36559247 eq 1 36559217 20001400
36559248 ite 2 36559247 20001402 36559246
36559249 ite 2 16559200 36559248 36556802 ; 0x10038(~1): ld t0,0(sp)
36559600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36559601 add 2 202 36559600
36559602 ite 2 16559600 36559601 202 ; 0x1003C(~1): addi sp,sp,-8
36560000 ugte 1 202 30 ; address >= start of segment
36560001 ult 1 202 31 ; address < end of segment
36560002 and 1 36560000 36560001
36560003 sub 2 202 30
36560004 slice 6 36560003 6 3
36560005 ite 6 36560002 36560004 8
36560006 ugte 1 202 32 ; address >= start of segment
36560007 ult 1 202 34 ; address < end of segment
36560008 and 1 36560006 36560007
36560009 sub 2 202 36
36560010 slice 6 36560009 6 3
36560011 ite 6 36560008 36560010 36560005
36560012 ugte 1 202 35 ; address >= start of segment
36560013 ulte 1 202 50 ; address <= end of segment
36560014 and 1 36560012 36560013
36560015 sub 2 202 37
36560016 slice 6 36560015 6 3
36560017 ite 6 36560014 36560016 36560011
36560018 ite 2 16560000 202 36559218 ; for checking address validity
36560019 eq 1 36560017 20000000
36560020 ite 2 36560019 205 36558423
36560021 ite 2 16560000 36560020 36558423
36560022 eq 1 36560017 20000100
36560023 ite 2 36560022 205 36558426
36560024 ite 2 16560000 36560023 36558426
36560025 eq 1 36560017 20000200
36560026 ite 2 36560025 205 36558429
36560027 ite 2 16560000 36560026 36558429
36560028 eq 1 36560017 20000300
36560029 ite 2 36560028 205 36558432
36560030 ite 2 16560000 36560029 36558432
36560031 eq 1 36560017 20000400
36560032 ite 2 36560031 205 36558435
36560033 ite 2 16560000 36560032 36558435
36560034 eq 1 36560017 20000500
36560035 ite 2 36560034 205 36558438
36560036 ite 2 16560000 36560035 36558438
36560037 eq 1 36560017 20000600
36560038 ite 2 36560037 205 36558441
36560039 ite 2 16560000 36560038 36558441
36560040 eq 1 36560017 20000700
36560041 ite 2 36560040 205 36558444
36560042 ite 2 16560000 36560041 36558444
36560043 eq 1 36560017 20000800
36560044 ite 2 36560043 205 36558447
36560045 ite 2 16560000 36560044 36558447
36560046 eq 1 36560017 20000900
36560047 ite 2 36560046 205 36558450
36560048 ite 2 16560000 36560047 36558450
36560049 eq 1 36560017 20001000
36560050 ite 2 36560049 205 36558453
36560051 ite 2 16560000 36560050 36558453
36560052 eq 1 36560017 20001100
36560053 ite 2 36560052 205 36558456
36560054 ite 2 16560000 36560053 36558456
36560055 eq 1 36560017 20001200
36560056 ite 2 36560055 205 36558459
36560057 ite 2 16560000 36560056 36558459
36560058 eq 1 36560017 20001300
36560059 ite 2 36560058 205 36558462
36560060 ite 2 16560000 36560059 36558462
36560061 eq 1 36560017 20001400
36560062 ite 2 36560061 205 36558465
36560063 ite 2 16560000 36560062 36558465 ; 0x10040(~1): sd t0,0(sp)
36560400 constd 2 16 ; 0x10
36560401 add 2 202 36560400
36560402 ite 2 16560400 36560401 36559249 ; 0x10044(~1): addi t0,sp,16
36560800 constd 2 8 ; 0x8
36560801 add 2 202 36560800
36560802 ugte 1 36560801 30 ; address >= start of segment
36560803 ult 1 36560801 31 ; address < end of segment
36560804 and 1 36560802 36560803
36560805 sub 2 36560801 30
36560806 slice 6 36560805 6 3
36560807 ite 6 36560804 36560806 8
36560808 ugte 1 36560801 32 ; address >= start of segment
36560809 ult 1 36560801 34 ; address < end of segment
36560810 and 1 36560808 36560809
36560811 sub 2 36560801 36
36560812 slice 6 36560811 6 3
36560813 ite 6 36560810 36560812 36560807
36560814 ugte 1 36560801 35 ; address >= start of segment
36560815 ulte 1 36560801 50 ; address <= end of segment
36560816 and 1 36560814 36560815
36560817 sub 2 36560801 37
36560818 slice 6 36560817 6 3
36560819 ite 6 36560816 36560818 36560813
36560820 ite 2 16560800 36560801 36560018 ; for checking address validity
36560821 eq 1 36560819 20000000
36560822 ite 2 36560821 205 36560021
36560823 ite 2 16560800 36560822 36560021
36560824 eq 1 36560819 20000100
36560825 ite 2 36560824 205 36560024
36560826 ite 2 16560800 36560825 36560024
36560827 eq 1 36560819 20000200
36560828 ite 2 36560827 205 36560027
36560829 ite 2 16560800 36560828 36560027
36560830 eq 1 36560819 20000300
36560831 ite 2 36560830 205 36560030
36560832 ite 2 16560800 36560831 36560030
36560833 eq 1 36560819 20000400
36560834 ite 2 36560833 205 36560033
36560835 ite 2 16560800 36560834 36560033
36560836 eq 1 36560819 20000500
36560837 ite 2 36560836 205 36560036
36560838 ite 2 16560800 36560837 36560036
36560839 eq 1 36560819 20000600
36560840 ite 2 36560839 205 36560039
36560841 ite 2 16560800 36560840 36560039
36560842 eq 1 36560819 20000700
36560843 ite 2 36560842 205 36560042
36560844 ite 2 16560800 36560843 36560042
36560845 eq 1 36560819 20000800
36560846 ite 2 36560845 205 36560045
36560847 ite 2 16560800 36560846 36560045
36560848 eq 1 36560819 20000900
36560849 ite 2 36560848 205 36560048
36560850 ite 2 16560800 36560849 36560048
36560851 eq 1 36560819 20001000
36560852 ite 2 36560851 205 36560051
36560853 ite 2 16560800 36560852 36560051
36560854 eq 1 36560819 20001100
36560855 ite 2 36560854 205 36560054
36560856 ite 2 16560800 36560855 36560054
36560857 eq 1 36560819 20001200
36560858 ite 2 36560857 205 36560057
36560859 ite 2 16560800 36560858 36560057
36560860 eq 1 36560819 20001300
36560861 ite 2 36560860 205 36560060
36560862 ite 2 16560800 36560861 36560060
36560863 eq 1 36560819 20001400
36560864 ite 2 36560863 205 36560063
36560865 ite 2 16560800 36560864 36560063 ; 0x10048(~1): sd t0,8(sp)
36561200 constd 2 65616 ; 0x10050
36561201 ite 2 16561200 36561200 201 ; 0x1004C(~1): jal ra,61
36561600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36561601 add 2 202 36561600
36561602 ite 2 16561600 36561601 36559602 ; 0x10050(~1): addi sp,sp,-8
36562000 ugte 1 202 30 ; address >= start of segment
36562001 ult 1 202 31 ; address < end of segment
36562002 and 1 36562000 36562001
36562003 sub 2 202 30
36562004 slice 6 36562003 6 3
36562005 ite 6 36562002 36562004 8
36562006 ugte 1 202 32 ; address >= start of segment
36562007 ult 1 202 34 ; address < end of segment
36562008 and 1 36562006 36562007
36562009 sub 2 202 36
36562010 slice 6 36562009 6 3
36562011 ite 6 36562008 36562010 36562005
36562012 ugte 1 202 35 ; address >= start of segment
36562013 ulte 1 202 50 ; address <= end of segment
36562014 and 1 36562012 36562013
36562015 sub 2 202 37
36562016 slice 6 36562015 6 3
36562017 ite 6 36562014 36562016 36562011
36562018 ite 2 16562000 202 36560820 ; for checking address validity
36562019 eq 1 36562017 20000000
36562020 ite 2 36562019 210 36560823
36562021 ite 2 16562000 36562020 36560823
36562022 eq 1 36562017 20000100
36562023 ite 2 36562022 210 36560826
36562024 ite 2 16562000 36562023 36560826
36562025 eq 1 36562017 20000200
36562026 ite 2 36562025 210 36560829
36562027 ite 2 16562000 36562026 36560829
36562028 eq 1 36562017 20000300
36562029 ite 2 36562028 210 36560832
36562030 ite 2 16562000 36562029 36560832
36562031 eq 1 36562017 20000400
36562032 ite 2 36562031 210 36560835
36562033 ite 2 16562000 36562032 36560835
36562034 eq 1 36562017 20000500
36562035 ite 2 36562034 210 36560838
36562036 ite 2 16562000 36562035 36560838
36562037 eq 1 36562017 20000600
36562038 ite 2 36562037 210 36560841
36562039 ite 2 16562000 36562038 36560841
36562040 eq 1 36562017 20000700
36562041 ite 2 36562040 210 36560844
36562042 ite 2 16562000 36562041 36560844
36562043 eq 1 36562017 20000800
36562044 ite 2 36562043 210 36560847
36562045 ite 2 16562000 36562044 36560847
36562046 eq 1 36562017 20000900
36562047 ite 2 36562046 210 36560850
36562048 ite 2 16562000 36562047 36560850
36562049 eq 1 36562017 20001000
36562050 ite 2 36562049 210 36560853
36562051 ite 2 16562000 36562050 36560853
36562052 eq 1 36562017 20001100
36562053 ite 2 36562052 210 36560856
36562054 ite 2 16562000 36562053 36560856
36562055 eq 1 36562017 20001200
36562056 ite 2 36562055 210 36560859
36562057 ite 2 16562000 36562056 36560859
36562058 eq 1 36562017 20001300
36562059 ite 2 36562058 210 36560862
36562060 ite 2 16562000 36562059 36560862
36562061 eq 1 36562017 20001400
36562062 ite 2 36562061 210 36560865
36562063 ite 2 16562000 36562062 36560865 ; 0x10054(~1): sd a0,0(sp)
36562400 ugte 1 202 30 ; address >= start of segment
36562401 ult 1 202 31 ; address < end of segment
36562402 and 1 36562400 36562401
36562403 sub 2 202 30
36562404 slice 6 36562403 6 3
36562405 ite 6 36562402 36562404 8
36562406 ugte 1 202 32 ; address >= start of segment
36562407 ult 1 202 34 ; address < end of segment
36562408 and 1 36562406 36562407
36562409 sub 2 202 36
36562410 slice 6 36562409 6 3
36562411 ite 6 36562408 36562410 36562405
36562412 ugte 1 202 35 ; address >= start of segment
36562413 ulte 1 202 50 ; address <= end of segment
36562414 and 1 36562412 36562413
36562415 sub 2 202 37
36562416 slice 6 36562415 6 3
36562417 ite 6 36562414 36562416 36562411
36562418 ite 2 16562400 202 36562018 ; for checking address validity
36562419 eq 1 36562417 20000000
36562420 ite 2 36562419 20000002 20
36562421 eq 1 36562417 20000100
36562422 ite 2 36562421 20000102 36562420
36562423 eq 1 36562417 20000200
36562424 ite 2 36562423 20000202 36562422
36562425 eq 1 36562417 20000300
36562426 ite 2 36562425 20000302 36562424
36562427 eq 1 36562417 20000400
36562428 ite 2 36562427 20000402 36562426
36562429 eq 1 36562417 20000500
36562430 ite 2 36562429 20000502 36562428
36562431 eq 1 36562417 20000600
36562432 ite 2 36562431 20000602 36562430
36562433 eq 1 36562417 20000700
36562434 ite 2 36562433 20000702 36562432
36562435 eq 1 36562417 20000800
36562436 ite 2 36562435 20000802 36562434
36562437 eq 1 36562417 20000900
36562438 ite 2 36562437 20000902 36562436
36562439 eq 1 36562417 20001000
36562440 ite 2 36562439 20001002 36562438
36562441 eq 1 36562417 20001100
36562442 ite 2 36562441 20001102 36562440
36562443 eq 1 36562417 20001200
36562444 ite 2 36562443 20001202 36562442
36562445 eq 1 36562417 20001300
36562446 ite 2 36562445 20001302 36562444
36562447 eq 1 36562417 20001400
36562448 ite 2 36562447 20001402 36562446
36562449 ite 2 16562400 36562448 36558800 ; 0x10058(~1): ld a0,0(sp)
36562800 constd 2 8 ; 0x8
36562801 add 2 202 36562800
36562802 ite 2 16562800 36562801 36561602 ; 0x1005C(~1): addi sp,sp,8
36563200 constd 2 93 ; 0x5D
36563201 ite 2 16563200 36563200 36557601 ; 0x10060(~1): addi a7,zero,93
36563600 ite 1 16563600 11 36558000 ; 0x10064(~1): ecall
36564000 ugte 1 202 30 ; address >= start of segment
36564001 ult 1 202 31 ; address < end of segment
36564002 and 1 36564000 36564001
36564003 sub 2 202 30
36564004 slice 6 36564003 6 3
36564005 ite 6 36564002 36564004 8
36564006 ugte 1 202 32 ; address >= start of segment
36564007 ult 1 202 34 ; address < end of segment
36564008 and 1 36564006 36564007
36564009 sub 2 202 36
36564010 slice 6 36564009 6 3
36564011 ite 6 36564008 36564010 36564005
36564012 ugte 1 202 35 ; address >= start of segment
36564013 ulte 1 202 50 ; address <= end of segment
36564014 and 1 36564012 36564013
36564015 sub 2 202 37
36564016 slice 6 36564015 6 3
36564017 ite 6 36564014 36564016 36564011
36564018 ite 2 16564000 202 36562418 ; for checking address validity
36564019 eq 1 36564017 20000000
36564020 ite 2 36564019 20000002 20
36564021 eq 1 36564017 20000100
36564022 ite 2 36564021 20000102 36564020
36564023 eq 1 36564017 20000200
36564024 ite 2 36564023 20000202 36564022
36564025 eq 1 36564017 20000300
36564026 ite 2 36564025 20000302 36564024
36564027 eq 1 36564017 20000400
36564028 ite 2 36564027 20000402 36564026
36564029 eq 1 36564017 20000500
36564030 ite 2 36564029 20000502 36564028
36564031 eq 1 36564017 20000600
36564032 ite 2 36564031 20000602 36564030
36564033 eq 1 36564017 20000700
36564034 ite 2 36564033 20000702 36564032
36564035 eq 1 36564017 20000800
36564036 ite 2 36564035 20000802 36564034
36564037 eq 1 36564017 20000900
36564038 ite 2 36564037 20000902 36564036
36564039 eq 1 36564017 20001000
36564040 ite 2 36564039 20001002 36564038
36564041 eq 1 36564017 20001100
36564042 ite 2 36564041 20001102 36564040
36564043 eq 1 36564017 20001200
36564044 ite 2 36564043 20001202 36564042
36564045 eq 1 36564017 20001300
36564046 ite 2 36564045 20001302 36564044
36564047 eq 1 36564017 20001400
36564048 ite 2 36564047 20001402 36564046
36564049 ite 2 16564000 36564048 36562449 ; 0x10068(~1): ld a0,0(sp)
36564400 constd 2 8 ; 0x8
36564401 add 2 202 36564400
36564402 ite 2 16564400 36564401 36562802 ; 0x1006C(~1): addi sp,sp,8
36564800 ugte 1 202 30 ; address >= start of segment
36564801 ult 1 202 31 ; address < end of segment
36564802 and 1 36564800 36564801
36564803 sub 2 202 30
36564804 slice 6 36564803 6 3
36564805 ite 6 36564802 36564804 8
36564806 ugte 1 202 32 ; address >= start of segment
36564807 ult 1 202 34 ; address < end of segment
36564808 and 1 36564806 36564807
36564809 sub 2 202 36
36564810 slice 6 36564809 6 3
36564811 ite 6 36564808 36564810 36564805
36564812 ugte 1 202 35 ; address >= start of segment
36564813 ulte 1 202 50 ; address <= end of segment
36564814 and 1 36564812 36564813
36564815 sub 2 202 37
36564816 slice 6 36564815 6 3
36564817 ite 6 36564814 36564816 36564811
36564818 ite 2 16564800 202 36564018 ; for checking address validity
36564819 eq 1 36564817 20000000
36564820 ite 2 36564819 20000002 20
36564821 eq 1 36564817 20000100
36564822 ite 2 36564821 20000102 36564820
36564823 eq 1 36564817 20000200
36564824 ite 2 36564823 20000202 36564822
36564825 eq 1 36564817 20000300
36564826 ite 2 36564825 20000302 36564824
36564827 eq 1 36564817 20000400
36564828 ite 2 36564827 20000402 36564826
36564829 eq 1 36564817 20000500
36564830 ite 2 36564829 20000502 36564828
36564831 eq 1 36564817 20000600
36564832 ite 2 36564831 20000602 36564830
36564833 eq 1 36564817 20000700
36564834 ite 2 36564833 20000702 36564832
36564835 eq 1 36564817 20000800
36564836 ite 2 36564835 20000802 36564834
36564837 eq 1 36564817 20000900
36564838 ite 2 36564837 20000902 36564836
36564839 eq 1 36564817 20001000
36564840 ite 2 36564839 20001002 36564838
36564841 eq 1 36564817 20001100
36564842 ite 2 36564841 20001102 36564840
36564843 eq 1 36564817 20001200
36564844 ite 2 36564843 20001202 36564842
36564845 eq 1 36564817 20001300
36564846 ite 2 36564845 20001302 36564844
36564847 eq 1 36564817 20001400
36564848 ite 2 36564847 20001402 36564846
36564849 ite 2 16564800 36564848 211 ; 0x10070(~1): ld a1,0(sp)
36565200 constd 2 8 ; 0x8
36565201 add 2 202 36565200
36565202 ite 2 16565200 36565201 36564402 ; 0x10074(~1): addi sp,sp,8
36565600 ugte 1 202 30 ; address >= start of segment
36565601 ult 1 202 31 ; address < end of segment
36565602 and 1 36565600 36565601
36565603 sub 2 202 30
36565604 slice 6 36565603 6 3
36565605 ite 6 36565602 36565604 8
36565606 ugte 1 202 32 ; address >= start of segment
36565607 ult 1 202 34 ; address < end of segment
36565608 and 1 36565606 36565607
36565609 sub 2 202 36
36565610 slice 6 36565609 6 3
36565611 ite 6 36565608 36565610 36565605
36565612 ugte 1 202 35 ; address >= start of segment
36565613 ulte 1 202 50 ; address <= end of segment
36565614 and 1 36565612 36565613
36565615 sub 2 202 37
36565616 slice 6 36565615 6 3
36565617 ite 6 36565614 36565616 36565611
36565618 ite 2 16565600 202 36564818 ; for checking address validity
36565619 eq 1 36565617 20000000
36565620 ite 2 36565619 20000002 20
36565621 eq 1 36565617 20000100
36565622 ite 2 36565621 20000102 36565620
36565623 eq 1 36565617 20000200
36565624 ite 2 36565623 20000202 36565622
36565625 eq 1 36565617 20000300
36565626 ite 2 36565625 20000302 36565624
36565627 eq 1 36565617 20000400
36565628 ite 2 36565627 20000402 36565626
36565629 eq 1 36565617 20000500
36565630 ite 2 36565629 20000502 36565628
36565631 eq 1 36565617 20000600
36565632 ite 2 36565631 20000602 36565630
36565633 eq 1 36565617 20000700
36565634 ite 2 36565633 20000702 36565632
36565635 eq 1 36565617 20000800
36565636 ite 2 36565635 20000802 36565634
36565637 eq 1 36565617 20000900
36565638 ite 2 36565637 20000902 36565636
36565639 eq 1 36565617 20001000
36565640 ite 2 36565639 20001002 36565638
36565641 eq 1 36565617 20001100
36565642 ite 2 36565641 20001102 36565640
36565643 eq 1 36565617 20001200
36565644 ite 2 36565643 20001202 36565642
36565645 eq 1 36565617 20001300
36565646 ite 2 36565645 20001302 36565644
36565647 eq 1 36565617 20001400
36565648 ite 2 36565647 20001402 36565646
36565649 ite 2 16565600 36565648 212 ; 0x10078(~1): ld a2,0(sp)
36566000 constd 2 8 ; 0x8
36566001 add 2 202 36566000
36566002 ite 2 16566000 36566001 36565202 ; 0x1007C(~1): addi sp,sp,8
36566400 constd 2 63 ; 0x3F
36566401 ite 2 16566400 36566400 36563201 ; 0x10080(~1): addi a7,zero,63
36566800 ite 1 16566800 11 36563600 ; 0x10084(~1): ecall
36575200 ugte 1 202 30 ; address >= start of segment
36575201 ult 1 202 31 ; address < end of segment
36575202 and 1 36575200 36575201
36575203 sub 2 202 30
36575204 slice 6 36575203 6 3
36575205 ite 6 36575202 36575204 8
36575206 ugte 1 202 32 ; address >= start of segment
36575207 ult 1 202 34 ; address < end of segment
36575208 and 1 36575206 36575207
36575209 sub 2 202 36
36575210 slice 6 36575209 6 3
36575211 ite 6 36575208 36575210 36575205
36575212 ugte 1 202 35 ; address >= start of segment
36575213 ulte 1 202 50 ; address <= end of segment
36575214 and 1 36575212 36575213
36575215 sub 2 202 37
36575216 slice 6 36575215 6 3
36575217 ite 6 36575214 36575216 36575211
36575218 ite 2 16575200 202 36565618 ; for checking address validity
36575219 eq 1 36575217 20000000
36575220 ite 2 36575219 20000002 20
36575221 eq 1 36575217 20000100
36575222 ite 2 36575221 20000102 36575220
36575223 eq 1 36575217 20000200
36575224 ite 2 36575223 20000202 36575222
36575225 eq 1 36575217 20000300
36575226 ite 2 36575225 20000302 36575224
36575227 eq 1 36575217 20000400
36575228 ite 2 36575227 20000402 36575226
36575229 eq 1 36575217 20000500
36575230 ite 2 36575229 20000502 36575228
36575231 eq 1 36575217 20000600
36575232 ite 2 36575231 20000602 36575230
36575233 eq 1 36575217 20000700
36575234 ite 2 36575233 20000702 36575232
36575235 eq 1 36575217 20000800
36575236 ite 2 36575235 20000802 36575234
36575237 eq 1 36575217 20000900
36575238 ite 2 36575237 20000902 36575236
36575239 eq 1 36575217 20001000
36575240 ite 2 36575239 20001002 36575238
36575241 eq 1 36575217 20001100
36575242 ite 2 36575241 20001102 36575240
36575243 eq 1 36575217 20001200
36575244 ite 2 36575243 20001202 36575242
36575245 eq 1 36575217 20001300
36575246 ite 2 36575245 20001302 36575244
36575247 eq 1 36575217 20001400
36575248 ite 2 36575247 20001402 36575246
36575249 ite 2 16575200 36575248 36560402 ; 0x100D8(~1): ld t0,0(sp)
36575600 constd 2 8 ; 0x8
36575601 add 2 202 36575600
36575602 ite 2 16575600 36575601 36566002 ; 0x100DC(~1): addi sp,sp,8
36576000 constd 2 7 ; 0x7
36576001 add 2 205 36576000
36576002 ite 2 16576000 36576001 36575249 ; 0x100E0(~1): addi t0,t0,7
36576400 constd 2 8 ; 0x8
36576401 ite 2 16576400 36576400 206 ; 0x100E4(~1): addi t1,zero,8
36576800 ite 2 16576800 206 36556800 ; record t1 for checking remainder by zero
36576801 urem 2 205 206
36576802 ite 2 16576800 36576801 36576401 ; 0x100E8(~1): remu t1,t0,t1
36577200 sub 2 205 206
36577201 ite 2 16577200 36577200 36576002 ; 0x100EC(~1): sub t0,t0,t1
36577600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36577601 add 2 203 36577600
36577602 ugte 1 36577601 30 ; address >= start of segment
36577603 ult 1 36577601 31 ; address < end of segment
36577604 and 1 36577602 36577603
36577605 sub 2 36577601 30
36577606 slice 6 36577605 6 3
36577607 ite 6 36577604 36577606 8
36577608 ugte 1 36577601 32 ; address >= start of segment
36577609 ult 1 36577601 34 ; address < end of segment
36577610 and 1 36577608 36577609
36577611 sub 2 36577601 36
36577612 slice 6 36577611 6 3
36577613 ite 6 36577610 36577612 36577607
36577614 ugte 1 36577601 35 ; address >= start of segment
36577615 ulte 1 36577601 50 ; address <= end of segment
36577616 and 1 36577614 36577615
36577617 sub 2 36577601 37
36577618 slice 6 36577617 6 3
36577619 ite 6 36577616 36577618 36577613
36577620 ite 2 16577600 36577601 36575218 ; for checking address validity
36577621 eq 1 36577619 20000000
36577622 ite 2 36577621 20000002 20
36577623 eq 1 36577619 20000100
36577624 ite 2 36577623 20000102 36577622
36577625 eq 1 36577619 20000200
36577626 ite 2 36577625 20000202 36577624
36577627 eq 1 36577619 20000300
36577628 ite 2 36577627 20000302 36577626
36577629 eq 1 36577619 20000400
36577630 ite 2 36577629 20000402 36577628
36577631 eq 1 36577619 20000500
36577632 ite 2 36577631 20000502 36577630
36577633 eq 1 36577619 20000600
36577634 ite 2 36577633 20000602 36577632
36577635 eq 1 36577619 20000700
36577636 ite 2 36577635 20000702 36577634
36577637 eq 1 36577619 20000800
36577638 ite 2 36577637 20000802 36577636
36577639 eq 1 36577619 20000900
36577640 ite 2 36577639 20000902 36577638
36577641 eq 1 36577619 20001000
36577642 ite 2 36577641 20001002 36577640
36577643 eq 1 36577619 20001100
36577644 ite 2 36577643 20001102 36577642
36577645 eq 1 36577619 20001200
36577646 ite 2 36577645 20001202 36577644
36577647 eq 1 36577619 20001300
36577648 ite 2 36577647 20001302 36577646
36577649 eq 1 36577619 20001400
36577650 ite 2 36577649 20001402 36577648
36577651 ite 2 16577600 36577650 36576802 ; 0x100F0(~1): ld t1,-8(gp)
36578000 add 2 206 205
36578001 ite 2 16578000 36578000 36564049 ; 0x100F4(~1): add a0,t1,t0
36578400 constd 2 214 ; 0xD6
36578401 ite 2 16578400 36578400 36566401 ; 0x100F8(~1): addi a7,zero,214
36578800 ite 1 16578800 11 36566800 ; 0x100FC(~1): ecall
36579200 eq 1 210 206 ; 0x10100(~1): beq a0,t1,2
36579201 not 1 36579200
36579600 eq 1 200 200 ; 0x10104(~1): beq zero,zero,4
36579601 not 1 36579600
36580000 eq 1 200 205 ; 0x10108(~1): beq zero,t0,3
36580001 not 1 36580000
36580400 ite 2 16580400 200 36578001 ; 0x1010C(~1): addi a0,zero,0
36580800 eq 1 200 200 ; 0x10110(~1): beq zero,zero,3
36580801 not 1 36580800
36581200 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36581201 add 2 203 36581200
36581202 ugte 1 36581201 30 ; address >= start of segment
36581203 ult 1 36581201 31 ; address < end of segment
36581204 and 1 36581202 36581203
36581205 sub 2 36581201 30
36581206 slice 6 36581205 6 3
36581207 ite 6 36581204 36581206 8
36581208 ugte 1 36581201 32 ; address >= start of segment
36581209 ult 1 36581201 34 ; address < end of segment
36581210 and 1 36581208 36581209
36581211 sub 2 36581201 36
36581212 slice 6 36581211 6 3
36581213 ite 6 36581210 36581212 36581207
36581214 ugte 1 36581201 35 ; address >= start of segment
36581215 ulte 1 36581201 50 ; address <= end of segment
36581216 and 1 36581214 36581215
36581217 sub 2 36581201 37
36581218 slice 6 36581217 6 3
36581219 ite 6 36581216 36581218 36581213
36581220 ite 2 16581200 36581201 36577620 ; for checking address validity
36581221 eq 1 36581219 20000000
36581222 ite 2 36581221 210 36562021
36581223 ite 2 16581200 36581222 36562021
36581224 eq 1 36581219 20000100
36581225 ite 2 36581224 210 36562024
36581226 ite 2 16581200 36581225 36562024
36581227 eq 1 36581219 20000200
36581228 ite 2 36581227 210 36562027
36581229 ite 2 16581200 36581228 36562027
36581230 eq 1 36581219 20000300
36581231 ite 2 36581230 210 36562030
36581232 ite 2 16581200 36581231 36562030
36581233 eq 1 36581219 20000400
36581234 ite 2 36581233 210 36562033
36581235 ite 2 16581200 36581234 36562033
36581236 eq 1 36581219 20000500
36581237 ite 2 36581236 210 36562036
36581238 ite 2 16581200 36581237 36562036
36581239 eq 1 36581219 20000600
36581240 ite 2 36581239 210 36562039
36581241 ite 2 16581200 36581240 36562039
36581242 eq 1 36581219 20000700
36581243 ite 2 36581242 210 36562042
36581244 ite 2 16581200 36581243 36562042
36581245 eq 1 36581219 20000800
36581246 ite 2 36581245 210 36562045
36581247 ite 2 16581200 36581246 36562045
36581248 eq 1 36581219 20000900
36581249 ite 2 36581248 210 36562048
36581250 ite 2 16581200 36581249 36562048
36581251 eq 1 36581219 20001000
36581252 ite 2 36581251 210 36562051
36581253 ite 2 16581200 36581252 36562051
36581254 eq 1 36581219 20001100
36581255 ite 2 36581254 210 36562054
36581256 ite 2 16581200 36581255 36562054
36581257 eq 1 36581219 20001200
36581258 ite 2 36581257 210 36562057
36581259 ite 2 16581200 36581258 36562057
36581260 eq 1 36581219 20001300
36581261 ite 2 36581260 210 36562060
36581262 ite 2 16581200 36581261 36562060
36581263 eq 1 36581219 20001400
36581264 ite 2 36581263 210 36562063
36581265 ite 2 16581200 36581264 36562063 ; 0x10114(~1): sd a0,-8(gp)
36581600 ite 2 16581600 206 36580400 ; 0x10118(~1): addi a0,t1,0
36585600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36585601 add 2 202 36585600
36585602 ite 2 16585600 36585601 36575602 ; 0x10140(~4): addi sp,sp,-8
36586000 ugte 1 202 30 ; address >= start of segment
36586001 ult 1 202 31 ; address < end of segment
36586002 and 1 36586000 36586001
36586003 sub 2 202 30
36586004 slice 6 36586003 6 3
36586005 ite 6 36586002 36586004 8
36586006 ugte 1 202 32 ; address >= start of segment
36586007 ult 1 202 34 ; address < end of segment
36586008 and 1 36586006 36586007
36586009 sub 2 202 36
36586010 slice 6 36586009 6 3
36586011 ite 6 36586008 36586010 36586005
36586012 ugte 1 202 35 ; address >= start of segment
36586013 ulte 1 202 50 ; address <= end of segment
36586014 and 1 36586012 36586013
36586015 sub 2 202 37
36586016 slice 6 36586015 6 3
36586017 ite 6 36586014 36586016 36586011
36586018 ite 2 16586000 202 36581220 ; for checking address validity
36586019 eq 1 36586017 20000000
36586020 ite 2 36586019 201 36581223
36586021 ite 2 16586000 36586020 36581223
36586022 eq 1 36586017 20000100
36586023 ite 2 36586022 201 36581226
36586024 ite 2 16586000 36586023 36581226
36586025 eq 1 36586017 20000200
36586026 ite 2 36586025 201 36581229
36586027 ite 2 16586000 36586026 36581229
36586028 eq 1 36586017 20000300
36586029 ite 2 36586028 201 36581232
36586030 ite 2 16586000 36586029 36581232
36586031 eq 1 36586017 20000400
36586032 ite 2 36586031 201 36581235
36586033 ite 2 16586000 36586032 36581235
36586034 eq 1 36586017 20000500
36586035 ite 2 36586034 201 36581238
36586036 ite 2 16586000 36586035 36581238
36586037 eq 1 36586017 20000600
36586038 ite 2 36586037 201 36581241
36586039 ite 2 16586000 36586038 36581241
36586040 eq 1 36586017 20000700
36586041 ite 2 36586040 201 36581244
36586042 ite 2 16586000 36586041 36581244
36586043 eq 1 36586017 20000800
36586044 ite 2 36586043 201 36581247
36586045 ite 2 16586000 36586044 36581247
36586046 eq 1 36586017 20000900
36586047 ite 2 36586046 201 36581250
36586048 ite 2 16586000 36586047 36581250
36586049 eq 1 36586017 20001000
36586050 ite 2 36586049 201 36581253
36586051 ite 2 16586000 36586050 36581253
36586052 eq 1 36586017 20001100
36586053 ite 2 36586052 201 36581256
36586054 ite 2 16586000 36586053 36581256
36586055 eq 1 36586017 20001200
36586056 ite 2 36586055 201 36581259
36586057 ite 2 16586000 36586056 36581259
36586058 eq 1 36586017 20001300
36586059 ite 2 36586058 201 36581262
36586060 ite 2 16586000 36586059 36581262
36586061 eq 1 36586017 20001400
36586062 ite 2 36586061 201 36581265
36586063 ite 2 16586000 36586062 36581265 ; 0x10144(~4): sd ra,0(sp)
36586400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36586401 add 2 202 36586400
36586402 ite 2 16586400 36586401 36585602 ; 0x10148(~4): addi sp,sp,-8
36586800 ugte 1 202 30 ; address >= start of segment
36586801 ult 1 202 31 ; address < end of segment
36586802 and 1 36586800 36586801
36586803 sub 2 202 30
36586804 slice 6 36586803 6 3
36586805 ite 6 36586802 36586804 8
36586806 ugte 1 202 32 ; address >= start of segment
36586807 ult 1 202 34 ; address < end of segment
36586808 and 1 36586806 36586807
36586809 sub 2 202 36
36586810 slice 6 36586809 6 3
36586811 ite 6 36586808 36586810 36586805
36586812 ugte 1 202 35 ; address >= start of segment
36586813 ulte 1 202 50 ; address <= end of segment
36586814 and 1 36586812 36586813
36586815 sub 2 202 37
36586816 slice 6 36586815 6 3
36586817 ite 6 36586814 36586816 36586811
36586818 ite 2 16586800 202 36586018 ; for checking address validity
36586819 eq 1 36586817 20000000
36586820 ite 2 36586819 208 36586021
36586821 ite 2 16586800 36586820 36586021
36586822 eq 1 36586817 20000100
36586823 ite 2 36586822 208 36586024
36586824 ite 2 16586800 36586823 36586024
36586825 eq 1 36586817 20000200
36586826 ite 2 36586825 208 36586027
36586827 ite 2 16586800 36586826 36586027
36586828 eq 1 36586817 20000300
36586829 ite 2 36586828 208 36586030
36586830 ite 2 16586800 36586829 36586030
36586831 eq 1 36586817 20000400
36586832 ite 2 36586831 208 36586033
36586833 ite 2 16586800 36586832 36586033
36586834 eq 1 36586817 20000500
36586835 ite 2 36586834 208 36586036
36586836 ite 2 16586800 36586835 36586036
36586837 eq 1 36586817 20000600
36586838 ite 2 36586837 208 36586039
36586839 ite 2 16586800 36586838 36586039
36586840 eq 1 36586817 20000700
36586841 ite 2 36586840 208 36586042
36586842 ite 2 16586800 36586841 36586042
36586843 eq 1 36586817 20000800
36586844 ite 2 36586843 208 36586045
36586845 ite 2 16586800 36586844 36586045
36586846 eq 1 36586817 20000900
36586847 ite 2 36586846 208 36586048
36586848 ite 2 16586800 36586847 36586048
36586849 eq 1 36586817 20001000
36586850 ite 2 36586849 208 36586051
36586851 ite 2 16586800 36586850 36586051
36586852 eq 1 36586817 20001100
36586853 ite 2 36586852 208 36586054
36586854 ite 2 16586800 36586853 36586054
36586855 eq 1 36586817 20001200
36586856 ite 2 36586855 208 36586057
36586857 ite 2 16586800 36586856 36586057
36586858 eq 1 36586817 20001300
36586859 ite 2 36586858 208 36586060
36586860 ite 2 16586800 36586859 36586060
36586861 eq 1 36586817 20001400
36586862 ite 2 36586861 208 36586063
36586863 ite 2 16586800 36586862 36586063 ; 0x1014C(~4): sd s0,0(sp)
36587200 ite 2 16587200 202 208 ; 0x10150(~4): addi s0,sp,0
36587600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36587601 add 2 202 36587600
36587602 ite 2 16587600 36587601 36586402 ; 0x10154(~4): addi sp,sp,-8
36588000 constd 2 1 ; 0x1
36588001 ite 2 16588000 36588000 36577201 ; 0x10158(~4): addi t0,zero,1
36588400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36588401 add 2 202 36588400
36588402 ite 2 16588400 36588401 36587602 ; 0x1015C(~4): addi sp,sp,-8
36588800 ugte 1 202 30 ; address >= start of segment
36588801 ult 1 202 31 ; address < end of segment
36588802 and 1 36588800 36588801
36588803 sub 2 202 30
36588804 slice 6 36588803 6 3
36588805 ite 6 36588802 36588804 8
36588806 ugte 1 202 32 ; address >= start of segment
36588807 ult 1 202 34 ; address < end of segment
36588808 and 1 36588806 36588807
36588809 sub 2 202 36
36588810 slice 6 36588809 6 3
36588811 ite 6 36588808 36588810 36588805
36588812 ugte 1 202 35 ; address >= start of segment
36588813 ulte 1 202 50 ; address <= end of segment
36588814 and 1 36588812 36588813
36588815 sub 2 202 37
36588816 slice 6 36588815 6 3
36588817 ite 6 36588814 36588816 36588811
36588818 ite 2 16588800 202 36586818 ; for checking address validity
36588819 eq 1 36588817 20000000
36588820 ite 2 36588819 205 36586821
36588821 ite 2 16588800 36588820 36586821
36588822 eq 1 36588817 20000100
36588823 ite 2 36588822 205 36586824
36588824 ite 2 16588800 36588823 36586824
36588825 eq 1 36588817 20000200
36588826 ite 2 36588825 205 36586827
36588827 ite 2 16588800 36588826 36586827
36588828 eq 1 36588817 20000300
36588829 ite 2 36588828 205 36586830
36588830 ite 2 16588800 36588829 36586830
36588831 eq 1 36588817 20000400
36588832 ite 2 36588831 205 36586833
36588833 ite 2 16588800 36588832 36586833
36588834 eq 1 36588817 20000500
36588835 ite 2 36588834 205 36586836
36588836 ite 2 16588800 36588835 36586836
36588837 eq 1 36588817 20000600
36588838 ite 2 36588837 205 36586839
36588839 ite 2 16588800 36588838 36586839
36588840 eq 1 36588817 20000700
36588841 ite 2 36588840 205 36586842
36588842 ite 2 16588800 36588841 36586842
36588843 eq 1 36588817 20000800
36588844 ite 2 36588843 205 36586845
36588845 ite 2 16588800 36588844 36586845
36588846 eq 1 36588817 20000900
36588847 ite 2 36588846 205 36586848
36588848 ite 2 16588800 36588847 36586848
36588849 eq 1 36588817 20001000
36588850 ite 2 36588849 205 36586851
36588851 ite 2 16588800 36588850 36586851
36588852 eq 1 36588817 20001100
36588853 ite 2 36588852 205 36586854
36588854 ite 2 16588800 36588853 36586854
36588855 eq 1 36588817 20001200
36588856 ite 2 36588855 205 36586857
36588857 ite 2 16588800 36588856 36586857
36588858 eq 1 36588817 20001300
36588859 ite 2 36588858 205 36586860
36588860 ite 2 16588800 36588859 36586860
36588861 eq 1 36588817 20001400
36588862 ite 2 36588861 205 36586863
36588863 ite 2 16588800 36588862 36586863 ; 0x10160(~4): sd t0,0(sp)
36589200 constd 2 65896 ; 0x10168
36589201 ite 2 16589200 36589200 36561201 ; 0x10164(~4): jal ra,-35
36589600 ite 2 16589600 210 36588001 ; 0x10168(~4): addi t0,a0,0
36590000 ite 2 16590000 200 36581600 ; 0x1016C(~4): addi a0,zero,0
36590400 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36590401 add 2 203 36590400
36590402 ugte 1 36590401 30 ; address >= start of segment
36590403 ult 1 36590401 31 ; address < end of segment
36590404 and 1 36590402 36590403
36590405 sub 2 36590401 30
36590406 slice 6 36590405 6 3
36590407 ite 6 36590404 36590406 8
36590408 ugte 1 36590401 32 ; address >= start of segment
36590409 ult 1 36590401 34 ; address < end of segment
36590410 and 1 36590408 36590409
36590411 sub 2 36590401 36
36590412 slice 6 36590411 6 3
36590413 ite 6 36590410 36590412 36590407
36590414 ugte 1 36590401 35 ; address >= start of segment
36590415 ulte 1 36590401 50 ; address <= end of segment
36590416 and 1 36590414 36590415
36590417 sub 2 36590401 37
36590418 slice 6 36590417 6 3
36590419 ite 6 36590416 36590418 36590413
36590420 ite 2 16590400 36590401 36588818 ; for checking address validity
36590421 eq 1 36590419 20000000
36590422 ite 2 36590421 205 36588821
36590423 ite 2 16590400 36590422 36588821
36590424 eq 1 36590419 20000100
36590425 ite 2 36590424 205 36588824
36590426 ite 2 16590400 36590425 36588824
36590427 eq 1 36590419 20000200
36590428 ite 2 36590427 205 36588827
36590429 ite 2 16590400 36590428 36588827
36590430 eq 1 36590419 20000300
36590431 ite 2 36590430 205 36588830
36590432 ite 2 16590400 36590431 36588830
36590433 eq 1 36590419 20000400
36590434 ite 2 36590433 205 36588833
36590435 ite 2 16590400 36590434 36588833
36590436 eq 1 36590419 20000500
36590437 ite 2 36590436 205 36588836
36590438 ite 2 16590400 36590437 36588836
36590439 eq 1 36590419 20000600
36590440 ite 2 36590439 205 36588839
36590441 ite 2 16590400 36590440 36588839
36590442 eq 1 36590419 20000700
36590443 ite 2 36590442 205 36588842
36590444 ite 2 16590400 36590443 36588842
36590445 eq 1 36590419 20000800
36590446 ite 2 36590445 205 36588845
36590447 ite 2 16590400 36590446 36588845
36590448 eq 1 36590419 20000900
36590449 ite 2 36590448 205 36588848
36590450 ite 2 16590400 36590449 36588848
36590451 eq 1 36590419 20001000
36590452 ite 2 36590451 205 36588851
36590453 ite 2 16590400 36590452 36588851
36590454 eq 1 36590419 20001100
36590455 ite 2 36590454 205 36588854
36590456 ite 2 16590400 36590455 36588854
36590457 eq 1 36590419 20001200
36590458 ite 2 36590457 205 36588857
36590459 ite 2 16590400 36590458 36588857
36590460 eq 1 36590419 20001300
36590461 ite 2 36590460 205 36588860
36590462 ite 2 16590400 36590461 36588860
36590463 eq 1 36590419 20001400
36590464 ite 2 36590463 205 36588863
36590465 ite 2 16590400 36590464 36588863 ; 0x10170(~4): sd t0,-16(gp)
36590800 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36590801 add 2 203 36590800
36590802 ugte 1 36590801 30 ; address >= start of segment
36590803 ult 1 36590801 31 ; address < end of segment
36590804 and 1 36590802 36590803
36590805 sub 2 36590801 30
36590806 slice 6 36590805 6 3
36590807 ite 6 36590804 36590806 8
36590808 ugte 1 36590801 32 ; address >= start of segment
36590809 ult 1 36590801 34 ; address < end of segment
36590810 and 1 36590808 36590809
36590811 sub 2 36590801 36
36590812 slice 6 36590811 6 3
36590813 ite 6 36590810 36590812 36590807
36590814 ugte 1 36590801 35 ; address >= start of segment
36590815 ulte 1 36590801 50 ; address <= end of segment
36590816 and 1 36590814 36590815
36590817 sub 2 36590801 37
36590818 slice 6 36590817 6 3
36590819 ite 6 36590816 36590818 36590813
36590820 ite 2 16590800 36590801 36590420 ; for checking address validity
36590821 eq 1 36590819 20000000
36590822 ite 2 36590821 20000002 20
36590823 eq 1 36590819 20000100
36590824 ite 2 36590823 20000102 36590822
36590825 eq 1 36590819 20000200
36590826 ite 2 36590825 20000202 36590824
36590827 eq 1 36590819 20000300
36590828 ite 2 36590827 20000302 36590826
36590829 eq 1 36590819 20000400
36590830 ite 2 36590829 20000402 36590828
36590831 eq 1 36590819 20000500
36590832 ite 2 36590831 20000502 36590830
36590833 eq 1 36590819 20000600
36590834 ite 2 36590833 20000602 36590832
36590835 eq 1 36590819 20000700
36590836 ite 2 36590835 20000702 36590834
36590837 eq 1 36590819 20000800
36590838 ite 2 36590837 20000802 36590836
36590839 eq 1 36590819 20000900
36590840 ite 2 36590839 20000902 36590838
36590841 eq 1 36590819 20001000
36590842 ite 2 36590841 20001002 36590840
36590843 eq 1 36590819 20001100
36590844 ite 2 36590843 20001102 36590842
36590845 eq 1 36590819 20001200
36590846 ite 2 36590845 20001202 36590844
36590847 eq 1 36590819 20001300
36590848 ite 2 36590847 20001302 36590846
36590849 eq 1 36590819 20001400
36590850 ite 2 36590849 20001402 36590848
36590851 ite 2 16590800 36590850 36589600 ; 0x10174(~6): ld t0,-16(gp)
36591200 ite 2 16591200 200 36577651 ; 0x10178(~6): addi t1,zero,0
36591600 ugte 1 205 30 ; address >= start of segment
36591601 ult 1 205 31 ; address < end of segment
36591602 and 1 36591600 36591601
36591603 sub 2 205 30
36591604 slice 6 36591603 6 3
36591605 ite 6 36591602 36591604 8
36591606 ugte 1 205 32 ; address >= start of segment
36591607 ult 1 205 34 ; address < end of segment
36591608 and 1 36591606 36591607
36591609 sub 2 205 36
36591610 slice 6 36591609 6 3
36591611 ite 6 36591608 36591610 36591605
36591612 ugte 1 205 35 ; address >= start of segment
36591613 ulte 1 205 50 ; address <= end of segment
36591614 and 1 36591612 36591613
36591615 sub 2 205 37
36591616 slice 6 36591615 6 3
36591617 ite 6 36591614 36591616 36591611
36591618 ite 2 16591600 205 36590820 ; for checking address validity
36591619 eq 1 36591617 20000000
36591620 ite 2 36591619 206 36590423
36591621 ite 2 16591600 36591620 36590423
36591622 eq 1 36591617 20000100
36591623 ite 2 36591622 206 36590426
36591624 ite 2 16591600 36591623 36590426
36591625 eq 1 36591617 20000200
36591626 ite 2 36591625 206 36590429
36591627 ite 2 16591600 36591626 36590429
36591628 eq 1 36591617 20000300
36591629 ite 2 36591628 206 36590432
36591630 ite 2 16591600 36591629 36590432
36591631 eq 1 36591617 20000400
36591632 ite 2 36591631 206 36590435
36591633 ite 2 16591600 36591632 36590435
36591634 eq 1 36591617 20000500
36591635 ite 2 36591634 206 36590438
36591636 ite 2 16591600 36591635 36590438
36591637 eq 1 36591617 20000600
36591638 ite 2 36591637 206 36590441
36591639 ite 2 16591600 36591638 36590441
36591640 eq 1 36591617 20000700
36591641 ite 2 36591640 206 36590444
36591642 ite 2 16591600 36591641 36590444
36591643 eq 1 36591617 20000800
36591644 ite 2 36591643 206 36590447
36591645 ite 2 16591600 36591644 36590447
36591646 eq 1 36591617 20000900
36591647 ite 2 36591646 206 36590450
36591648 ite 2 16591600 36591647 36590450
36591649 eq 1 36591617 20001000
36591650 ite 2 36591649 206 36590453
36591651 ite 2 16591600 36591650 36590453
36591652 eq 1 36591617 20001100
36591653 ite 2 36591652 206 36590456
36591654 ite 2 16591600 36591653 36590456
36591655 eq 1 36591617 20001200
36591656 ite 2 36591655 206 36590459
36591657 ite 2 16591600 36591656 36590459
36591658 eq 1 36591617 20001300
36591659 ite 2 36591658 206 36590462
36591660 ite 2 16591600 36591659 36590462
36591661 eq 1 36591617 20001400
36591662 ite 2 36591661 206 36590465
36591663 ite 2 16591600 36591662 36590465 ; 0x1017C(~6): sd t1,0(t0)
36592000 ite 2 16592000 200 36590851 ; 0x10180(~8): addi t0,zero,0
36592400 constd 2 -24 ; 0xFFFFFFFFFFFFFFE8
36592401 add 2 202 36592400
36592402 ite 2 16592400 36592401 36588402 ; 0x10184(~8): addi sp,sp,-24
36592800 ugte 1 202 30 ; address >= start of segment
36592801 ult 1 202 31 ; address < end of segment
36592802 and 1 36592800 36592801
36592803 sub 2 202 30
36592804 slice 6 36592803 6 3
36592805 ite 6 36592802 36592804 8
36592806 ugte 1 202 32 ; address >= start of segment
36592807 ult 1 202 34 ; address < end of segment
36592808 and 1 36592806 36592807
36592809 sub 2 202 36
36592810 slice 6 36592809 6 3
36592811 ite 6 36592808 36592810 36592805
36592812 ugte 1 202 35 ; address >= start of segment
36592813 ulte 1 202 50 ; address <= end of segment
36592814 and 1 36592812 36592813
36592815 sub 2 202 37
36592816 slice 6 36592815 6 3
36592817 ite 6 36592814 36592816 36592811
36592818 ite 2 16592800 202 36591618 ; for checking address validity
36592819 eq 1 36592817 20000000
36592820 ite 2 36592819 205 36591621
36592821 ite 2 16592800 36592820 36591621
36592822 eq 1 36592817 20000100
36592823 ite 2 36592822 205 36591624
36592824 ite 2 16592800 36592823 36591624
36592825 eq 1 36592817 20000200
36592826 ite 2 36592825 205 36591627
36592827 ite 2 16592800 36592826 36591627
36592828 eq 1 36592817 20000300
36592829 ite 2 36592828 205 36591630
36592830 ite 2 16592800 36592829 36591630
36592831 eq 1 36592817 20000400
36592832 ite 2 36592831 205 36591633
36592833 ite 2 16592800 36592832 36591633
36592834 eq 1 36592817 20000500
36592835 ite 2 36592834 205 36591636
36592836 ite 2 16592800 36592835 36591636
36592837 eq 1 36592817 20000600
36592838 ite 2 36592837 205 36591639
36592839 ite 2 16592800 36592838 36591639
36592840 eq 1 36592817 20000700
36592841 ite 2 36592840 205 36591642
36592842 ite 2 16592800 36592841 36591642
36592843 eq 1 36592817 20000800
36592844 ite 2 36592843 205 36591645
36592845 ite 2 16592800 36592844 36591645
36592846 eq 1 36592817 20000900
36592847 ite 2 36592846 205 36591648
36592848 ite 2 16592800 36592847 36591648
36592849 eq 1 36592817 20001000
36592850 ite 2 36592849 205 36591651
36592851 ite 2 16592800 36592850 36591651
36592852 eq 1 36592817 20001100
36592853 ite 2 36592852 205 36591654
36592854 ite 2 16592800 36592853 36591654
36592855 eq 1 36592817 20001200
36592856 ite 2 36592855 205 36591657
36592857 ite 2 16592800 36592856 36591657
36592858 eq 1 36592817 20001300
36592859 ite 2 36592858 205 36591660
36592860 ite 2 16592800 36592859 36591660
36592861 eq 1 36592817 20001400
36592862 ite 2 36592861 205 36591663
36592863 ite 2 16592800 36592862 36591663 ; 0x10188(~8): sd t0,0(sp)
36593200 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36593201 add 2 203 36593200
36593202 ugte 1 36593201 30 ; address >= start of segment
36593203 ult 1 36593201 31 ; address < end of segment
36593204 and 1 36593202 36593203
36593205 sub 2 36593201 30
36593206 slice 6 36593205 6 3
36593207 ite 6 36593204 36593206 8
36593208 ugte 1 36593201 32 ; address >= start of segment
36593209 ult 1 36593201 34 ; address < end of segment
36593210 and 1 36593208 36593209
36593211 sub 2 36593201 36
36593212 slice 6 36593211 6 3
36593213 ite 6 36593210 36593212 36593207
36593214 ugte 1 36593201 35 ; address >= start of segment
36593215 ulte 1 36593201 50 ; address <= end of segment
36593216 and 1 36593214 36593215
36593217 sub 2 36593201 37
36593218 slice 6 36593217 6 3
36593219 ite 6 36593216 36593218 36593213
36593220 ite 2 16593200 36593201 36592818 ; for checking address validity
36593221 eq 1 36593219 20000000
36593222 ite 2 36593221 20000002 20
36593223 eq 1 36593219 20000100
36593224 ite 2 36593223 20000102 36593222
36593225 eq 1 36593219 20000200
36593226 ite 2 36593225 20000202 36593224
36593227 eq 1 36593219 20000300
36593228 ite 2 36593227 20000302 36593226
36593229 eq 1 36593219 20000400
36593230 ite 2 36593229 20000402 36593228
36593231 eq 1 36593219 20000500
36593232 ite 2 36593231 20000502 36593230
36593233 eq 1 36593219 20000600
36593234 ite 2 36593233 20000602 36593232
36593235 eq 1 36593219 20000700
36593236 ite 2 36593235 20000702 36593234
36593237 eq 1 36593219 20000800
36593238 ite 2 36593237 20000802 36593236
36593239 eq 1 36593219 20000900
36593240 ite 2 36593239 20000902 36593238
36593241 eq 1 36593219 20001000
36593242 ite 2 36593241 20001002 36593240
36593243 eq 1 36593219 20001100
36593244 ite 2 36593243 20001102 36593242
36593245 eq 1 36593219 20001200
36593246 ite 2 36593245 20001202 36593244
36593247 eq 1 36593219 20001300
36593248 ite 2 36593247 20001302 36593246
36593249 eq 1 36593219 20001400
36593250 ite 2 36593249 20001402 36593248
36593251 ite 2 16593200 36593250 36592000 ; 0x1018C(~8): ld t0,-16(gp)
36593600 constd 2 8 ; 0x8
36593601 add 2 202 36593600
36593602 ugte 1 36593601 30 ; address >= start of segment
36593603 ult 1 36593601 31 ; address < end of segment
36593604 and 1 36593602 36593603
36593605 sub 2 36593601 30
36593606 slice 6 36593605 6 3
36593607 ite 6 36593604 36593606 8
36593608 ugte 1 36593601 32 ; address >= start of segment
36593609 ult 1 36593601 34 ; address < end of segment
36593610 and 1 36593608 36593609
36593611 sub 2 36593601 36
36593612 slice 6 36593611 6 3
36593613 ite 6 36593610 36593612 36593607
36593614 ugte 1 36593601 35 ; address >= start of segment
36593615 ulte 1 36593601 50 ; address <= end of segment
36593616 and 1 36593614 36593615
36593617 sub 2 36593601 37
36593618 slice 6 36593617 6 3
36593619 ite 6 36593616 36593618 36593613
36593620 ite 2 16593600 36593601 36593220 ; for checking address validity
36593621 eq 1 36593619 20000000
36593622 ite 2 36593621 205 36592821
36593623 ite 2 16593600 36593622 36592821
36593624 eq 1 36593619 20000100
36593625 ite 2 36593624 205 36592824
36593626 ite 2 16593600 36593625 36592824
36593627 eq 1 36593619 20000200
36593628 ite 2 36593627 205 36592827
36593629 ite 2 16593600 36593628 36592827
36593630 eq 1 36593619 20000300
36593631 ite 2 36593630 205 36592830
36593632 ite 2 16593600 36593631 36592830
36593633 eq 1 36593619 20000400
36593634 ite 2 36593633 205 36592833
36593635 ite 2 16593600 36593634 36592833
36593636 eq 1 36593619 20000500
36593637 ite 2 36593636 205 36592836
36593638 ite 2 16593600 36593637 36592836
36593639 eq 1 36593619 20000600
36593640 ite 2 36593639 205 36592839
36593641 ite 2 16593600 36593640 36592839
36593642 eq 1 36593619 20000700
36593643 ite 2 36593642 205 36592842
36593644 ite 2 16593600 36593643 36592842
36593645 eq 1 36593619 20000800
36593646 ite 2 36593645 205 36592845
36593647 ite 2 16593600 36593646 36592845
36593648 eq 1 36593619 20000900
36593649 ite 2 36593648 205 36592848
36593650 ite 2 16593600 36593649 36592848
36593651 eq 1 36593619 20001000
36593652 ite 2 36593651 205 36592851
36593653 ite 2 16593600 36593652 36592851
36593654 eq 1 36593619 20001100
36593655 ite 2 36593654 205 36592854
36593656 ite 2 16593600 36593655 36592854
36593657 eq 1 36593619 20001200
36593658 ite 2 36593657 205 36592857
36593659 ite 2 16593600 36593658 36592857
36593660 eq 1 36593619 20001300
36593661 ite 2 36593660 205 36592860
36593662 ite 2 16593600 36593661 36592860
36593663 eq 1 36593619 20001400
36593664 ite 2 36593663 205 36592863
36593665 ite 2 16593600 36593664 36592863 ; 0x10190(~8): sd t0,8(sp)
36594000 constd 2 1 ; 0x1
36594001 ite 2 16594000 36594000 36593251 ; 0x10194(~8): addi t0,zero,1
36594400 constd 2 16 ; 0x10
36594401 add 2 202 36594400
36594402 ugte 1 36594401 30 ; address >= start of segment
36594403 ult 1 36594401 31 ; address < end of segment
36594404 and 1 36594402 36594403
36594405 sub 2 36594401 30
36594406 slice 6 36594405 6 3
36594407 ite 6 36594404 36594406 8
36594408 ugte 1 36594401 32 ; address >= start of segment
36594409 ult 1 36594401 34 ; address < end of segment
36594410 and 1 36594408 36594409
36594411 sub 2 36594401 36
36594412 slice 6 36594411 6 3
36594413 ite 6 36594410 36594412 36594407
36594414 ugte 1 36594401 35 ; address >= start of segment
36594415 ulte 1 36594401 50 ; address <= end of segment
36594416 and 1 36594414 36594415
36594417 sub 2 36594401 37
36594418 slice 6 36594417 6 3
36594419 ite 6 36594416 36594418 36594413
36594420 ite 2 16594400 36594401 36593620 ; for checking address validity
36594421 eq 1 36594419 20000000
36594422 ite 2 36594421 205 36593623
36594423 ite 2 16594400 36594422 36593623
36594424 eq 1 36594419 20000100
36594425 ite 2 36594424 205 36593626
36594426 ite 2 16594400 36594425 36593626
36594427 eq 1 36594419 20000200
36594428 ite 2 36594427 205 36593629
36594429 ite 2 16594400 36594428 36593629
36594430 eq 1 36594419 20000300
36594431 ite 2 36594430 205 36593632
36594432 ite 2 16594400 36594431 36593632
36594433 eq 1 36594419 20000400
36594434 ite 2 36594433 205 36593635
36594435 ite 2 16594400 36594434 36593635
36594436 eq 1 36594419 20000500
36594437 ite 2 36594436 205 36593638
36594438 ite 2 16594400 36594437 36593638
36594439 eq 1 36594419 20000600
36594440 ite 2 36594439 205 36593641
36594441 ite 2 16594400 36594440 36593641
36594442 eq 1 36594419 20000700
36594443 ite 2 36594442 205 36593644
36594444 ite 2 16594400 36594443 36593644
36594445 eq 1 36594419 20000800
36594446 ite 2 36594445 205 36593647
36594447 ite 2 16594400 36594446 36593647
36594448 eq 1 36594419 20000900
36594449 ite 2 36594448 205 36593650
36594450 ite 2 16594400 36594449 36593650
36594451 eq 1 36594419 20001000
36594452 ite 2 36594451 205 36593653
36594453 ite 2 16594400 36594452 36593653
36594454 eq 1 36594419 20001100
36594455 ite 2 36594454 205 36593656
36594456 ite 2 16594400 36594455 36593656
36594457 eq 1 36594419 20001200
36594458 ite 2 36594457 205 36593659
36594459 ite 2 16594400 36594458 36593659
36594460 eq 1 36594419 20001300
36594461 ite 2 36594460 205 36593662
36594462 ite 2 16594400 36594461 36593662
36594463 eq 1 36594419 20001400
36594464 ite 2 36594463 205 36593665
36594465 ite 2 16594400 36594464 36593665 ; 0x10198(~8): sd t0,16(sp)
36594800 constd 2 65952 ; 0x101A0
36594801 ite 2 16594800 36594800 36589201 ; 0x1019C(~8): jal ra,-77
36595200 ite 2 16595200 200 36590000 ; 0x101A0(~8): addi a0,zero,0
36595600 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36595601 add 2 203 36595600
36595602 ugte 1 36595601 30 ; address >= start of segment
36595603 ult 1 36595601 31 ; address < end of segment
36595604 and 1 36595602 36595603
36595605 sub 2 36595601 30
36595606 slice 6 36595605 6 3
36595607 ite 6 36595604 36595606 8
36595608 ugte 1 36595601 32 ; address >= start of segment
36595609 ult 1 36595601 34 ; address < end of segment
36595610 and 1 36595608 36595609
36595611 sub 2 36595601 36
36595612 slice 6 36595611 6 3
36595613 ite 6 36595610 36595612 36595607
36595614 ugte 1 36595601 35 ; address >= start of segment
36595615 ulte 1 36595601 50 ; address <= end of segment
36595616 and 1 36595614 36595615
36595617 sub 2 36595601 37
36595618 slice 6 36595617 6 3
36595619 ite 6 36595616 36595618 36595613
36595620 ite 2 16595600 36595601 36594420 ; for checking address validity
36595621 eq 1 36595619 20000000
36595622 ite 2 36595621 20000002 20
36595623 eq 1 36595619 20000100
36595624 ite 2 36595623 20000102 36595622
36595625 eq 1 36595619 20000200
36595626 ite 2 36595625 20000202 36595624
36595627 eq 1 36595619 20000300
36595628 ite 2 36595627 20000302 36595626
36595629 eq 1 36595619 20000400
36595630 ite 2 36595629 20000402 36595628
36595631 eq 1 36595619 20000500
36595632 ite 2 36595631 20000502 36595630
36595633 eq 1 36595619 20000600
36595634 ite 2 36595633 20000602 36595632
36595635 eq 1 36595619 20000700
36595636 ite 2 36595635 20000702 36595634
36595637 eq 1 36595619 20000800
36595638 ite 2 36595637 20000802 36595636
36595639 eq 1 36595619 20000900
36595640 ite 2 36595639 20000902 36595638
36595641 eq 1 36595619 20001000
36595642 ite 2 36595641 20001002 36595640
36595643 eq 1 36595619 20001100
36595644 ite 2 36595643 20001102 36595642
36595645 eq 1 36595619 20001200
36595646 ite 2 36595645 20001202 36595644
36595647 eq 1 36595619 20001300
36595648 ite 2 36595647 20001302 36595646
36595649 eq 1 36595619 20001400
36595650 ite 2 36595649 20001402 36595648
36595651 ite 2 16595600 36595650 36594001 ; 0x101A4(~10): ld t0,-16(gp)
36596000 ugte 1 205 30 ; address >= start of segment
36596001 ult 1 205 31 ; address < end of segment
36596002 and 1 36596000 36596001
36596003 sub 2 205 30
36596004 slice 6 36596003 6 3
36596005 ite 6 36596002 36596004 8
36596006 ugte 1 205 32 ; address >= start of segment
36596007 ult 1 205 34 ; address < end of segment
36596008 and 1 36596006 36596007
36596009 sub 2 205 36
36596010 slice 6 36596009 6 3
36596011 ite 6 36596008 36596010 36596005
36596012 ugte 1 205 35 ; address >= start of segment
36596013 ulte 1 205 50 ; address <= end of segment
36596014 and 1 36596012 36596013
36596015 sub 2 205 37
36596016 slice 6 36596015 6 3
36596017 ite 6 36596014 36596016 36596011
36596018 ite 2 16596000 205 36595620 ; for checking address validity
36596019 eq 1 36596017 20000000
36596020 ite 2 36596019 20000002 20
36596021 eq 1 36596017 20000100
36596022 ite 2 36596021 20000102 36596020
36596023 eq 1 36596017 20000200
36596024 ite 2 36596023 20000202 36596022
36596025 eq 1 36596017 20000300
36596026 ite 2 36596025 20000302 36596024
36596027 eq 1 36596017 20000400
36596028 ite 2 36596027 20000402 36596026
36596029 eq 1 36596017 20000500
36596030 ite 2 36596029 20000502 36596028
36596031 eq 1 36596017 20000600
36596032 ite 2 36596031 20000602 36596030
36596033 eq 1 36596017 20000700
36596034 ite 2 36596033 20000702 36596032
36596035 eq 1 36596017 20000800
36596036 ite 2 36596035 20000802 36596034
36596037 eq 1 36596017 20000900
36596038 ite 2 36596037 20000902 36596036
36596039 eq 1 36596017 20001000
36596040 ite 2 36596039 20001002 36596038
36596041 eq 1 36596017 20001100
36596042 ite 2 36596041 20001102 36596040
36596043 eq 1 36596017 20001200
36596044 ite 2 36596043 20001202 36596042
36596045 eq 1 36596017 20001300
36596046 ite 2 36596045 20001302 36596044
36596047 eq 1 36596017 20001400
36596048 ite 2 36596047 20001402 36596046
36596049 ite 2 16596000 36596048 36595651 ; 0x101A8(~10): ld t0,0(t0)
36596400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36596401 add 2 208 36596400
36596402 ugte 1 36596401 30 ; address >= start of segment
36596403 ult 1 36596401 31 ; address < end of segment
36596404 and 1 36596402 36596403
36596405 sub 2 36596401 30
36596406 slice 6 36596405 6 3
36596407 ite 6 36596404 36596406 8
36596408 ugte 1 36596401 32 ; address >= start of segment
36596409 ult 1 36596401 34 ; address < end of segment
36596410 and 1 36596408 36596409
36596411 sub 2 36596401 36
36596412 slice 6 36596411 6 3
36596413 ite 6 36596410 36596412 36596407
36596414 ugte 1 36596401 35 ; address >= start of segment
36596415 ulte 1 36596401 50 ; address <= end of segment
36596416 and 1 36596414 36596415
36596417 sub 2 36596401 37
36596418 slice 6 36596417 6 3
36596419 ite 6 36596416 36596418 36596413
36596420 ite 2 16596400 36596401 36596018 ; for checking address validity
36596421 eq 1 36596419 20000000
36596422 ite 2 36596421 205 36594423
36596423 ite 2 16596400 36596422 36594423
36596424 eq 1 36596419 20000100
36596425 ite 2 36596424 205 36594426
36596426 ite 2 16596400 36596425 36594426
36596427 eq 1 36596419 20000200
36596428 ite 2 36596427 205 36594429
36596429 ite 2 16596400 36596428 36594429
36596430 eq 1 36596419 20000300
36596431 ite 2 36596430 205 36594432
36596432 ite 2 16596400 36596431 36594432
36596433 eq 1 36596419 20000400
36596434 ite 2 36596433 205 36594435
36596435 ite 2 16596400 36596434 36594435
36596436 eq 1 36596419 20000500
36596437 ite 2 36596436 205 36594438
36596438 ite 2 16596400 36596437 36594438
36596439 eq 1 36596419 20000600
36596440 ite 2 36596439 205 36594441
36596441 ite 2 16596400 36596440 36594441
36596442 eq 1 36596419 20000700
36596443 ite 2 36596442 205 36594444
36596444 ite 2 16596400 36596443 36594444
36596445 eq 1 36596419 20000800
36596446 ite 2 36596445 205 36594447
36596447 ite 2 16596400 36596446 36594447
36596448 eq 1 36596419 20000900
36596449 ite 2 36596448 205 36594450
36596450 ite 2 16596400 36596449 36594450
36596451 eq 1 36596419 20001000
36596452 ite 2 36596451 205 36594453
36596453 ite 2 16596400 36596452 36594453
36596454 eq 1 36596419 20001100
36596455 ite 2 36596454 205 36594456
36596456 ite 2 16596400 36596455 36594456
36596457 eq 1 36596419 20001200
36596458 ite 2 36596457 205 36594459
36596459 ite 2 16596400 36596458 36594459
36596460 eq 1 36596419 20001300
36596461 ite 2 36596460 205 36594462
36596462 ite 2 16596400 36596461 36594462
36596463 eq 1 36596419 20001400
36596464 ite 2 36596463 205 36594465
36596465 ite 2 16596400 36596464 36594465 ; 0x101AC(~10): sd t0,-8(s0)
36596800 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36596801 add 2 208 36596800
36596802 ugte 1 36596801 30 ; address >= start of segment
36596803 ult 1 36596801 31 ; address < end of segment
36596804 and 1 36596802 36596803
36596805 sub 2 36596801 30
36596806 slice 6 36596805 6 3
36596807 ite 6 36596804 36596806 8
36596808 ugte 1 36596801 32 ; address >= start of segment
36596809 ult 1 36596801 34 ; address < end of segment
36596810 and 1 36596808 36596809
36596811 sub 2 36596801 36
36596812 slice 6 36596811 6 3
36596813 ite 6 36596810 36596812 36596807
36596814 ugte 1 36596801 35 ; address >= start of segment
36596815 ulte 1 36596801 50 ; address <= end of segment
36596816 and 1 36596814 36596815
36596817 sub 2 36596801 37
36596818 slice 6 36596817 6 3
36596819 ite 6 36596816 36596818 36596813
36596820 ite 2 16596800 36596801 36596420 ; for checking address validity
36596821 eq 1 36596819 20000000
36596822 ite 2 36596821 20000002 20
36596823 eq 1 36596819 20000100
36596824 ite 2 36596823 20000102 36596822
36596825 eq 1 36596819 20000200
36596826 ite 2 36596825 20000202 36596824
36596827 eq 1 36596819 20000300
36596828 ite 2 36596827 20000302 36596826
36596829 eq 1 36596819 20000400
36596830 ite 2 36596829 20000402 36596828
36596831 eq 1 36596819 20000500
36596832 ite 2 36596831 20000502 36596830
36596833 eq 1 36596819 20000600
36596834 ite 2 36596833 20000602 36596832
36596835 eq 1 36596819 20000700
36596836 ite 2 36596835 20000702 36596834
36596837 eq 1 36596819 20000800
36596838 ite 2 36596837 20000802 36596836
36596839 eq 1 36596819 20000900
36596840 ite 2 36596839 20000902 36596838
36596841 eq 1 36596819 20001000
36596842 ite 2 36596841 20001002 36596840
36596843 eq 1 36596819 20001100
36596844 ite 2 36596843 20001102 36596842
36596845 eq 1 36596819 20001200
36596846 ite 2 36596845 20001202 36596844
36596847 eq 1 36596819 20001300
36596848 ite 2 36596847 20001302 36596846
36596849 eq 1 36596819 20001400
36596850 ite 2 36596849 20001402 36596848
36596851 ite 2 16596800 36596850 36596049 ; 0x101B0(~12): ld t0,-8(s0)
36597200 constd 2 48 ; 0x30
36597201 ite 2 16597200 36597200 36591200 ; 0x101B4(~12): addi t1,zero,48
36597600 ult 1 206 205
36597601 uext 2 36597600 63
36597602 ite 2 16597600 36597601 36596851 ; 0x101B8(~12): sltu t0,t1,t0
36598000 eq 1 205 200 ; 0x101BC(~12): beq t0,zero,6
36598001 not 1 36598000
36598400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36598401 add 2 208 36598400
36598402 ugte 1 36598401 30 ; address >= start of segment
36598403 ult 1 36598401 31 ; address < end of segment
36598404 and 1 36598402 36598403
36598405 sub 2 36598401 30
36598406 slice 6 36598405 6 3
36598407 ite 6 36598404 36598406 8
36598408 ugte 1 36598401 32 ; address >= start of segment
36598409 ult 1 36598401 34 ; address < end of segment
36598410 and 1 36598408 36598409
36598411 sub 2 36598401 36
36598412 slice 6 36598411 6 3
36598413 ite 6 36598410 36598412 36598407
36598414 ugte 1 36598401 35 ; address >= start of segment
36598415 ulte 1 36598401 50 ; address <= end of segment
36598416 and 1 36598414 36598415
36598417 sub 2 36598401 37
36598418 slice 6 36598417 6 3
36598419 ite 6 36598416 36598418 36598413
36598420 ite 2 16598400 36598401 36596820 ; for checking address validity
36598421 eq 1 36598419 20000000
36598422 ite 2 36598421 20000002 20
36598423 eq 1 36598419 20000100
36598424 ite 2 36598423 20000102 36598422
36598425 eq 1 36598419 20000200
36598426 ite 2 36598425 20000202 36598424
36598427 eq 1 36598419 20000300
36598428 ite 2 36598427 20000302 36598426
36598429 eq 1 36598419 20000400
36598430 ite 2 36598429 20000402 36598428
36598431 eq 1 36598419 20000500
36598432 ite 2 36598431 20000502 36598430
36598433 eq 1 36598419 20000600
36598434 ite 2 36598433 20000602 36598432
36598435 eq 1 36598419 20000700
36598436 ite 2 36598435 20000702 36598434
36598437 eq 1 36598419 20000800
36598438 ite 2 36598437 20000802 36598436
36598439 eq 1 36598419 20000900
36598440 ite 2 36598439 20000902 36598438
36598441 eq 1 36598419 20001000
36598442 ite 2 36598441 20001002 36598440
36598443 eq 1 36598419 20001100
36598444 ite 2 36598443 20001102 36598442
36598445 eq 1 36598419 20001200
36598446 ite 2 36598445 20001202 36598444
36598447 eq 1 36598419 20001300
36598448 ite 2 36598447 20001302 36598446
36598449 eq 1 36598419 20001400
36598450 ite 2 36598449 20001402 36598448
36598451 ite 2 16598400 36598450 36597602 ; 0x101C0(~13): ld t0,-8(s0)
36598800 constd 2 1 ; 0x1
36598801 ite 2 16598800 36598800 36597201 ; 0x101C4(~13): addi t1,zero,1
36599200 sub 2 205 206
36599201 ite 2 16599200 36599200 36598451 ; 0x101C8(~13): sub t0,t0,t1
36599600 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36599601 add 2 208 36599600
36599602 ugte 1 36599601 30 ; address >= start of segment
36599603 ult 1 36599601 31 ; address < end of segment
36599604 and 1 36599602 36599603
36599605 sub 2 36599601 30
36599606 slice 6 36599605 6 3
36599607 ite 6 36599604 36599606 8
36599608 ugte 1 36599601 32 ; address >= start of segment
36599609 ult 1 36599601 34 ; address < end of segment
36599610 and 1 36599608 36599609
36599611 sub 2 36599601 36
36599612 slice 6 36599611 6 3
36599613 ite 6 36599610 36599612 36599607
36599614 ugte 1 36599601 35 ; address >= start of segment
36599615 ulte 1 36599601 50 ; address <= end of segment
36599616 and 1 36599614 36599615
36599617 sub 2 36599601 37
36599618 slice 6 36599617 6 3
36599619 ite 6 36599616 36599618 36599613
36599620 ite 2 16599600 36599601 36598420 ; for checking address validity
36599621 eq 1 36599619 20000000
36599622 ite 2 36599621 205 36596423
36599623 ite 2 16599600 36599622 36596423
36599624 eq 1 36599619 20000100
36599625 ite 2 36599624 205 36596426
36599626 ite 2 16599600 36599625 36596426
36599627 eq 1 36599619 20000200
36599628 ite 2 36599627 205 36596429
36599629 ite 2 16599600 36599628 36596429
36599630 eq 1 36599619 20000300
36599631 ite 2 36599630 205 36596432
36599632 ite 2 16599600 36599631 36596432
36599633 eq 1 36599619 20000400
36599634 ite 2 36599633 205 36596435
36599635 ite 2 16599600 36599634 36596435
36599636 eq 1 36599619 20000500
36599637 ite 2 36599636 205 36596438
36599638 ite 2 16599600 36599637 36596438
36599639 eq 1 36599619 20000600
36599640 ite 2 36599639 205 36596441
36599641 ite 2 16599600 36599640 36596441
36599642 eq 1 36599619 20000700
36599643 ite 2 36599642 205 36596444
36599644 ite 2 16599600 36599643 36596444
36599645 eq 1 36599619 20000800
36599646 ite 2 36599645 205 36596447
36599647 ite 2 16599600 36599646 36596447
36599648 eq 1 36599619 20000900
36599649 ite 2 36599648 205 36596450
36599650 ite 2 16599600 36599649 36596450
36599651 eq 1 36599619 20001000
36599652 ite 2 36599651 205 36596453
36599653 ite 2 16599600 36599652 36596453
36599654 eq 1 36599619 20001100
36599655 ite 2 36599654 205 36596456
36599656 ite 2 16599600 36599655 36596456
36599657 eq 1 36599619 20001200
36599658 ite 2 36599657 205 36596459
36599659 ite 2 16599600 36599658 36596459
36599660 eq 1 36599619 20001300
36599661 ite 2 36599660 205 36596462
36599662 ite 2 16599600 36599661 36596462
36599663 eq 1 36599619 20001400
36599664 ite 2 36599663 205 36596465
36599665 ite 2 16599600 36599664 36596465 ; 0x101CC(~13): sd t0,-8(s0)
36600400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36600401 add 2 208 36600400
36600402 ugte 1 36600401 30 ; address >= start of segment
36600403 ult 1 36600401 31 ; address < end of segment
36600404 and 1 36600402 36600403
36600405 sub 2 36600401 30
36600406 slice 6 36600405 6 3
36600407 ite 6 36600404 36600406 8
36600408 ugte 1 36600401 32 ; address >= start of segment
36600409 ult 1 36600401 34 ; address < end of segment
36600410 and 1 36600408 36600409
36600411 sub 2 36600401 36
36600412 slice 6 36600411 6 3
36600413 ite 6 36600410 36600412 36600407
36600414 ugte 1 36600401 35 ; address >= start of segment
36600415 ulte 1 36600401 50 ; address <= end of segment
36600416 and 1 36600414 36600415
36600417 sub 2 36600401 37
36600418 slice 6 36600417 6 3
36600419 ite 6 36600416 36600418 36600413
36600420 ite 2 16600400 36600401 36599620 ; for checking address validity
36600421 eq 1 36600419 20000000
36600422 ite 2 36600421 20000002 20
36600423 eq 1 36600419 20000100
36600424 ite 2 36600423 20000102 36600422
36600425 eq 1 36600419 20000200
36600426 ite 2 36600425 20000202 36600424
36600427 eq 1 36600419 20000300
36600428 ite 2 36600427 20000302 36600426
36600429 eq 1 36600419 20000400
36600430 ite 2 36600429 20000402 36600428
36600431 eq 1 36600419 20000500
36600432 ite 2 36600431 20000502 36600430
36600433 eq 1 36600419 20000600
36600434 ite 2 36600433 20000602 36600432
36600435 eq 1 36600419 20000700
36600436 ite 2 36600435 20000702 36600434
36600437 eq 1 36600419 20000800
36600438 ite 2 36600437 20000802 36600436
36600439 eq 1 36600419 20000900
36600440 ite 2 36600439 20000902 36600438
36600441 eq 1 36600419 20001000
36600442 ite 2 36600441 20001002 36600440
36600443 eq 1 36600419 20001100
36600444 ite 2 36600443 20001102 36600442
36600445 eq 1 36600419 20001200
36600446 ite 2 36600445 20001202 36600444
36600447 eq 1 36600419 20001300
36600448 ite 2 36600447 20001302 36600446
36600449 eq 1 36600419 20001400
36600450 ite 2 36600449 20001402 36600448
36600451 ite 2 16600400 36600450 36599201 ; 0x101D4(~15): ld t0,-8(s0)
36600800 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36600801 add 2 203 36600800
36600802 ugte 1 36600801 30 ; address >= start of segment
36600803 ult 1 36600801 31 ; address < end of segment
36600804 and 1 36600802 36600803
36600805 sub 2 36600801 30
36600806 slice 6 36600805 6 3
36600807 ite 6 36600804 36600806 8
36600808 ugte 1 36600801 32 ; address >= start of segment
36600809 ult 1 36600801 34 ; address < end of segment
36600810 and 1 36600808 36600809
36600811 sub 2 36600801 36
36600812 slice 6 36600811 6 3
36600813 ite 6 36600810 36600812 36600807
36600814 ugte 1 36600801 35 ; address >= start of segment
36600815 ulte 1 36600801 50 ; address <= end of segment
36600816 and 1 36600814 36600815
36600817 sub 2 36600801 37
36600818 slice 6 36600817 6 3
36600819 ite 6 36600816 36600818 36600813
36600820 ite 2 16600800 36600801 36600420 ; for checking address validity
36600821 eq 1 36600819 20000000
36600822 ite 2 36600821 20000002 20
36600823 eq 1 36600819 20000100
36600824 ite 2 36600823 20000102 36600822
36600825 eq 1 36600819 20000200
36600826 ite 2 36600825 20000202 36600824
36600827 eq 1 36600819 20000300
36600828 ite 2 36600827 20000302 36600826
36600829 eq 1 36600819 20000400
36600830 ite 2 36600829 20000402 36600828
36600831 eq 1 36600819 20000500
36600832 ite 2 36600831 20000502 36600830
36600833 eq 1 36600819 20000600
36600834 ite 2 36600833 20000602 36600832
36600835 eq 1 36600819 20000700
36600836 ite 2 36600835 20000702 36600834
36600837 eq 1 36600819 20000800
36600838 ite 2 36600837 20000802 36600836
36600839 eq 1 36600819 20000900
36600840 ite 2 36600839 20000902 36600838
36600841 eq 1 36600819 20001000
36600842 ite 2 36600841 20001002 36600840
36600843 eq 1 36600819 20001100
36600844 ite 2 36600843 20001102 36600842
36600845 eq 1 36600819 20001200
36600846 ite 2 36600845 20001202 36600844
36600847 eq 1 36600819 20001300
36600848 ite 2 36600847 20001302 36600846
36600849 eq 1 36600819 20001400
36600850 ite 2 36600849 20001402 36600848
36600851 ite 2 16600800 36600850 36598801 ; 0x101D8(~15): ld t1,-16(gp)
36601200 ugte 1 206 30 ; address >= start of segment
36601201 ult 1 206 31 ; address < end of segment
36601202 and 1 36601200 36601201
36601203 sub 2 206 30
36601204 slice 6 36601203 6 3
36601205 ite 6 36601202 36601204 8
36601206 ugte 1 206 32 ; address >= start of segment
36601207 ult 1 206 34 ; address < end of segment
36601208 and 1 36601206 36601207
36601209 sub 2 206 36
36601210 slice 6 36601209 6 3
36601211 ite 6 36601208 36601210 36601205
36601212 ugte 1 206 35 ; address >= start of segment
36601213 ulte 1 206 50 ; address <= end of segment
36601214 and 1 36601212 36601213
36601215 sub 2 206 37
36601216 slice 6 36601215 6 3
36601217 ite 6 36601214 36601216 36601211
36601218 ite 2 16601200 206 36600820 ; for checking address validity
36601219 eq 1 36601217 20000000
36601220 ite 2 36601219 20000002 20
36601221 eq 1 36601217 20000100
36601222 ite 2 36601221 20000102 36601220
36601223 eq 1 36601217 20000200
36601224 ite 2 36601223 20000202 36601222
36601225 eq 1 36601217 20000300
36601226 ite 2 36601225 20000302 36601224
36601227 eq 1 36601217 20000400
36601228 ite 2 36601227 20000402 36601226
36601229 eq 1 36601217 20000500
36601230 ite 2 36601229 20000502 36601228
36601231 eq 1 36601217 20000600
36601232 ite 2 36601231 20000602 36601230
36601233 eq 1 36601217 20000700
36601234 ite 2 36601233 20000702 36601232
36601235 eq 1 36601217 20000800
36601236 ite 2 36601235 20000802 36601234
36601237 eq 1 36601217 20000900
36601238 ite 2 36601237 20000902 36601236
36601239 eq 1 36601217 20001000
36601240 ite 2 36601239 20001002 36601238
36601241 eq 1 36601217 20001100
36601242 ite 2 36601241 20001102 36601240
36601243 eq 1 36601217 20001200
36601244 ite 2 36601243 20001202 36601242
36601245 eq 1 36601217 20001300
36601246 ite 2 36601245 20001302 36601244
36601247 eq 1 36601217 20001400
36601248 ite 2 36601247 20001402 36601246
36601249 ite 2 16601200 36601248 36600851 ; 0x101DC(~15): ld t1,0(t1)
36601600 constd 2 1 ; 0x1
36601601 ite 2 16601600 36601600 207 ; 0x101E0(~15): addi t2,zero,1
36602000 sub 2 206 207
36602001 ite 2 16602000 36602000 36601249 ; 0x101E4(~15): sub t1,t1,t2
36602400 sub 2 206 205
36602401 ite 2 16602400 36602400 36600451 ; 0x101E8(~15): sub t0,t1,t0
36602800 constd 2 1 ; 0x1
36602801 ite 2 16602800 36602800 36602001 ; 0x101EC(~15): addi t1,zero,1
36603200 ult 1 205 206
36603201 uext 2 36603200 63
36603202 ite 2 16603200 36603201 36602401 ; 0x101F0(~15): sltu t0,t0,t1
36603600 eq 1 205 200 ; 0x101F4(~15): beq t0,zero,8
36603601 not 1 36603600
36604000 constd 2 -16 ; 0xFFFFFFFFFFFFFFF0
36604001 add 2 203 36604000
36604002 ugte 1 36604001 30 ; address >= start of segment
36604003 ult 1 36604001 31 ; address < end of segment
36604004 and 1 36604002 36604003
36604005 sub 2 36604001 30
36604006 slice 6 36604005 6 3
36604007 ite 6 36604004 36604006 8
36604008 ugte 1 36604001 32 ; address >= start of segment
36604009 ult 1 36604001 34 ; address < end of segment
36604010 and 1 36604008 36604009
36604011 sub 2 36604001 36
36604012 slice 6 36604011 6 3
36604013 ite 6 36604010 36604012 36604007
36604014 ugte 1 36604001 35 ; address >= start of segment
36604015 ulte 1 36604001 50 ; address <= end of segment
36604016 and 1 36604014 36604015
36604017 sub 2 36604001 37
36604018 slice 6 36604017 6 3
36604019 ite 6 36604016 36604018 36604013
36604020 ite 2 16604000 36604001 36601218 ; for checking address validity
36604021 eq 1 36604019 20000000
36604022 ite 2 36604021 20000002 20
36604023 eq 1 36604019 20000100
36604024 ite 2 36604023 20000102 36604022
36604025 eq 1 36604019 20000200
36604026 ite 2 36604025 20000202 36604024
36604027 eq 1 36604019 20000300
36604028 ite 2 36604027 20000302 36604026
36604029 eq 1 36604019 20000400
36604030 ite 2 36604029 20000402 36604028
36604031 eq 1 36604019 20000500
36604032 ite 2 36604031 20000502 36604030
36604033 eq 1 36604019 20000600
36604034 ite 2 36604033 20000602 36604032
36604035 eq 1 36604019 20000700
36604036 ite 2 36604035 20000702 36604034
36604037 eq 1 36604019 20000800
36604038 ite 2 36604037 20000802 36604036
36604039 eq 1 36604019 20000900
36604040 ite 2 36604039 20000902 36604038
36604041 eq 1 36604019 20001000
36604042 ite 2 36604041 20001002 36604040
36604043 eq 1 36604019 20001100
36604044 ite 2 36604043 20001102 36604042
36604045 eq 1 36604019 20001200
36604046 ite 2 36604045 20001202 36604044
36604047 eq 1 36604019 20001300
36604048 ite 2 36604047 20001302 36604046
36604049 eq 1 36604019 20001400
36604050 ite 2 36604049 20001402 36604048
36604051 ite 2 16604000 36604050 36603202 ; 0x101F8(~17): ld t0,-16(gp)
36604400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36604401 add 2 208 36604400
36604402 ugte 1 36604401 30 ; address >= start of segment
36604403 ult 1 36604401 31 ; address < end of segment
36604404 and 1 36604402 36604403
36604405 sub 2 36604401 30
36604406 slice 6 36604405 6 3
36604407 ite 6 36604404 36604406 8
36604408 ugte 1 36604401 32 ; address >= start of segment
36604409 ult 1 36604401 34 ; address < end of segment
36604410 and 1 36604408 36604409
36604411 sub 2 36604401 36
36604412 slice 6 36604411 6 3
36604413 ite 6 36604410 36604412 36604407
36604414 ugte 1 36604401 35 ; address >= start of segment
36604415 ulte 1 36604401 50 ; address <= end of segment
36604416 and 1 36604414 36604415
36604417 sub 2 36604401 37
36604418 slice 6 36604417 6 3
36604419 ite 6 36604416 36604418 36604413
36604420 ite 2 16604400 36604401 36604020 ; for checking address validity
36604421 eq 1 36604419 20000000
36604422 ite 2 36604421 20000002 20
36604423 eq 1 36604419 20000100
36604424 ite 2 36604423 20000102 36604422
36604425 eq 1 36604419 20000200
36604426 ite 2 36604425 20000202 36604424
36604427 eq 1 36604419 20000300
36604428 ite 2 36604427 20000302 36604426
36604429 eq 1 36604419 20000400
36604430 ite 2 36604429 20000402 36604428
36604431 eq 1 36604419 20000500
36604432 ite 2 36604431 20000502 36604430
36604433 eq 1 36604419 20000600
36604434 ite 2 36604433 20000602 36604432
36604435 eq 1 36604419 20000700
36604436 ite 2 36604435 20000702 36604434
36604437 eq 1 36604419 20000800
36604438 ite 2 36604437 20000802 36604436
36604439 eq 1 36604419 20000900
36604440 ite 2 36604439 20000902 36604438
36604441 eq 1 36604419 20001000
36604442 ite 2 36604441 20001002 36604440
36604443 eq 1 36604419 20001100
36604444 ite 2 36604443 20001102 36604442
36604445 eq 1 36604419 20001200
36604446 ite 2 36604445 20001202 36604444
36604447 eq 1 36604419 20001300
36604448 ite 2 36604447 20001302 36604446
36604449 eq 1 36604419 20001400
36604450 ite 2 36604449 20001402 36604448
36604451 ite 2 16604400 36604450 36602801 ; 0x101FC(~17): ld t1,-8(s0)
36604800 constd 2 8 ; 0x8
36604801 ite 2 16604800 36604800 36601601 ; 0x10200(~17): addi t2,zero,8
36605200 mul 2 206 207
36605201 ite 2 16605200 36605200 36604451 ; 0x10204(~17): mul t1,t1,t2
36605600 add 2 205 206
36605601 ite 2 16605600 36605600 36604051 ; 0x10208(~17): add t0,t0,t1
36606000 ugte 1 205 30 ; address >= start of segment
36606001 ult 1 205 31 ; address < end of segment
36606002 and 1 36606000 36606001
36606003 sub 2 205 30
36606004 slice 6 36606003 6 3
36606005 ite 6 36606002 36606004 8
36606006 ugte 1 205 32 ; address >= start of segment
36606007 ult 1 205 34 ; address < end of segment
36606008 and 1 36606006 36606007
36606009 sub 2 205 36
36606010 slice 6 36606009 6 3
36606011 ite 6 36606008 36606010 36606005
36606012 ugte 1 205 35 ; address >= start of segment
36606013 ulte 1 205 50 ; address <= end of segment
36606014 and 1 36606012 36606013
36606015 sub 2 205 37
36606016 slice 6 36606015 6 3
36606017 ite 6 36606014 36606016 36606011
36606018 ite 2 16606000 205 36604420 ; for checking address validity
36606019 eq 1 36606017 20000000
36606020 ite 2 36606019 20000002 20
36606021 eq 1 36606017 20000100
36606022 ite 2 36606021 20000102 36606020
36606023 eq 1 36606017 20000200
36606024 ite 2 36606023 20000202 36606022
36606025 eq 1 36606017 20000300
36606026 ite 2 36606025 20000302 36606024
36606027 eq 1 36606017 20000400
36606028 ite 2 36606027 20000402 36606026
36606029 eq 1 36606017 20000500
36606030 ite 2 36606029 20000502 36606028
36606031 eq 1 36606017 20000600
36606032 ite 2 36606031 20000602 36606030
36606033 eq 1 36606017 20000700
36606034 ite 2 36606033 20000702 36606032
36606035 eq 1 36606017 20000800
36606036 ite 2 36606035 20000802 36606034
36606037 eq 1 36606017 20000900
36606038 ite 2 36606037 20000902 36606036
36606039 eq 1 36606017 20001000
36606040 ite 2 36606039 20001002 36606038
36606041 eq 1 36606017 20001100
36606042 ite 2 36606041 20001102 36606040
36606043 eq 1 36606017 20001200
36606044 ite 2 36606043 20001202 36606042
36606045 eq 1 36606017 20001300
36606046 ite 2 36606045 20001302 36606044
36606047 eq 1 36606017 20001400
36606048 ite 2 36606047 20001402 36606046
36606049 ite 2 16606000 36606048 36605601 ; 0x1020C(~17): ld t0,0(t0)
36606400 constd 2 -8 ; 0xFFFFFFFFFFFFFFF8
36606401 add 2 208 36606400
36606402 ugte 1 36606401 30 ; address >= start of segment
36606403 ult 1 36606401 31 ; address < end of segment
36606404 and 1 36606402 36606403
36606405 sub 2 36606401 30
36606406 slice 6 36606405 6 3
36606407 ite 6 36606404 36606406 8
36606408 ugte 1 36606401 32 ; address >= start of segment
36606409 ult 1 36606401 34 ; address < end of segment
36606410 and 1 36606408 36606409
36606411 sub 2 36606401 36
36606412 slice 6 36606411 6 3
36606413 ite 6 36606410 36606412 36606407
36606414 ugte 1 36606401 35 ; address >= start of segment
36606415 ulte 1 36606401 50 ; address <= end of segment
36606416 and 1 36606414 36606415
36606417 sub 2 36606401 37
36606418 slice 6 36606417 6 3
36606419 ite 6 36606416 36606418 36606413
36606420 ite 2 16606400 36606401 36606018 ; for checking address validity
36606421 eq 1 36606419 20000000
36606422 ite 2 36606421 205 36599623
36606423 ite 2 16606400 36606422 36599623
36606424 eq 1 36606419 20000100
36606425 ite 2 36606424 205 36599626
36606426 ite 2 16606400 36606425 36599626
36606427 eq 1 36606419 20000200
36606428 ite 2 36606427 205 36599629
36606429 ite 2 16606400 36606428 36599629
36606430 eq 1 36606419 20000300
36606431 ite 2 36606430 205 36599632
36606432 ite 2 16606400 36606431 36599632
36606433 eq 1 36606419 20000400
36606434 ite 2 36606433 205 36599635
36606435 ite 2 16606400 36606434 36599635
36606436 eq 1 36606419 20000500
36606437 ite 2 36606436 205 36599638
36606438 ite 2 16606400 36606437 36599638
36606439 eq 1 36606419 20000600
36606440 ite 2 36606439 205 36599641
36606441 ite 2 16606400 36606440 36599641
36606442 eq 1 36606419 20000700
36606443 ite 2 36606442 205 36599644
36606444 ite 2 16606400 36606443 36599644
36606445 eq 1 36606419 20000800
36606446 ite 2 36606445 205 36599647
36606447 ite 2 16606400 36606446 36599647
36606448 eq 1 36606419 20000900
36606449 ite 2 36606448 205 36599650
36606450 ite 2 16606400 36606449 36599650
36606451 eq 1 36606419 20001000
36606452 ite 2 36606451 205 36599653
36606453 ite 2 16606400 36606452 36599653
36606454 eq 1 36606419 20001100
36606455 ite 2 36606454 205 36599656
36606456 ite 2 16606400 36606455 36599656
36606457 eq 1 36606419 20001200
36606458 ite 2 36606457 205 36599659
36606459 ite 2 16606400 36606458 36599659
36606460 eq 1 36606419 20001300
36606461 ite 2 36606460 205 36599662
36606462 ite 2 16606400 36606461 36599662
36606463 eq 1 36606419 20001400
36606464 ite 2 36606463 205 36599665
36606465 ite 2 16606400 36606464 36599665 ; 0x10210(~17): sd t0,-8(s0)
36606800 ite 2 16606800 200 36606049 ; 0x10214(~18): addi t0,zero,0
36607200 ite 2 16607200 205 36595200 ; 0x10218(~18): addi a0,t0,0
36608000 ite 2 16608000 208 36592402 ; 0x10220(~19): addi sp,s0,0
36608400 ugte 1 202 30 ; address >= start of segment
36608401 ult 1 202 31 ; address < end of segment
36608402 and 1 36608400 36608401
36608403 sub 2 202 30
36608404 slice 6 36608403 6 3
36608405 ite 6 36608402 36608404 8
36608406 ugte 1 202 32 ; address >= start of segment
36608407 ult 1 202 34 ; address < end of segment
36608408 and 1 36608406 36608407
36608409 sub 2 202 36
36608410 slice 6 36608409 6 3
36608411 ite 6 36608408 36608410 36608405
36608412 ugte 1 202 35 ; address >= start of segment
36608413 ulte 1 202 50 ; address <= end of segment
36608414 and 1 36608412 36608413
36608415 sub 2 202 37
36608416 slice 6 36608415 6 3
36608417 ite 6 36608414 36608416 36608411
36608418 ite 2 16608400 202 36606420 ; for checking address validity
36608419 eq 1 36608417 20000000
36608420 ite 2 36608419 20000002 20
36608421 eq 1 36608417 20000100
36608422 ite 2 36608421 20000102 36608420
36608423 eq 1 36608417 20000200
36608424 ite 2 36608423 20000202 36608422
36608425 eq 1 36608417 20000300
36608426 ite 2 36608425 20000302 36608424
36608427 eq 1 36608417 20000400
36608428 ite 2 36608427 20000402 36608426
36608429 eq 1 36608417 20000500
36608430 ite 2 36608429 20000502 36608428
36608431 eq 1 36608417 20000600
36608432 ite 2 36608431 20000602 36608430
36608433 eq 1 36608417 20000700
36608434 ite 2 36608433 20000702 36608432
36608435 eq 1 36608417 20000800
36608436 ite 2 36608435 20000802 36608434
36608437 eq 1 36608417 20000900
36608438 ite 2 36608437 20000902 36608436
36608439 eq 1 36608417 20001000
36608440 ite 2 36608439 20001002 36608438
36608441 eq 1 36608417 20001100
36608442 ite 2 36608441 20001102 36608440
36608443 eq 1 36608417 20001200
36608444 ite 2 36608443 20001202 36608442
36608445 eq 1 36608417 20001300
36608446 ite 2 36608445 20001302 36608444
36608447 eq 1 36608417 20001400
36608448 ite 2 36608447 20001402 36608446
36608449 ite 2 16608400 36608448 36587200 ; 0x10224(~19): ld s0,0(sp)
36608800 constd 2 8 ; 0x8
36608801 add 2 202 36608800
36608802 ite 2 16608800 36608801 36608000 ; 0x10228(~19): addi sp,sp,8
36609200 ugte 1 202 30 ; address >= start of segment
36609201 ult 1 202 31 ; address < end of segment
36609202 and 1 36609200 36609201
36609203 sub 2 202 30
36609204 slice 6 36609203 6 3
36609205 ite 6 36609202 36609204 8
36609206 ugte 1 202 32 ; address >= start of segment
36609207 ult 1 202 34 ; address < end of segment
36609208 and 1 36609206 36609207
36609209 sub 2 202 36
36609210 slice 6 36609209 6 3
36609211 ite 6 36609208 36609210 36609205
36609212 ugte 1 202 35 ; address >= start of segment
36609213 ulte 1 202 50 ; address <= end of segment
36609214 and 1 36609212 36609213
36609215 sub 2 202 37
36609216 slice 6 36609215 6 3
36609217 ite 6 36609214 36609216 36609211
36609218 ite 2 16609200 202 36608418 ; for checking address validity
36609219 eq 1 36609217 20000000
36609220 ite 2 36609219 20000002 20
36609221 eq 1 36609217 20000100
36609222 ite 2 36609221 20000102 36609220
36609223 eq 1 36609217 20000200
36609224 ite 2 36609223 20000202 36609222
36609225 eq 1 36609217 20000300
36609226 ite 2 36609225 20000302 36609224
36609227 eq 1 36609217 20000400
36609228 ite 2 36609227 20000402 36609226
36609229 eq 1 36609217 20000500
36609230 ite 2 36609229 20000502 36609228
36609231 eq 1 36609217 20000600
36609232 ite 2 36609231 20000602 36609230
36609233 eq 1 36609217 20000700
36609234 ite 2 36609233 20000702 36609232
36609235 eq 1 36609217 20000800
36609236 ite 2 36609235 20000802 36609234
36609237 eq 1 36609217 20000900
36609238 ite 2 36609237 20000902 36609236
36609239 eq 1 36609217 20001000
36609240 ite 2 36609239 20001002 36609238
36609241 eq 1 36609217 20001100
36609242 ite 2 36609241 20001102 36609240
36609243 eq 1 36609217 20001200
36609244 ite 2 36609243 20001202 36609242
36609245 eq 1 36609217 20001300
36609246 ite 2 36609245 20001302 36609244
36609247 eq 1 36609217 20001400
36609248 ite 2 36609247 20001402 36609246
36609249 ite 2 16609200 36609248 36594801 ; 0x1022C(~19): ld ra,0(sp)
36609600 constd 2 8 ; 0x8
36609601 add 2 202 36609600
36609602 ite 2 16609600 36609601 36608802 ; 0x10230(~19): addi sp,sp,8

; syscalls

40000000 constd 2 93 ; SYSCALL_EXIT
40000001 constd 2 63 ; SYSCALL_READ
40000002 constd 2 64 ; SYSCALL_WRITE
40000003 constd 2 56 ; SYSCALL_OPENAT
40000004 constd 2 214 ; SYSCALL_BRK

40000010 eq 1 217 40000000 ; $a7 == SYSCALL_EXIT
40000011 eq 1 217 40000001 ; $a7 == SYSCALL_READ
40000012 eq 1 217 40000002 ; $a7 == SYSCALL_WRITE
40000013 eq 1 217 40000003 ; $a7 == SYSCALL_OPENAT
40000014 eq 1 217 40000004 ; $a7 == SYSCALL_BRK

41000000 and 1 36578800 40000010 ; exit ecall is active
41000001 ite 1 60 40000010 41000000 ; stay in kernel mode indefinitely if exit ecall is active

42000000 and 1 36578800 40000011 ; read ecall is active
42000001 ite 2 42000000 211 36609218 ; $a1 is start address of buffer for checking address validity
42000002 ite 1 42000000 11 41000001 ; go into kernel mode if read ecall is active
42000003 ite 2 42000000 20 36607200 ; set $a0 = 0 bytes if read ecall is active
42000004 sub 2 212 210 ; $a2 - $a0
42000005 ugte 1 42000004 28 ; $a2 - $a0 >= 8 bytes
42000006 ite 2 42000005 28 42000004 ; read 8 bytes if $a2 - $a0 >= 8 bytes, or else $a2 - $a0 bytes
42000007 eq 1 42000006 22 ; increment == 2
42000008 ite 2 42000007 92 91 ; unsigned-extended 2-byte input if increment == 2, or else unsigned-extended 1-byte input
42000009 eq 1 42000006 23 ; increment == 3
42000010 ite 2 42000009 93 42000008 ; unsigned-extended 3-byte input if increment == 3
42000011 eq 1 42000006 24 ; increment == 4
42000012 ite 2 42000011 94 42000010 ; unsigned-extended 4-byte input if increment == 4
42000013 eq 1 42000006 25 ; increment == 5
42000014 ite 2 42000013 95 42000012 ; unsigned-extended 5-byte input if increment == 5
42000015 eq 1 42000006 26 ; increment == 6
42000016 ite 2 42000015 96 42000014 ; unsigned-extended 6-byte input if increment == 6
42000017 eq 1 42000006 27 ; increment == 7
42000018 ite 2 42000017 97 42000016 ; unsigned-extended 7-byte input if increment == 7
42000019 eq 1 42000006 28 ; increment == 8
42000020 ite 2 42000019 98 42000018 ; 8-byte input if increment == 8
42000021 add 2 211 210 ; $a1 + $a0
42000022 ugte 1 42000021 30 ; address >= start of segment
42000023 ult 1 42000021 31 ; address < end of segment
42000024 and 1 42000022 42000023
42000025 sub 2 42000021 30
42000026 slice 6 42000025 6 3
42000027 ite 6 42000024 42000026 8
42000028 ugte 1 42000021 32 ; address >= start of segment
42000029 ult 1 42000021 34 ; address < end of segment
42000030 and 1 42000028 42000029
42000031 sub 2 42000021 36
42000032 slice 6 42000031 6 3
42000033 ite 6 42000030 42000032 42000027
42000034 ugte 1 42000021 35 ; address >= start of segment
42000035 ulte 1 42000021 50 ; address <= end of segment
42000036 and 1 42000034 42000035
42000037 sub 2 42000021 37
42000038 slice 6 42000037 6 3
42000039 ite 6 42000036 42000038 42000033
42000040 ult 1 210 212 ; $a0 < $a2
42000041 and 1 40000011 42000040 ; $a7 == SYSCALL_READ and $a0 < $a2
42000042 and 1 60 42000041 ; read ecall is in kernel mode and not done yet
42000043 ugt 1 42000006 20 ; increment > 0
42000044 and 1 42000042 42000043 ; read ecall is in kernel mode and not done yet and increment > 0
42000045 eq 1 42000039 20000000
42000046 ite 2 42000045 42000020 36606423
42000047 ite 2 42000044 42000046 36606423 ; read input into RAM[$a1 + $a0]
42000048 eq 1 42000039 20000100
42000049 ite 2 42000048 42000020 36606426
42000050 ite 2 42000044 42000049 36606426 ; read input into RAM[$a1 + $a0]
42000051 eq 1 42000039 20000200
42000052 ite 2 42000051 42000020 36606429
42000053 ite 2 42000044 42000052 36606429 ; read input into RAM[$a1 + $a0]
42000054 eq 1 42000039 20000300
42000055 ite 2 42000054 42000020 36606432
42000056 ite 2 42000044 42000055 36606432 ; read input into RAM[$a1 + $a0]
42000057 eq 1 42000039 20000400
42000058 ite 2 42000057 42000020 36606435
42000059 ite 2 42000044 42000058 36606435 ; read input into RAM[$a1 + $a0]
42000060 eq 1 42000039 20000500
42000061 ite 2 42000060 42000020 36606438
42000062 ite 2 42000044 42000061 36606438 ; read input into RAM[$a1 + $a0]
42000063 eq 1 42000039 20000600
42000064 ite 2 42000063 42000020 36606441
42000065 ite 2 42000044 42000064 36606441 ; read input into RAM[$a1 + $a0]
42000066 eq 1 42000039 20000700
42000067 ite 2 42000066 42000020 36606444
42000068 ite 2 42000044 42000067 36606444 ; read input into RAM[$a1 + $a0]
42000069 eq 1 42000039 20000800
42000070 ite 2 42000069 42000020 36606447
42000071 ite 2 42000044 42000070 36606447 ; read input into RAM[$a1 + $a0]
42000072 eq 1 42000039 20000900
42000073 ite 2 42000072 42000020 36606450
42000074 ite 2 42000044 42000073 36606450 ; read input into RAM[$a1 + $a0]
42000075 eq 1 42000039 20001000
42000076 ite 2 42000075 42000020 36606453
42000077 ite 2 42000044 42000076 36606453 ; read input into RAM[$a1 + $a0]
42000078 eq 1 42000039 20001100
42000079 ite 2 42000078 42000020 36606456
42000080 ite 2 42000044 42000079 36606456 ; read input into RAM[$a1 + $a0]
42000081 eq 1 42000039 20001200
42000082 ite 2 42000081 42000020 36606459
42000083 ite 2 42000044 42000082 36606459 ; read input into RAM[$a1 + $a0]
42000084 eq 1 42000039 20001300
42000085 ite 2 42000084 42000020 36606462
42000086 ite 2 42000044 42000085 36606462 ; read input into RAM[$a1 + $a0]
42000087 eq 1 42000039 20001400
42000088 ite 2 42000087 42000020 36606465
42000089 ite 2 42000044 42000088 36606465 ; read input into RAM[$a1 + $a0]
42000090 add 2 210 42000006 ; $a0 + increment
42000091 ite 2 42000042 42000090 42000003 ; set $a0 = $a0 + increment if read ecall is in kernel mode and not done yet
42000092 ite 1 42000042 11 42000002 ; stay in kernel mode if read ecall is in kernel mode and not done yet

43000000 and 1 36578800 40000012 ; write ecall is active
43000001 ite 2 43000000 211 42000001 ; $a1 is start address of buffer for checking address validity
43000002 ite 2 43000000 212 42000091 ; set $a0 = $a2 if write ecall is active

44000000 and 1 36578800 40000013 ; openat ecall is active
44000001 ite 2 44000000 211 43000001 ; $a1 is start address of buffer for checking address validity
44000002 state 2 fd-bump-pointer
44000003 init 2 44000002 21 ; initial fd-bump-pointer is 1 (file descriptor bump pointer)
44000004 inc 2 44000002
44000005 ite 2 44000000 44000004 44000002 ; fd-bump-pointer + 1 if openat ecall is active
44000006 next 2 44000002 44000005 ; increment fd-bump-pointer if openat ecall is active
44000007 ite 2 44000000 44000004 43000002 ; set $a0 = fd-bump-pointer + 1 if openat ecall is active

45000000 and 1 36578800 40000014 ; brk ecall is active
45000001 state 2 brk-bump-pointer
45000002 init 2 45000001 33 ; current program break
45000003 ulte 1 45000001 210 ; brk <= $a0
45000004 ult 1 210 202 ; $a0 < $sp
45000005 and 1 45000003 45000004 ; brk <= $a0 < $sp
45000006 and 2 210 27 ; reset all but 3 LSBs of $a0
45000007 eq 1 45000006 20 ; 3 LSBs of $a0 == 0 ($a0 is word-aligned)
45000008 and 1 45000005 45000007 ; brk <= $a0 < $sp and $a0 is word-aligned ($a0 is valid)
45000009 and 1 45000000 45000008 ; brk ecall is active and $a0 is valid
45000010 ite 2 45000009 210 45000001 ; brk = $a0 if brk ecall is active and $a0 is valid
45000011 next 2 45000001 45000010 ; set brk = $a0 if brk ecall is active and $a0 is valid
45000012 not 1 45000008 ; $a0 is invalid
45000013 and 1 45000000 45000012 ; brk ecall is active and $a0 is invalid
45000014 ite 2 45000013 45000001 44000007 ; set $a0 = brk if brk ecall is active and $a0 is invalid

46000000 next 1 60 42000092 ; updating kernel-mode flag

; control flow

56553600 next 1 16553600 10 ; ->65536[0x10000](~1)
; 65536[0x10000](~1)
56554000 next 1 16554000 16553600 ; ->65540[0x10004](~1)
; 65540[0x10004](~1)
56554400 next 1 16554400 16554000 ; ->65544[0x10008](~1)
; 65544[0x10008](~1)
56554800 next 1 16554800 16554400 ; ->65548[0x1000C](~1)
; 65548[0x1000C](~1)
56555200 next 1 16555200 16554800 ; ->65552[0x10010](~1)
; 65552[0x10010](~1)
56555600 next 1 16555600 16555200 ; ->65556[0x10014](~1)
56556000 state 1 kernel-mode-pc-flag-65556[0x10014](~1)
56556001 init 1 56556000 10 ; ecall is initially inactive
56556002 ite 1 56556000 60 16555600 ; activate ecall and keep active while in kernel mode
56556003 next 1 56556000 56556002 ; keep ecall active while in kernel mode
56556004 and 1 56556000 62 ; ecall is active but not in kernel mode anymore
56556005 next 1 16556000 56556004 ; ->65560[0x10018](~1)
; 65560[0x10018](~1)
56556400 next 1 16556400 16556000 ; ->65564[0x1001C](~1)
; 65564[0x1001C](~1)
56556800 next 1 16556800 16556400 ; ->65568[0x10020](~1)
; 65568[0x10020](~1)
56557200 next 1 16557200 16556800 ; ->65572[0x10024](~1)
; 65572[0x10024](~1)
56557600 next 1 16557600 16557200 ; ->65576[0x10028](~1)
; 65576[0x10028](~1)
56558000 next 1 16558000 16557600 ; ->65580[0x1002C](~1)
56558400 state 1 kernel-mode-pc-flag-65580[0x1002C](~1)
56558401 init 1 56558400 10 ; ecall is initially inactive
56558402 ite 1 56558400 60 16558000 ; activate ecall and keep active while in kernel mode
56558403 next 1 56558400 56558402 ; keep ecall active while in kernel mode
56558404 and 1 56558400 62 ; ecall is active but not in kernel mode anymore
56558405 next 1 16558400 56558404 ; ->65584[0x10030](~1)
; 65584[0x10030](~1)
56558800 next 1 16558800 16558400 ; ->65588[0x10034](~1)
; 65588[0x10034](~1)
56559200 next 1 16559200 16558800 ; ->65592[0x10038](~1)
; 65592[0x10038](~1)
56559600 next 1 16559600 16559200 ; ->65596[0x1003C](~1)
; 65596[0x1003C](~1)
56560000 next 1 16560000 16559600 ; ->65600[0x10040](~1)
; 65600[0x10040](~1)
56560400 next 1 16560400 16560000 ; ->65604[0x10044](~1)
; 65604[0x10044](~1)
56560800 next 1 16560800 16560400 ; ->65608[0x10048](~1)
; 65608[0x10048](~1)
56561200 next 1 16561200 16560800 ; ->65612[0x1004C](~1)
56561600 not 2 21 ; jalr 66100[0x10234](~19)
56561601 and 2 201 56561600
56561602 eq 1 56561601 36561200
56561603 and 1 16610000 56561602
56561604 next 1 16561600 56561603 ; ->65616[0x10050](~1)
; 65616[0x10050](~1)
56562000 next 1 16562000 16561600 ; ->65620[0x10054](~1)
; 65620[0x10054](~1)
56562400 next 1 16562400 16562000 ; ->65624[0x10058](~1)
; 65624[0x10058](~1)
56562800 next 1 16562800 16562400 ; ->65628[0x1005C](~1)
; 65628[0x1005C](~1)
56563200 next 1 16563200 16562800 ; ->65632[0x10060](~1)
; 65632[0x10060](~1)
56563600 next 1 16563600 16563200 ; ->65636[0x10064](~1)
; jal 65948[0x1019C](~8)
56564000 state 1 kernel-mode-pc-flag-65636[0x10064](~1)
56564001 init 1 56564000 10 ; ecall is initially inactive
56564002 ite 1 56564000 60 16563600 ; activate ecall and keep active while in kernel mode
56564003 next 1 56564000 56564002 ; keep ecall active while in kernel mode
56564004 and 1 56564000 62 ; ecall is active but not in kernel mode anymore
56564005 ite 1 56564004 11 16594800
56564006 next 1 16564000 56564005 ; ->65640[0x10068](~1)
; 65640[0x10068](~1)
56564400 next 1 16564400 16564000 ; ->65644[0x1006C](~1)
; 65644[0x1006C](~1)
56564800 next 1 16564800 16564400 ; ->65648[0x10070](~1)
; 65648[0x10070](~1)
56565200 next 1 16565200 16564800 ; ->65652[0x10074](~1)
; 65652[0x10074](~1)
56565600 next 1 16565600 16565200 ; ->65656[0x10078](~1)
; 65656[0x10078](~1)
56566000 next 1 16566000 16565600 ; ->65660[0x1007C](~1)
; 65660[0x1007C](~1)
56566400 next 1 16566400 16566000 ; ->65664[0x10080](~1)
; 65664[0x10080](~1)
56566800 next 1 16566800 16566400 ; ->65668[0x10084](~1)
56567200 state 1 kernel-mode-pc-flag-65668[0x10084](~1)
56567201 init 1 56567200 10 ; ecall is initially inactive
56567202 ite 1 56567200 60 16566800 ; activate ecall and keep active while in kernel mode
56567203 next 1 56567200 56567202 ; keep ecall active while in kernel mode
56567204 and 1 56567200 62 ; ecall is active but not in kernel mode anymore
56567205 next 1 16567200 56567204 ; ->65672[0x10088](~1)
; jal 65892[0x10164](~4)
56575200 next 1 16575200 16589200 ; ->65752[0x100D8](~1)
; 65752[0x100D8](~1)
56575600 next 1 16575600 16575200 ; ->65756[0x100DC](~1)
; 65756[0x100DC](~1)
56576000 next 1 16576000 16575600 ; ->65760[0x100E0](~1)
; 65760[0x100E0](~1)
56576400 next 1 16576400 16576000 ; ->65764[0x100E4](~1)
; 65764[0x100E4](~1)
56576800 next 1 16576800 16576400 ; ->65768[0x100E8](~1)
; 65768[0x100E8](~1)
56577200 next 1 16577200 16576800 ; ->65772[0x100EC](~1)
; 65772[0x100EC](~1)
56577600 next 1 16577600 16577200 ; ->65776[0x100F0](~1)
; 65776[0x100F0](~1)
56578000 next 1 16578000 16577600 ; ->65780[0x100F4](~1)
; 65780[0x100F4](~1)
56578400 next 1 16578400 16578000 ; ->65784[0x100F8](~1)
; 65784[0x100F8](~1)
56578800 next 1 16578800 16578400 ; ->65788[0x100FC](~1)
56579200 state 1 kernel-mode-pc-flag-65788[0x100FC](~1)
56579201 init 1 56579200 10 ; ecall is initially inactive
56579202 ite 1 56579200 60 16578800 ; activate ecall and keep active while in kernel mode
56579203 next 1 56579200 56579202 ; keep ecall active while in kernel mode
56579204 and 1 56579200 62 ; ecall is active but not in kernel mode anymore
56579205 next 1 16579200 56579204 ; ->65792[0x10100](~1)
56579600 and 1 16579200 36579201 ; beq 65792[0x10100](~1)
56579601 next 1 16579600 56579600 ; ->65796[0x10104](~1)
56580000 and 1 16579600 36579601 ; beq 65796[0x10104](~1)
56580001 and 1 16579200 36579200 ; beq 65792[0x10100](~1)
56580002 ite 1 56580001 11 56580000
56580003 next 1 16580000 56580002 ; ->65800[0x10108](~1)
56580400 and 1 16580000 36580001 ; beq 65800[0x10108](~1)
56580401 next 1 16580400 56580400 ; ->65804[0x1010C](~1)
; 65804[0x1010C](~1)
56580800 next 1 16580800 16580400 ; ->65808[0x10110](~1)
56581200 and 1 16580800 36580801 ; beq 65808[0x10110](~1)
56581201 and 1 16580000 36580000 ; beq 65800[0x10108](~1)
56581202 ite 1 56581201 11 56581200
56581203 and 1 16579600 36579600 ; beq 65796[0x10104](~1)
56581204 ite 1 56581203 11 56581202
56581205 next 1 16581200 56581204 ; ->65812[0x10114](~1)
; 65812[0x10114](~1)
56581600 next 1 16581600 16581200 ; ->65816[0x10118](~1)
; 65816[0x10118](~1)
56582000 and 1 16580800 36580800 ; beq 65808[0x10110](~1)
56582001 ite 1 56582000 11 16581600
56582002 next 1 16582000 56582001 ; ->65820[0x1011C](~1)
; jal 65612[0x1004C](~1)
56585600 next 1 16585600 16561200 ; ->65856[0x10140](~4)
; 65856[0x10140](~4)
56586000 next 1 16586000 16585600 ; ->65860[0x10144](~4)
; 65860[0x10144](~4)
56586400 next 1 16586400 16586000 ; ->65864[0x10148](~4)
; 65864[0x10148](~4)
56586800 next 1 16586800 16586400 ; ->65868[0x1014C](~4)
; 65868[0x1014C](~4)
56587200 next 1 16587200 16586800 ; ->65872[0x10150](~4)
; 65872[0x10150](~4)
56587600 next 1 16587600 16587200 ; ->65876[0x10154](~4)
; 65876[0x10154](~4)
56588000 next 1 16588000 16587600 ; ->65880[0x10158](~4)
; 65880[0x10158](~4)
56588400 next 1 16588400 16588000 ; ->65884[0x1015C](~4)
; 65884[0x1015C](~4)
56588800 next 1 16588800 16588400 ; ->65888[0x10160](~4)
; 65888[0x10160](~4)
56589200 next 1 16589200 16588800 ; ->65892[0x10164](~4)
56589600 not 2 21 ; jalr 65820[0x1011C](~1)
56589601 and 2 201 56589600
56589602 eq 1 56589601 36589200
56589603 and 1 16582000 56589602
56589604 next 1 16589600 56589603 ; ->65896[0x10168](~4)
; 65896[0x10168](~4)
56590000 next 1 16590000 16589600 ; ->65900[0x1016C](~4)
; 65900[0x1016C](~4)
56590400 next 1 16590400 16590000 ; ->65904[0x10170](~4)
; 65904[0x10170](~4)
56590800 next 1 16590800 16590400 ; ->65908[0x10174](~6)
; 65908[0x10174](~6)
56591200 next 1 16591200 16590800 ; ->65912[0x10178](~6)
; 65912[0x10178](~6)
56591600 next 1 16591600 16591200 ; ->65916[0x1017C](~6)
; 65916[0x1017C](~6)
56592000 next 1 16592000 16591600 ; ->65920[0x10180](~8)
; 65920[0x10180](~8)
56592400 next 1 16592400 16592000 ; ->65924[0x10184](~8)
; 65924[0x10184](~8)
56592800 next 1 16592800 16592400 ; ->65928[0x10188](~8)
; 65928[0x10188](~8)
56593200 next 1 16593200 16592800 ; ->65932[0x1018C](~8)
; 65932[0x1018C](~8)
56593600 next 1 16593600 16593200 ; ->65936[0x10190](~8)
; 65936[0x10190](~8)
56594000 next 1 16594000 16593600 ; ->65940[0x10194](~8)
; 65940[0x10194](~8)
56594400 next 1 16594400 16594000 ; ->65944[0x10198](~8)
; 65944[0x10198](~8)
56594800 next 1 16594800 16594400 ; ->65948[0x1019C](~8)
56595200 not 2 21 ; jalr 65672[0x10088](~1)
56595201 and 2 201 56595200
56595202 eq 1 56595201 36594800
56595203 and 1 16567200 56595202
56595204 next 1 16595200 56595203 ; ->65952[0x101A0](~8)
; 65952[0x101A0](~8)
56595600 next 1 16595600 16595200 ; ->65956[0x101A4](~10)
; 65956[0x101A4](~10)
56596000 next 1 16596000 16595600 ; ->65960[0x101A8](~10)
; 65960[0x101A8](~10)
56596400 next 1 16596400 16596000 ; ->65964[0x101AC](~10)
; jal 66000[0x101D0](~15)
; 65964[0x101AC](~10)
56596800 ite 1 16596400 11 16600000
56596801 next 1 16596800 56596800 ; ->65968[0x101B0](~12)
; 65968[0x101B0](~12)
56597200 next 1 16597200 16596800 ; ->65972[0x101B4](~12)
; 65972[0x101B4](~12)
56597600 next 1 16597600 16597200 ; ->65976[0x101B8](~12)
; 65976[0x101B8](~12)
56598000 next 1 16598000 16597600 ; ->65980[0x101BC](~12)
56598400 and 1 16598000 36598001 ; beq 65980[0x101BC](~12)
56598401 next 1 16598400 56598400 ; ->65984[0x101C0](~13)
; 65984[0x101C0](~13)
56598800 next 1 16598800 16598400 ; ->65988[0x101C4](~13)
; 65988[0x101C4](~13)
56599200 next 1 16599200 16598800 ; ->65992[0x101C8](~13)
; 65992[0x101C8](~13)
56599600 next 1 16599600 16599200 ; ->65996[0x101CC](~13)
; 65996[0x101CC](~13)
56600000 next 1 16600000 16599600 ; ->66000[0x101D0](~15)
56600400 and 1 16598000 36598000 ; beq 65980[0x101BC](~12)
56600401 next 1 16600400 56600400 ; ->66004[0x101D4](~15)
; 66004[0x101D4](~15)
56600800 next 1 16600800 16600400 ; ->66008[0x101D8](~15)
; 66008[0x101D8](~15)
56601200 next 1 16601200 16600800 ; ->66012[0x101DC](~15)
; 66012[0x101DC](~15)
56601600 next 1 16601600 16601200 ; ->66016[0x101E0](~15)
; 66016[0x101E0](~15)
56602000 next 1 16602000 16601600 ; ->66020[0x101E4](~15)
; 66020[0x101E4](~15)
56602400 next 1 16602400 16602000 ; ->66024[0x101E8](~15)
; 66024[0x101E8](~15)
56602800 next 1 16602800 16602400 ; ->66028[0x101EC](~15)
; 66028[0x101EC](~15)
56603200 next 1 16603200 16602800 ; ->66032[0x101F0](~15)
; 66032[0x101F0](~15)
56603600 next 1 16603600 16603200 ; ->66036[0x101F4](~15)
56604000 and 1 16603600 36603601 ; beq 66036[0x101F4](~15)
56604001 next 1 16604000 56604000 ; ->66040[0x101F8](~17)
; 66040[0x101F8](~17)
56604400 next 1 16604400 16604000 ; ->66044[0x101FC](~17)
; 66044[0x101FC](~17)
56604800 next 1 16604800 16604400 ; ->66048[0x10200](~17)
; 66048[0x10200](~17)
56605200 next 1 16605200 16604800 ; ->66052[0x10204](~17)
; 66052[0x10204](~17)
56605600 next 1 16605600 16605200 ; ->66056[0x10208](~17)
; 66056[0x10208](~17)
56606000 next 1 16606000 16605600 ; ->66060[0x1020C](~17)
; 66060[0x1020C](~17)
56606400 next 1 16606400 16606000 ; ->66064[0x10210](~17)
; 66064[0x10210](~17)
56606800 and 1 16603600 36603600 ; beq 66036[0x101F4](~15)
56606801 ite 1 56606800 11 16606400
56606802 next 1 16606800 56606801 ; ->66068[0x10214](~18)
; 66068[0x10214](~18)
56607200 next 1 16607200 16606800 ; ->66072[0x10218](~18)
; 66072[0x10218](~18)
56607600 next 1 16607600 16607200 ; ->66076[0x1021C](~18)
; jal 66076[0x1021C](~18)
56608000 next 1 16608000 16607600 ; ->66080[0x10220](~19)
; 66080[0x10220](~19)
56608400 next 1 16608400 16608000 ; ->66084[0x10224](~19)
; 66084[0x10224](~19)
56608800 next 1 16608800 16608400 ; ->66088[0x10228](~19)
; 66088[0x10228](~19)
56609200 next 1 16609200 16608800 ; ->66092[0x1022C](~19)
; 66092[0x1022C](~19)
56609600 next 1 16609600 16609200 ; ->66096[0x10230](~19)
; 66096[0x10230](~19)
56610000 next 1 16610000 16609600 ; ->66100[0x10234](~19)

; updating registers

60000001 next 2 201 36609249 ra ; register $1
60000002 next 2 202 36609602 sp ; register $2
60000003 next 2 203 36554400 gp ; register $3
60000004 next 2 204 204 tp ; register $4
60000005 next 2 205 36606800 t0 ; register $5
60000006 next 2 206 36605201 t1 ; register $6
60000007 next 2 207 36604801 t2 ; register $7
60000008 next 2 208 36608449 s0 ; register $8
60000009 next 2 209 209 s1 ; register $9
60000010 next 2 210 45000014 a0 ; register $10
60000011 next 2 211 36564849 a1 ; register $11
60000012 next 2 212 36565649 a2 ; register $12
60000013 next 2 213 213 a3 ; register $13
60000014 next 2 214 214 a4 ; register $14
60000015 next 2 215 215 a5 ; register $15
60000016 next 2 216 216 a6 ; register $16
60000017 next 2 217 36578401 a7 ; register $17
60000018 next 2 218 218 s2 ; register $18
60000019 next 2 219 219 s3 ; register $19
60000020 next 2 220 220 s4 ; register $20
60000021 next 2 221 221 s5 ; register $21
60000022 next 2 222 222 s6 ; register $22
60000023 next 2 223 223 s7 ; register $23
60000024 next 2 224 224 s8 ; register $24
60000025 next 2 225 225 s9 ; register $25
60000026 next 2 226 226 s10 ; register $26
60000027 next 2 227 227 s11 ; register $27
60000028 next 2 228 228 t3 ; register $28
60000029 next 2 229 229 t4 ; register $29
60000030 next 2 230 230 t5 ; register $30
60000031 next 2 231 231 t6 ; register $31

; updating 4-bit physical memory

70000000 next 2 20000002 42000047 RAM-word-0
70000001 next 2 20000102 42000050 RAM-word-1
70000002 next 2 20000202 42000053 RAM-word-2
70000003 next 2 20000302 42000056 RAM-word-3
70000004 next 2 20000402 42000059 RAM-word-4
70000005 next 2 20000502 42000062 RAM-word-5
70000006 next 2 20000602 42000065 RAM-word-6
70000007 next 2 20000702 42000068 RAM-word-7
70000008 next 2 20000802 42000071 RAM-word-8
70000009 next 2 20000902 42000074 RAM-word-9
70000010 next 2 20001002 42000077 RAM-word-10
70000011 next 2 20001102 42000080 RAM-word-11
70000012 next 2 20001202 42000083 RAM-word-12
70000013 next 2 20001302 42000086 RAM-word-13
70000014 next 2 20001402 42000089 RAM-word-14

; checking syscall id

80000000 not 1 40000010 ; $a7 != SYSCALL_EXIT
80000001 not 1 40000011 ; $a7 != SYSCALL_READ
80000002 not 1 40000012 ; $a7 != SYSCALL_WRITE
80000003 not 1 40000013 ; $a7 != SYSCALL_OPENAT
80000004 not 1 40000014 ; $a7 != SYSCALL_BRK
80000005 and 1 80000000 80000001 ; ... and $a7 != SYSCALL_READ
80000006 and 1 80000005 80000002 ; ... and $a7 != SYSCALL_WRITE
80000007 and 1 80000006 80000003 ; ... and $a7 != SYSCALL_OPENAT
80000008 and 1 80000007 80000004 ; ... and $a7 != SYSCALL_BRK

80000009 and 1 36578800 80000008 ; ecall is active for invalid syscall id
80000010 bad 80000009 b0 ; invalid syscall id

; checking exit code

80000011 neq 1 210 20 ; $a0 != zero exit code
80000012 and 1 41000000 80000011 ; exit ecall is active with non-zero exit code
80000013 bad 80000012 b1 ; non-zero exit code

; checking division and remainder by zero

80000014 eq 1 21 20
80000015 bad 80000014 b2 ; division by zero

80000016 eq 1 36576800 20
80000017 bad 80000016 b3 ; remainder by zero

; checking address validity

; is start address of memory access word-aligned?

80000018 and 2 44000001 27 ; reset all but 3 LSBs of address
80000019 neq 1 80000018 20 ; 3 LSBs of address != 0 (address is not word-aligned)
80000020 bad 80000019 b4 ; word-unaligned memory access

; checking segmentation faults

; is start address of memory access in a valid segment?

80000021 ult 1 44000001 30 ; address < start of data segment
80000022 bad 80000021 b5 ; memory access below data segment
80000023 ugte 1 44000001 31 ; address >= end of data segment
80000024 ult 1 44000001 32 ; address < start of heap segment
80000025 and 1 80000023 80000024
80000026 bad 80000025 b6 ; memory access in between data and heap segments
80000027 ugte 1 44000001 45000001 ; address >= current end of heap segment
80000028 ult 1 44000001 202 ; address < current start of stack segment
80000029 and 1 80000027 80000028
80000030 bad 80000029 b7 ; memory access in between current heap and stack segments
80000031 ugte 1 44000001 34 ; address >= allowed end of heap segment
80000032 ult 1 44000001 45000001 ; address < current end of heap segment
80000033 and 1 80000031 80000032
80000034 bad 80000033 b8 ; memory access in between allowed and current end of heap segment
80000035 ugte 1 44000001 202 ; address >= current start of stack segment
80000036 ult 1 44000001 35 ; address < allowed start of stack segment
80000037 and 1 80000035 80000036
80000038 bad 80000037 b9 ; memory access in between current and allowed start of stack segment
80000039 ugt 1 44000001 50 ; address > highest address in 32-bit virtual address space (4GB)
80000040 bad 80000039 b10 ; memory access above stack segment

; end of BTOR2 s.btor2
